var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AddgatheringComponent.html",[0,0.143,1,0.422]],["body/components/AddgatheringComponent.html",[0,0.18,1,0.593,2,0.493,3,0.194,4,0.165,5,0.442,6,0.442,7,0.442,8,0.165,9,1.766,10,0.737,11,0.891,12,0.442,13,1.24,14,1.015,15,3.222,16,0.671,17,3.222,18,0.257,19,0.608,20,3.892,21,2.666,22,3.892,23,2.774,24,2.633,25,2.48,26,1.474,27,0.671,28,3.611,29,1.51,30,0.994,31,2.053,32,2.768,33,2.768,34,2.053,35,2.008,36,0.442,37,1.213,38,2.099,39,1.422,40,1.696,41,2.633,42,1.401,43,2.678,44,1.663,45,1.51,46,0.891,47,1.101,48,2.125,49,0.976,50,0.035,51,0.715,52,0.781,53,0.891,54,2.125,55,1.023,56,0.881,57,1.51,58,2.035,59,2.125,60,2.125,61,2.053,62,2.125,63,1.577,64,2.125,65,2.125,66,1.51,67,2.125,68,2.222,69,2.125,70,1.068,71,1.663,72,1.377,73,1.995,74,2.125,75,1.09,76,1.824,77,2.125,78,2.125,79,1.391,80,2.125,81,2.125,82,1.354,83,2.125,84,0.57,85,0.257,86,0.908,87,0.76,88,0.737,89,0.533,90,0.533,91,0.908,92,2.125,93,1.53,94,1.766,95,0.76,96,0.194,97,0.165,98,1.213,99,1.53,100,1.213,101,1.4,102,1.766,103,1.213,104,1.354,105,2.125,106,2.535,107,2.678,108,3.128,109,2.678,110,1.258,111,2.125,112,1.662,113,1.096,114,1.096,115,1.53,116,1.354,117,1.354,118,1.354,119,1.52,120,2.125,121,3.892,122,0.737,123,0.83,124,1.213,125,1.354,126,1.354,127,1.213,128,0.996,129,2.125,130,2.125,131,2.125,132,2.125,133,1.823,134,2.125,135,2.125,136,2.125,137,1.354,138,1.377,139,2.125,140,2.035,141,2.125,142,1.51,143,2.125,144,2.32,145,2.125,146,1.53,147,0.735,148,1.53,149,1.354,150,2.053,151,2.035,152,1.213,153,1.213,154,1.51,155,0.996,156,0.996,157,0.996,158,0.996,159,2.188,160,1.354,161,1.354,162,1.377,163,0.996,164,1.354,165,0.996,166,0.996,167,0.996,168,4.085,169,3.131,170,2.48,171,3.222,172,0.362,173,0.671,174,0.442,175,0.904,176,0.442,177,0.442,178,0.257,179,0.442,180,0.257,181,0.442,182,0.29,183,0.442,184,0.257,185,0.442,186,0.29,187,0.442,188,0.257,189,0.442,190,0.29,191,0.442,192,0.257,193,0.442,194,0.257,195,0.442,196,0.257,197,0.442,198,0.257,199,0.442,200,0.257,201,0.325,202,0.442,203,0.257,204,0.362,205,0.442,206,0.29,207,0.442,208,0.29,209,0.442,210,0.442,211,0.442,212,0.011,213,0.017,214,0.011]],["title/components/AdmineditComponent.html",[0,0.143,178,0.373]],["body/components/AdmineditComponent.html",[0,0.217,1,0.257,2,0.449,3,0.172,4,0.146,5,0.392,6,0.392,7,0.392,8,0.146,10,0.671,11,1.011,12,0.392,13,1.216,14,1.002,16,0.611,18,0.227,19,0.554,21,2.059,23,2.77,24,1.513,25,2.298,26,1.558,27,0.611,29,1.375,30,0.932,31,1.869,32,2.596,33,2.596,34,1.869,35,1.86,36,0.611,37,1.074,38,1.999,39,1.334,40,1.591,41,2.521,42,1.342,45,1.375,46,0.825,47,1.085,49,1.022,50,0.035,51,0.887,52,0.774,53,0.825,55,0.974,56,0.834,57,1.375,58,1.909,61,1.869,63,0.88,66,2.193,68,1.675,70,1.285,71,1.541,72,1.253,73,1.999,75,1.022,76,1.69,79,1.807,82,1.199,84,0.55,85,0.354,86,0.804,87,0.672,88,0.671,89,0.472,90,0.472,91,0.804,95,0.672,96,0.172,97,0.146,98,1.074,99,1.355,100,1.074,101,1.222,103,1.074,104,1.199,110,1.408,112,1.513,113,0.97,114,0.97,115,1.355,116,1.199,117,1.199,118,1.199,119,1.146,122,1.258,123,0.734,124,1.074,125,1.199,126,1.199,127,2.326,128,1.909,133,1.725,137,1.199,138,1.999,140,1.909,142,0.881,144,1.355,146,1.355,147,0.681,148,1.355,149,1.869,150,1.869,151,2.07,152,1.675,153,1.675,154,1.375,155,0.881,156,0.881,157,0.881,158,0.881,159,2.29,160,1.199,161,1.199,162,1.253,163,0.881,164,1.199,165,1.909,166,0.881,167,0.881,169,3.222,172,0.321,173,0.611,174,0.392,175,0.848,176,0.392,177,0.392,178,0.492,179,0.392,180,0.227,181,0.392,182,0.257,183,0.392,184,0.227,185,0.392,186,0.257,187,0.392,188,0.227,189,0.392,190,0.257,191,0.392,192,0.227,193,0.392,194,0.227,195,0.392,196,0.227,197,0.392,198,0.227,199,0.392,200,0.227,201,0.288,202,0.392,203,0.227,204,0.321,205,0.392,206,0.257,207,0.392,208,0.257,209,0.392,210,0.392,211,0.392,212,0.01,213,0.016,214,0.01,215,1.564,216,2.439,217,2.933,218,3.606,219,3.606,220,3.606,221,3.606,222,3.386,223,1.881,224,1.881,225,1.881,226,1.881,227,1.881,228,1.253,229,1.513,230,2.101,231,2.113,232,1.869,233,2.998,234,2.998,235,1.881,236,1.881,237,1.881,238,1.881,239,1.881,240,1.881,241,1.881,242,1.881,243,1.881,244,1.881,245,1.881,246,0.734,247,3.52,248,0.97,249,0.804,250,0.734,251,1.881,252,1.513,253,1.513,254,1.146,255,1.828,256,1.355,257,1.881,258,1.564,259,2.933,260,2.439,261,1.564,262,1.564,263,1.564,264,1.564,265,1.355,266,1.564,267,1.074,268,1.564,269,1.564,270,1.355,271,1.881,272,1.881,273,1.881,274,0.97,275,1.355,276,1.881,277,1.881,278,2.059,279,1.881,280,1.564,281,1.564,282,2.113,283,2.113,284,2.933]],["title/components/AdminloginComponent.html",[0,0.143,180,0.373]],["body/components/AdminloginComponent.html",[0,0.226,1,0.321,2,0.532,3,0.215,4,0.182,5,0.489,6,0.489,7,0.489,8,0.182,10,0.795,11,0.946,12,0.489,13,1.259,14,1.04,16,0.723,18,0.284,19,0.656,23,2.818,26,0.704,27,0.723,29,1.627,30,0.537,35,1.791,36,0.723,37,1.341,38,2.179,39,1.495,40,1.783,41,2.722,42,1.449,46,1.115,47,1.045,49,1.146,50,0.035,51,0.829,52,0.829,53,1.045,55,0.86,56,0.78,57,1.627,58,2.139,63,0.704,70,0.645,71,1.484,72,1.484,73,1.484,75,1.146,76,1.627,79,0.839,84,0.573,85,0.284,86,1.003,87,0.839,88,0.795,89,0.589,90,0.589,91,1.003,95,0.839,96,0.215,97,0.182,98,1.983,101,1.369,110,0.917,119,0.917,122,1.307,123,1.903,133,0.917,140,1.627,142,1.1,147,0.656,151,1.936,154,1.1,155,1.1,156,1.1,157,1.627,158,1.1,159,1.1,162,1.003,163,1.1,165,1.1,166,1.1,167,1.1,172,0.4,173,0.723,174,0.489,175,0.951,176,0.489,177,0.489,178,0.284,179,0.489,180,0.552,181,0.489,182,0.321,183,0.489,184,0.284,185,0.489,186,0.321,187,0.489,188,0.284,189,0.489,190,0.321,191,0.489,192,0.284,193,0.489,194,0.284,195,0.489,196,0.284,197,0.489,198,0.284,199,0.489,200,0.284,201,0.359,202,0.489,203,0.284,204,0.4,205,0.489,206,0.321,207,0.489,208,0.321,209,0.489,210,0.489,211,0.489,212,0.013,213,0.019,214,0.013,228,1.484,247,3.288,248,1.211,249,1.003,250,0.917,252,1.211,253,1.211,254,0.917,255,1.614,267,1.341,274,1.211,285,1.952,286,0.589,287,2.355,288,3.796,289,3.473,290,2.976,291,1.477,292,3.509,293,3.435,294,2.887,295,2.348,296,2.348,297,1.983,298,2.887,299,4.387,300,2.348,301,2.887,302,2.348,303,1.952,304,2.348,305,2.348,306,2.348,307,2.348,308,2.348,309,1.497,310,1.952,311,2.633,312,1.952,313,1.952,314,1.952,315,1.952,316,1.952,317,2.501,318,1.341,319,1.952,320,2.348,321,2.348,322,2.348,323,2.348,324,2.348,325,1.952,326,1.952,327,1.691,328,1.341,329,2.348,330,2.348,331,1.341,332,1.952,333,1.691,334,1.497,335,1.691]],["title/components/AppComponent.html",[0,0.143,182,0.422]],["body/components/AppComponent.html",[0,0.266,1,0.506,2,0.729,3,0.339,4,0.288,5,0.771,6,0.771,7,0.771,8,0.288,12,0.771,13,1.328,14,1.092,16,0.991,18,0.447,19,0.899,26,1.111,47,0.699,50,0.035,51,0.729,52,0.567,70,1.017,75,0.929,84,0.392,85,0.447,96,0.339,97,0.288,106,2.714,147,0.899,172,0.631,173,0.991,174,0.771,175,1.156,176,0.771,177,0.771,178,0.447,179,0.771,180,0.447,181,0.771,182,0.758,183,0.771,184,0.447,185,0.771,186,0.506,187,0.771,188,0.447,189,0.771,190,0.506,191,0.771,192,0.447,193,0.771,194,0.447,195,0.771,196,0.447,197,0.771,198,0.447,199,0.771,200,0.447,201,0.567,202,0.771,203,0.447,204,0.631,205,0.771,206,0.506,207,0.771,208,0.506,209,0.771,210,0.771,211,0.771,212,0.02,213,0.026,214,0.02,286,0.929,336,3.079,337,3.539,338,4.761,339,3.958,340,3.704,341,3.704,342,3.079,343,3.079,344,3.704]],["title/modules/AppModule.html",[345,1.764,346,1.968]],["body/modules/AppModule.html",[0,0.123,1,0.728,2,0.583,3,0.244,4,0.207,8,0.207,14,0.454,39,0.872,42,1.219,44,2.277,46,1.22,50,0.035,84,0.669,85,0.322,87,0.952,88,0.871,89,0.668,90,0.668,91,1.138,95,0.952,96,0.244,97,0.207,123,1.04,172,0.454,178,0.644,180,0.644,182,0.809,184,0.644,186,0.728,188,0.644,190,0.728,192,0.644,194,0.644,196,0.644,198,0.644,200,0.644,201,0.408,203,0.644,204,0.454,206,0.728,208,0.728,212,0.014,213,0.02,214,0.014,246,2.001,249,1.138,297,1.521,345,1.521,346,4.103,347,1.521,348,1.697,349,3.691,350,3.198,351,3.691,352,1.521,353,2.214,354,2.214,355,2.214,356,2.214,357,2.214,358,3.043,359,3.164,360,2.214,361,1.697,362,2.664,363,3.806,364,3.164,365,1.697,366,3.691,367,2.214,368,2.214,369,2.664,370,2.664,371,2.664,372,2.664,373,2.664,374,1.697,375,2.214,376,2.214,377,2.214,378,2.664,379,2.664,380,3.806,381,3.806,382,3.806,383,2.664,384,2.664,385,2.664,386,3.806,387,2.664,388,2.664,389,2.214,390,2.214,391,1.697,392,2.214,393,2.214,394,2.214,395,2.214,396,2.214,397,2.664,398,2.214,399,1.918,400,2.664,401,2.664,402,2.664,403,2.664]],["title/classes/AppPage.html",[97,0.24,404,2.225]],["body/classes/AppPage.html",[3,0.386,4,0.328,8,0.328,18,0.509,27,1.075,47,0.975,50,0.035,55,1.265,84,0.446,96,0.511,97,0.434,110,2.017,147,1.054,212,0.023,213,0.028,214,0.023,228,2.206,229,2.664,246,1.646,286,1.058,337,2.687,342,4.293,365,2.687,404,4.191,405,4.216,406,3.505,407,5.164,408,6.212,409,5.819,410,5.819,411,4.216,412,4.216,413,4.293,414,4.216,415,4.216,416,4.216,417,4.216]],["title/modules/AppRoutingModule.html",[345,1.764,358,1.764]],["body/modules/AppRoutingModule.html",[0,0.293,2,0.526,3,0.314,4,0.267,8,0.267,41,1.771,50,0.035,63,1.03,84,0.654,85,0.415,91,1.467,96,0.314,97,0.267,122,0.786,128,1.609,178,0.548,180,0.548,184,0.548,188,0.548,192,0.548,194,0.548,196,0.548,198,0.548,200,0.548,201,0.694,203,0.548,204,0.585,212,0.018,213,0.024,214,0.018,216,2.854,246,2.378,278,2.587,287,2.337,288,2.854,345,1.96,347,1.96,352,2.587,358,2.587,366,4.217,367,3.767,368,2.854,374,2.188,375,2.854,376,2.854,377,2.854,389,2.854,390,2.854,391,2.188,392,2.854,393,2.854,395,2.854,396,2.854,398,2.854,418,3.433,419,3.433,420,3.232,421,2.854,422,5.072,423,3.433,424,3.767,425,3.767,426,4.531,427,2.854,428,2.188,429,6.09,430,2.473,431,1.96,432,2.473,433,3.433]],["title/components/EventsComponent.html",[0,0.143,184,0.373]],["body/components/EventsComponent.html",[0,0.236,1,0.36,2,0.578,3,0.241,4,0.205,5,0.549,6,0.549,7,0.549,8,0.205,10,0.864,11,1.01,12,0.549,13,1.279,14,1.047,16,0.786,18,0.318,19,0.713,26,1.64,27,0.786,30,0.603,36,0.549,38,1.886,39,1.236,40,1.475,42,1.036,44,1.126,47,1.056,49,0.661,50,0.035,51,0.676,52,0.738,53,0.603,55,0.786,56,0.713,63,1.708,66,2.259,70,1.323,71,1.886,72,1.613,73,1.886,75,1.107,79,1.955,84,0.54,85,0.318,86,1.126,87,0.942,88,0.864,89,0.661,90,0.661,96,0.241,97,0.205,101,1.132,102,2.19,106,2.632,112,1.948,113,1.359,114,1.359,119,1.723,147,0.713,170,2.156,172,0.449,173,0.786,174,0.549,175,1.004,176,0.549,177,0.549,178,0.318,179,0.549,180,0.318,181,0.549,182,0.36,183,0.549,184,0.582,185,0.549,186,0.36,187,0.549,188,0.318,189,0.549,190,0.36,191,0.549,192,0.318,193,0.549,194,0.318,195,0.549,196,0.318,197,0.549,198,0.318,199,0.549,200,0.318,201,0.403,202,0.549,203,0.318,204,0.449,205,0.549,206,0.36,207,0.549,208,0.36,209,0.549,210,0.549,211,0.549,212,0.014,213,0.02,214,0.014,250,1.475,286,0.661,287,1.948,291,0.942,318,1.504,331,1.504,399,1.897,430,3.472,434,2.19,435,3.776,436,3.669,437,3.179,438,3.669,439,4.007,440,3.139,441,2.634,442,3.139,443,2.634,444,1.359,445,2.634,446,2.634,447,2.634,448,2.634,449,2.634,450,2.634,451,2.634,452,1.897,453,2.19,454,2.634,455,2.634,456,3.179,457,3.139,458,3.669,459,2.19,460,3.139,461,1.897,462,1.897,463,4.242,464,2.634,465,1.897,466,2.19,467,4.413,468,1.679,469,3.139,470,4.414,471,3.139,472,3.139,473,3.139,474,3.139,475,3.776,476,3.139,477,3.139,478,3.139]],["title/injectables/EventsService.html",[44,1.32,479,1.764]],["body/injectables/EventsService.html",[3,0.308,4,0.261,8,0.261,18,0.406,19,0.844,24,3.155,27,0.931,28,3.716,42,1.378,44,1.91,47,1.121,49,1.122,50,0.035,51,0.769,52,0.877,53,1.023,55,1.114,56,0.844,63,1.341,75,1.489,84,0.589,85,0.406,88,0.77,89,0.844,90,1.26,94,2.796,95,1.202,96,0.308,97,0.261,100,1.921,106,2.59,110,1.746,128,2.61,138,1.437,212,0.018,213,0.024,214,0.018,228,1.91,250,1.314,254,1.746,255,1.746,286,0.844,297,1.921,337,2.144,352,2.553,444,2.306,465,3.22,479,3.055,480,2.423,481,2.796,482,3.716,483,4.174,484,4.174,485,4.174,486,4.47,487,5.351,488,5.351,489,4.47,490,3.364,491,4.47,492,3.364,493,3.364,494,3.364,495,3.364,496,3.364,497,3.364,498,3.364,499,2.796,500,2.796,501,2.144,502,2.796,503,2.796,504,3.364,505,2.796,506,2.796,507,2.796,508,2.796,509,2.796,510,2.796,511,3.364,512,4.448,513,3.716,514,3.22,515,3.364,516,3.716,517,4.47]],["title/components/FooterComponent.html",[0,0.143,186,0.422]],["body/components/FooterComponent.html",[0,0.262,1,0.48,2,0.705,3,0.322,4,0.273,5,0.732,6,0.732,7,0.732,8,0.273,10,1.054,11,1.175,12,0.732,13,1.322,14,1.082,16,0.959,30,0.805,36,0.732,50,0.035,51,0.705,56,0.664,84,0.372,85,0.425,96,0.322,97,0.273,147,0.869,172,0.599,173,0.959,174,0.732,175,1.134,176,0.732,177,0.732,178,0.425,179,0.732,180,0.425,181,0.732,182,0.48,183,0.732,184,0.425,185,0.732,186,0.744,187,0.732,188,0.425,189,0.732,190,0.48,191,0.732,192,0.425,193,0.732,194,0.425,195,0.732,196,0.425,197,0.732,198,0.425,199,0.732,200,0.425,201,0.538,202,0.732,203,0.425,204,0.599,205,0.732,206,0.48,207,0.732,208,0.48,209,0.732,210,0.732,211,0.732,212,0.019,213,0.025,214,0.019,250,1.798,286,0.882,518,2.924,519,5.445,520,4.604,521,4.604,522,4.604,523,4.604,524,4.604,525,4.604,526,4.604,527,3.827,528,4.604,529,4.604,530,4.604,531,4.604,532,4.604,533,4.604,534,4.604,535,4.604,536,4.604]],["title/interfaces/Gathering.html",[24,1.593,537,1.764]],["body/interfaces/Gathering.html",[3,0.389,4,0.331,8,0.331,18,0.514,19,0.981,24,2.68,50,0.034,52,0.944,53,1.394,66,2.434,70,1.169,75,1.582,84,0.451,96,0.389,106,2.892,107,4.661,108,4.038,109,4.661,122,1.336,133,2.19,212,0.023,213,0.028,214,0.023,453,3.539,537,2.431,538,3.066,539,3.539,540,5.607,541,5.607,542,4.258,543,4.258,544,4.258,545,4.258,546,3.539,547,4.258]],["title/components/LoginComponent.html",[0,0.143,188,0.373]],["body/components/LoginComponent.html",[0,0.228,1,0.292,2,0.496,3,0.196,4,0.166,5,0.446,6,0.446,7,0.446,8,0.166,10,0.742,11,0.895,12,0.446,13,1.242,14,1.016,16,0.675,18,0.259,19,0.823,23,2.81,26,0.642,27,0.675,29,1.519,30,0.49,35,1.672,36,0.675,37,1.223,38,2.187,39,1.534,40,1.527,41,2.719,42,1.405,46,0.998,47,1.019,49,1.094,50,0.035,51,0.754,52,0.807,53,0.998,55,0.814,56,0.738,57,1.519,58,2.043,63,0.642,70,0.588,71,1.385,72,1.385,73,1.385,75,0.981,76,1.519,79,0.766,84,0.558,85,0.259,86,0.915,87,0.766,88,0.895,89,1.175,90,0.537,91,0.915,95,0.766,96,0.196,97,0.166,98,2.814,101,1.308,108,1.542,110,0.836,122,1.347,123,2.108,133,0.836,140,1.519,142,1.003,147,0.612,151,1.832,154,1.003,155,1.003,156,1.003,157,1.519,158,1.003,159,1.003,162,0.915,163,1.003,165,1.519,166,1.003,167,1.003,172,0.365,173,0.908,174,0.446,175,0.908,176,0.446,177,0.446,178,0.259,179,0.446,180,0.259,181,0.446,182,0.292,183,0.446,184,0.259,185,0.446,186,0.292,187,0.446,188,0.527,189,0.446,190,0.292,191,0.446,192,0.259,193,0.446,194,0.259,195,0.446,196,0.259,197,0.446,198,0.259,199,0.446,200,0.259,201,0.328,202,0.446,203,0.259,204,0.365,205,0.446,206,0.292,207,0.446,208,0.292,209,0.446,210,0.446,211,0.446,212,0.011,213,0.017,214,0.011,228,1.863,229,1.672,230,1.672,232,2.065,246,2.059,248,1.105,249,0.915,250,0.836,252,1.105,253,1.105,254,1.527,255,1.527,267,1.223,274,1.105,286,0.537,287,2.957,290,2.334,291,1.159,292,3.141,293,3.251,294,2.694,298,2.694,299,4.382,301,2.694,303,1.78,309,1.365,310,1.78,311,2.779,312,1.78,313,1.78,314,1.78,315,1.78,316,1.78,317,2.334,318,1.223,319,1.78,325,1.78,326,1.78,331,1.223,332,1.78,333,1.542,334,1.365,335,1.542,394,2.694,427,2.694,428,2.065,431,1.223,468,1.365,548,1.78,549,3.241,550,2.141,551,2.141,552,3.241,553,2.141,554,3.374,555,2.141,556,2.141,557,4.361,558,2.141,559,3.241,560,2.141,561,2.141,562,2.141,563,2.141,564,2.141,565,2.141,566,2.141,567,2.141,568,1.78,569,2.141,570,2.141,571,2.141,572,1.78,573,2.141,574,1.78,575,2.141,576,2.141,577,2.141]],["title/components/NavbarComponent.html",[0,0.143,190,0.422]],["body/components/NavbarComponent.html",[0,0.255,1,0.401,2,0.624,3,0.269,4,0.228,5,0.612,6,0.612,7,0.612,8,0.228,10,0.933,11,1.158,12,0.612,13,1.296,14,1.061,16,0.849,18,0.355,19,0.77,26,1.65,27,0.849,30,1.158,36,0.975,42,1.51,47,1.039,49,0.737,50,0.035,51,0.717,52,0.717,53,0.673,55,0.612,56,0.77,66,2.371,70,1.389,79,2.088,84,0.432,85,0.355,88,0.933,89,1.334,90,1.334,96,0.269,97,0.228,101,0.881,119,1.829,123,1.148,124,2.329,147,0.77,170,2.329,172,0.501,173,0.849,174,0.612,175,1.054,176,0.612,177,0.612,178,0.355,179,0.612,180,0.355,181,0.612,182,0.401,183,0.612,184,0.355,185,0.612,186,0.401,187,0.612,188,0.355,189,0.612,190,0.691,191,0.612,192,0.355,193,0.612,194,0.355,195,0.612,196,0.355,197,0.612,198,0.355,199,0.612,200,0.355,201,0.717,202,0.612,203,0.355,204,0.501,205,0.612,206,0.401,207,0.612,208,0.401,209,0.612,210,0.612,211,0.612,212,0.016,213,0.022,214,0.016,246,1.593,247,3.828,278,2.329,286,0.737,287,2.104,327,2.117,328,1.678,343,3.391,430,2.937,431,2.329,432,2.937,437,3.374,444,1.516,452,2.117,456,3.374,457,2.443,578,2.443,579,5.501,580,4.078,581,4.684,582,2.117,583,2.939,584,2.939,585,4.078,586,2.939,587,2.939,588,2.939,589,2.939,590,4.078,591,2.939,592,2.939,593,4.078,594,3.391,595,4.078,596,4.078,597,2.939]],["title/components/NotfoundComponent.html",[0,0.143,192,0.373]],["body/components/NotfoundComponent.html",[0,0.266,1,0.507,2,0.73,3,0.339,4,0.288,5,0.773,6,0.773,7,0.773,8,0.288,10,1.091,11,1.205,12,0.773,13,1.329,14,1.092,16,0.992,30,0.849,36,0.773,50,0.035,51,0.73,56,0.7,84,0.393,85,0.448,96,0.339,97,0.288,147,0.9,172,0.632,173,0.992,174,0.773,175,1.157,176,0.773,177,0.773,178,0.448,179,0.773,180,0.448,181,0.773,182,0.507,183,0.773,184,0.448,185,0.773,186,0.507,187,0.773,188,0.448,189,0.773,190,0.507,191,0.773,192,0.671,193,0.773,194,0.448,195,0.773,196,0.448,197,0.773,198,0.448,199,0.773,200,0.448,201,0.568,202,0.773,203,0.448,204,0.632,205,0.773,206,0.507,207,0.773,208,0.507,209,0.773,210,0.773,211,0.773,212,0.02,213,0.026,214,0.02,250,1.861,286,0.931,424,4.62,428,3.037,598,3.084,599,4.766,600,4.766]],["title/components/ProfileComponent.html",[0,0.143,194,0.373]],["body/components/ProfileComponent.html",[0,0.203,1,0.295,2,0.5,3,0.198,4,0.168,5,0.45,6,0.45,7,0.45,8,0.168,10,0.747,11,0.9,12,0.45,13,1.244,14,1.018,16,0.68,18,0.261,19,0.617,21,2.686,23,2.763,25,2.507,26,1.484,27,0.68,29,1.53,30,1.003,31,2.081,32,2.793,33,2.793,34,2.081,35,2.029,36,0.45,38,2.194,39,1.435,40,1.712,42,1.358,45,2.054,46,1.003,47,1.121,49,0.987,50,0.035,51,0.909,52,0.809,53,0.9,55,1.03,56,0.888,57,1.53,58,2.054,61,2.081,63,0.979,68,1.865,70,1.08,71,1.681,72,1.395,73,2.114,75,1.18,76,1.844,79,1.406,82,1.378,84,0.544,85,0.261,86,0.924,87,0.773,88,0.747,89,0.543,90,0.543,95,0.773,96,0.198,97,0.168,100,1.235,101,0.979,103,1.235,104,1.378,110,1.275,112,1.685,113,1.116,114,1.116,115,1.558,116,1.378,117,1.378,118,1.378,119,0.845,122,1.315,123,0.845,124,1.235,125,1.378,126,1.378,127,1.235,128,1.013,133,1.837,137,1.378,138,0.924,140,2.054,142,1.013,147,0.617,149,1.378,150,2.081,151,2.054,152,1.235,153,1.235,154,1.53,155,1.013,156,1.013,157,1.013,158,1.013,159,1.013,160,1.378,161,1.378,162,1.395,163,1.013,164,1.378,165,1.013,166,1.013,167,1.013,169,3.37,170,1.865,172,0.369,173,0.68,174,0.45,175,0.913,176,0.45,177,0.45,178,0.261,179,0.45,180,0.261,181,0.45,182,0.295,183,0.45,184,0.261,185,0.45,186,0.295,187,0.45,188,0.261,189,0.45,190,0.295,191,0.45,192,0.261,193,0.45,194,0.53,195,0.45,196,0.261,197,0.45,198,0.261,199,0.45,200,0.261,201,0.331,202,0.45,203,0.261,204,0.369,205,0.45,206,0.295,207,0.45,208,0.295,209,0.45,210,0.45,211,0.45,212,0.012,213,0.018,214,0.012,246,0.845,248,1.116,249,0.924,252,1.685,253,1.685,254,1.275,255,1.932,256,1.558,270,1.558,274,1.116,275,1.558,278,1.235,282,2.352,283,2.352,290,2.352,291,1.406,328,1.235,432,2.352,444,1.116,452,1.558,568,1.798,582,1.558,601,1.798,602,3.266,603,3.934,604,3.644,605,3.266,606,2.163,607,2.163,608,2.163,609,2.163,610,2.163,611,2.163,612,2.163,613,2.163,614,2.163,615,2.163,616,2.163,617,2.163,618,2.163,619,2.163,620,2.163,621,1.798,622,2.163,623,2.163,624,2.163,625,2.163,626,2.163,627,2.163,628,2.163,629,1.798,630,1.798,631,1.798,632,1.798,633,3.934,634,1.798,635,3.266]],["title/components/QuestionsComponent.html",[0,0.143,196,0.373]],["body/components/QuestionsComponent.html",[0,0.234,1,0.351,2,0.568,3,0.235,4,0.2,5,0.535,6,0.535,7,0.535,8,0.2,10,0.849,11,0.996,12,0.535,13,1.275,14,1.043,16,0.772,18,0.31,26,0.77,27,0.772,30,0.588,36,0.535,47,0.485,50,0.034,51,0.568,55,0.535,56,0.7,63,1.579,84,0.272,85,0.31,96,0.235,97,0.2,122,0.588,147,0.821,172,0.438,173,0.772,174,0.535,175,0.992,176,0.535,177,0.535,178,0.31,179,0.535,180,0.31,181,0.535,182,0.351,183,0.535,184,0.31,185,0.535,186,0.351,187,0.535,188,0.31,189,0.535,190,0.351,191,0.535,192,0.31,193,0.535,194,0.31,195,0.535,196,0.576,197,0.535,198,0.31,199,0.535,200,0.31,201,0.393,202,0.535,203,0.31,204,0.438,205,0.535,206,0.351,207,0.535,208,0.351,209,0.535,210,0.535,211,0.535,212,0.014,213,0.02,214,0.014,229,1.325,231,1.85,250,1.448,286,0.644,291,1.703,317,1.85,327,1.85,328,2.117,334,2.363,361,2.363,425,3.617,431,1.467,574,2.135,636,2.135,637,3.708,638,3.708,639,5.264,640,2.569,641,3.708,642,2.569,643,3.708,644,2.569,645,2.569,646,2.569,647,2.135,648,2.569,649,2.569,650,2.135,651,2.569,652,2.569,653,2.569,654,4.764,655,3.708,656,3.708,657,3.708,658,3.708,659,3.708,660,3.708,661,4.764,662,3.083,663,3.708,664,3.083,665,3.708,666,4.764,667,4.764,668,3.708,669,3.708,670,3.708,671,3.708,672,3.708,673,3.708,674,3.708,675,3.708,676,3.708,677,3.708,678,3.708,679,3.708,680,3.708,681,3.708,682,3.708,683,3.083,684,3.708,685,3.083,686,3.708,687,3.708,688,3.708,689,4.764,690,3.708,691,3.083,692,3.708,693,3.708,694,4.764,695,3.708,696,3.708,697,3.708,698,3.708,699,3.708,700,3.708,701,3.708,702,3.708,703,3.708,704,3.708,705,3.708,706,3.708,707,3.708,708,3.708,709,3.708,710,3.708,711,3.708,712,3.708,713,3.708,714,3.708,715,3.708,716,3.708,717,3.708,718,3.708,719,3.708,720,3.708,721,3.708,722,3.708,723,3.708,724,3.708,725,3.708,726,3.708,727,3.708,728,3.708,729,3.708,730,3.708,731,3.708,732,3.708,733,3.708,734,3.083,735,3.708,736,3.708,737,3.708,738,3.708,739,3.708,740,3.708,741,3.708,742,3.708,743,3.708,744,3.708,745,3.708]],["title/components/RegisterComponent.html",[0,0.143,198,0.373]],["body/components/RegisterComponent.html",[0,0.231,1,0.246,2,0.434,3,0.165,4,0.14,5,0.375,6,0.375,7,0.375,8,0.14,10,0.649,11,0.911,12,0.375,13,1.207,14,0.988,16,0.591,18,0.218,19,0.751,21,2.272,23,2.794,25,2.236,26,1.379,27,0.591,29,1.329,30,0.911,31,1.808,32,2.536,33,2.536,34,1.808,35,1.81,36,0.829,37,1.029,38,2.129,39,1.505,40,1.554,41,2.644,42,1.368,45,2.154,46,0.991,47,1.066,49,1.086,50,0.035,51,0.88,52,0.736,53,0.803,55,0.957,56,0.817,57,1.329,58,1.865,61,1.808,63,0.851,68,2.003,70,0.963,71,1.499,72,1.212,73,1.964,75,0.999,76,1.644,79,1.254,82,1.149,84,0.542,85,0.218,86,0.77,87,0.644,88,0.911,89,0.88,90,0.88,91,0.77,95,0.644,96,0.165,97,0.14,98,2.003,99,1.298,101,1.194,104,1.149,110,1.37,112,1.464,113,0.93,114,0.93,116,1.149,117,1.149,118,1.149,119,0.704,122,1.344,123,1.878,124,1.029,125,1.149,126,1.149,127,2.272,128,1.865,133,1.69,137,1.149,138,1.212,140,1.865,142,0.845,144,1.298,146,1.298,147,0.662,148,1.298,149,1.808,150,1.808,151,2.028,152,1.62,153,1.62,154,0.845,155,0.845,156,0.845,157,1.329,158,0.845,159,0.845,162,0.77,163,0.845,165,2.028,166,0.845,167,0.845,169,3.175,172,0.307,173,0.591,174,0.375,175,0.829,176,0.375,177,0.375,178,0.218,179,0.375,180,0.218,181,0.375,182,0.246,183,0.375,184,0.218,185,0.375,186,0.246,187,0.375,188,0.218,189,0.375,190,0.246,191,0.375,192,0.218,193,0.375,194,0.218,195,0.375,196,0.218,197,0.375,198,0.481,199,0.375,200,0.218,201,0.276,202,0.375,203,0.218,204,0.307,205,0.375,206,0.246,207,0.375,208,0.246,209,0.375,210,0.375,211,0.375,212,0.01,213,0.015,214,0.01,228,1.212,229,1.464,230,1.464,231,2.043,232,1.808,233,2.917,234,2.917,246,1.878,248,0.93,249,0.77,252,1.464,253,1.464,254,1.108,255,1.795,256,1.298,258,1.498,260,2.359,261,1.498,262,1.498,263,1.498,264,1.498,265,1.298,266,1.498,267,1.029,268,1.498,269,1.498,270,1.298,274,0.93,275,1.298,278,3.151,280,1.498,281,1.498,282,2.043,283,2.043,286,0.452,291,1.254,297,1.029,309,1.149,311,2.929,328,1.029,333,1.298,334,1.149,335,1.298,352,1.029,554,1.298,621,1.498,629,1.498,630,1.498,631,1.498,632,1.498,634,1.498,746,1.498,747,2.837,748,3.509,749,3.309,750,1.802,751,1.802,752,1.802,753,2.837,754,2.837,755,1.802,756,2.837,757,2.837,758,1.802,759,1.802,760,1.802,761,1.802,762,1.802,763,1.802,764,1.802,765,1.802,766,1.802,767,1.802,768,1.802,769,1.802,770,1.802,771,1.802,772,1.802,773,2.837,774,1.802,775,1.802,776,1.802,777,1.802,778,1.802,779,1.802]],["title/components/SupportGroupsComponent.html",[0,0.143,200,0.373]],["body/components/SupportGroupsComponent.html",[0,0.226,1,0.323,2,0.534,3,0.216,4,0.184,5,0.492,6,0.492,7,0.492,8,0.184,10,0.799,11,0.949,12,0.492,13,1.26,14,1.031,16,0.727,18,0.286,19,0.659,26,1.586,27,0.727,30,0.541,36,0.727,38,2.26,39,1.5,40,1.789,42,1.452,43,4.062,44,2.087,46,1.118,47,1.079,49,0.876,50,0.035,51,0.701,52,0.81,53,0.799,55,0.727,56,0.783,63,0.709,66,2.146,70,1.257,71,1.491,72,1.491,73,1.491,75,1.149,79,1.891,84,0.541,85,0.286,86,1.01,87,0.845,88,0.799,89,0.593,90,0.593,96,0.216,97,0.184,101,1.244,106,2.52,112,1.8,113,1.219,114,1.219,119,1.62,147,0.659,168,4.513,170,2.368,172,0.403,173,0.727,174,0.492,175,0.954,176,0.492,177,0.492,178,0.286,179,0.492,180,0.286,181,0.492,182,0.323,183,0.492,184,0.286,185,0.492,186,0.323,187,0.492,188,0.286,189,0.492,190,0.323,191,0.492,192,0.286,193,0.492,194,0.286,195,0.492,196,0.286,197,0.492,198,0.286,199,0.492,200,0.553,201,0.848,202,0.492,203,0.286,204,0.403,205,0.492,206,0.323,207,0.492,208,0.323,209,0.492,210,0.492,211,0.492,212,0.013,213,0.019,214,0.013,249,1.01,250,1.363,286,0.593,287,1.8,291,1.828,292,3.299,318,1.35,331,1.35,391,3.687,399,1.702,431,2.615,436,3.448,437,2.988,438,3.448,439,3.808,440,2.901,442,2.901,444,1.8,456,2.988,458,3.448,459,1.965,460,2.901,461,1.702,462,1.702,463,2.901,466,1.965,468,1.506,469,2.901,470,4.251,471,2.901,472,2.901,473,2.901,474,2.901,476,2.901,477,2.901,478,2.901,514,1.702,780,4.81,781,1.965,782,3.49,783,2.364,784,2.364,785,2.364,786,2.364,787,2.364,788,2.364,789,2.364,790,2.364,791,2.364,792,2.364,793,2.364,794,2.364,795,2.364,796,3.49,797,4.148,798,2.364,799,2.364,800,3.49,801,3.49]],["title/components/TipsPageComponent.html",[0,0.143,203,0.373]],["body/components/TipsPageComponent.html",[0,0.259,1,0.425,2,0.649,3,0.285,4,0.242,5,0.648,6,0.648,7,0.648,8,0.242,10,0.971,11,1.186,12,0.648,13,1.305,14,1.068,16,0.883,18,0.376,19,0.801,27,0.883,30,1.186,36,1.079,42,1.537,45,2.542,46,1.242,47,0.911,49,0.781,50,0.035,51,0.739,52,0.649,53,0.712,55,1.005,56,0.801,84,0.511,85,0.376,88,0.712,89,1.211,90,1.211,96,0.285,97,0.242,101,0.933,147,0.801,172,0.53,173,0.883,174,0.648,175,1.079,176,0.648,177,0.648,178,0.376,179,0.648,180,0.376,181,0.648,182,0.425,183,0.648,184,0.376,185,0.648,186,0.425,187,0.648,188,0.376,189,0.648,190,0.425,191,0.648,192,0.376,193,0.648,194,0.376,195,0.648,196,0.376,197,0.648,198,0.376,199,0.648,200,0.376,201,0.476,202,0.648,203,0.626,204,0.977,205,0.648,206,0.425,207,0.648,208,0.425,209,0.648,210,0.648,211,0.648,212,0.017,213,0.023,214,0.017,228,1.813,230,2.188,246,1.215,249,1.33,286,0.781,291,1.726,309,1.983,374,3.304,428,3.304,582,2.241,734,3.527,802,4.31,803,2.587,804,4.242,805,3.112,806,4.242,807,3.112,808,4.242,809,3.112,810,2.587,811,4.242,812,4.242,813,4.242,814,4.242,815,4.242,816,4.242,817,5.184,818,4.242]],["title/interfaces/User.html",[122,0.707,537,1.764]],["body/interfaces/User.html",[3,0.402,4,0.342,8,0.342,18,0.531,19,1,50,0.034,52,0.939,66,2.664,70,1.207,75,1.59,96,0.402,122,1.212,133,2.22,212,0.024,213,0.028,214,0.024,252,2.933,253,2.933,254,2.22,255,2.22,274,3.044,537,2.51,538,3.166,546,3.655,819,3.655,820,4.396,821,4.396,822,4.396,823,4.396]],["title/injectables/UserService.html",[46,0.707,479,1.764]],["body/injectables/UserService.html",[3,0.241,4,0.205,8,0.205,18,0.318,19,0.713,21,2.52,27,0.786,36,0.549,42,1.501,46,0.864,47,1.142,49,1.28,50,0.035,51,0.856,52,0.885,53,1.168,55,1.186,56,0.497,68,2.156,75,1.45,84,0.54,85,0.318,88,0.603,89,0.661,90,0.661,95,0.942,96,0.241,97,0.205,100,1.504,101,1.132,110,2.184,122,1.437,123,1.475,127,2.752,128,2.562,138,1.126,212,0.014,213,0.02,214,0.014,222,3.139,228,1.613,229,2.486,230,2.739,248,1.359,254,1.993,255,2.074,265,3.472,286,0.661,297,2.752,311,2.406,337,2.812,444,2.276,465,1.897,479,2.156,480,1.897,482,3.139,483,3.669,484,3.669,485,4.546,499,3.669,500,2.19,501,1.679,502,2.19,503,2.19,505,2.19,506,2.19,507,2.19,508,2.19,509,3.139,510,2.19,512,4.546,513,2.19,514,1.897,516,3.669,554,2.72,604,3.139,647,3.139,691,3.139,749,3.139,824,2.19,825,3.776,826,3.776,827,3.776,828,4.82,829,4.82,830,4.82,831,4.82,832,2.634,833,3.776,834,3.776,835,2.634,836,3.776,837,2.634,838,3.776,839,4.82,840,3.776,841,2.634,842,2.634,843,2.634,844,2.634,845,3.776,846,3.776,847,2.634,848,2.634,849,3.776,850,2.634,851,2.634,852,2.634,853,2.634,854,2.634,855,2.634,856,2.634,857,2.634,858,4.413,859,2.634,860,2.634,861,2.634,862,2.634,863,2.634,864,2.634,865,2.634,866,2.634,867,2.634]],["title/components/UserviewComponent.html",[0,0.143,206,0.422]],["body/components/UserviewComponent.html",[0,0.229,1,0.445,2,0.67,3,0.298,4,0.253,5,0.678,6,0.678,7,0.678,8,0.253,10,1.001,11,1.131,12,0.678,13,1.311,14,1.073,16,0.911,18,0.394,19,0.826,27,0.911,30,1.209,36,0.911,39,1.73,40,2.063,45,2.315,46,1.209,47,0.933,49,0.817,50,0.035,51,0.756,52,0.67,53,0.746,55,0.678,56,0.615,84,0.523,85,0.394,88,0.746,93,2.346,96,0.298,97,0.253,101,0.977,103,1.86,122,0.746,147,0.826,172,0.555,173,0.911,174,0.678,175,1.1,176,0.678,177,0.678,178,0.394,179,0.678,180,0.394,181,0.678,182,0.445,183,0.678,184,0.394,185,0.678,186,0.445,187,0.678,188,0.394,189,0.678,190,0.445,191,0.678,192,0.394,193,0.678,194,0.394,195,0.678,196,0.394,197,0.678,198,0.394,199,0.678,200,0.394,201,0.499,202,0.678,203,0.394,204,0.555,205,0.678,206,0.721,207,0.678,208,0.445,209,0.678,210,0.678,211,0.678,212,0.017,213,0.023,214,0.017,230,2.257,291,1.766,318,1.86,331,1.86,461,2.346,462,2.346,468,2.076,810,3.637,868,2.708,869,4.376,870,4.376,871,2.708,872,3.257,873,3.257,874,3.257,875,3.257,876,3.257,877,3.257,878,3.257,879,3.257,880,3.257,881,3.257,882,4.376,883,4.376,884,4.376,885,4.376]],["title/components/ViewmyselfComponent.html",[0,0.143,208,0.422]],["body/components/ViewmyselfComponent.html",[0,0.22,1,0.41,2,0.634,3,0.275,4,0.233,5,0.626,6,0.626,7,0.626,8,0.233,10,0.948,11,1.085,12,0.626,13,1.299,14,1.064,16,0.862,18,0.363,19,0.782,23,2.811,27,0.862,29,1.94,30,1.169,36,0.626,45,2.22,46,1.169,47,1.046,49,1.039,50,0.035,51,0.782,52,0.82,53,0.948,55,0.862,56,0.895,57,1.94,58,2.393,63,0.901,75,1.039,76,1.94,84,0.54,85,0.363,93,2.164,95,1.074,96,0.275,97,0.233,103,1.715,122,1.323,133,1.617,140,1.94,142,1.408,147,0.782,151,1.408,152,1.715,153,1.715,154,1.94,155,1.408,156,1.408,157,1.408,158,1.408,159,1.408,160,1.914,161,1.914,162,1.769,163,1.408,164,1.914,165,1.408,166,1.408,167,1.408,172,0.512,173,0.862,174,0.626,175,1.064,176,0.626,177,0.626,178,0.363,179,0.626,180,0.363,181,0.626,182,0.41,183,0.626,184,0.363,185,0.626,186,0.41,187,0.626,188,0.363,189,0.626,190,0.41,191,0.626,192,0.363,193,0.626,194,0.363,195,0.626,196,0.363,197,0.626,198,0.363,199,0.626,200,0.363,201,0.46,202,0.626,203,0.363,204,0.512,205,0.626,206,0.41,207,0.626,208,0.697,209,0.987,210,0.626,211,0.626,212,0.016,213,0.022,214,0.016,254,1.617,255,1.617,267,1.715,291,1.48,572,3.443,871,2.497,886,2.497,887,4.141,888,4.141,889,3.004,890,3.004,891,3.004,892,3.004,893,3.004,894,3.004,895,3.004,896,4.141,897,4.141,898,4.141,899,4.141,900,4.141,901,4.141]],["title/coverage.html",[902,3.509]],["body/coverage.html",[0,0.294,1,0.5,8,0.284,9,3.042,24,1.888,44,1.564,46,0.838,50,0.035,52,0.56,97,0.284,122,0.838,138,1.564,178,0.442,180,0.442,182,0.5,184,0.442,186,0.5,188,0.442,190,0.5,192,0.442,194,0.442,196,0.442,198,0.442,200,0.442,203,0.442,206,0.5,208,0.5,212,0.02,213,0.025,214,0.02,215,3.042,285,3.042,336,3.042,374,2.332,391,2.332,404,2.636,406,3.042,434,3.042,479,2.698,481,3.042,501,3.011,518,3.042,537,2.698,539,3.042,548,3.042,578,3.042,598,3.042,601,3.042,636,3.042,662,3.042,746,3.042,780,3.042,781,3.042,802,3.042,803,3.042,819,3.042,824,3.042,868,3.042,886,3.042,902,3.042,903,3.66,904,3.66,905,3.66,906,3.66,907,3.66,908,6.157,909,3.66,910,3.66,911,3.66,912,3.66,913,3.66,914,4.724,915,4.724,916,4.724,917,4.724,918,4.724,919,4.724,920,3.66,921,3.66,922,3.66,923,4.724,924,3.66,925,3.66,926,3.66,927,3.66,928,3.66,929,3.66,930,3.66,931,3.66,932,3.66,933,3.66,934,3.66,935,3.042,936,5.529,937,5.529,938,3.042,939,3.927,940,3.042,941,3.042,942,3.66,943,3.66]],["title/dependencies.html",[348,2.368,944,2.577]],["body/dependencies.html",[39,1.741,50,0.035,85,0.534,87,1.581,88,1.217,89,1.11,90,1.11,91,1.89,212,0.024,213,0.029,214,0.024,348,2.819,350,3.186,364,4.42,365,3.388,945,4.423,946,5.209,947,4.423,948,4.423,949,4.423,950,4.423,951,4.423,952,4.423,953,4.423,954,4.423,955,4.423,956,4.423,957,4.423,958,4.423,959,4.423,960,4.423,961,4.423,962,4.423,963,4.423,964,4.423,965,4.423]],["title/index.html",[18,0.311,966,2.577,967,2.577]],["body/index.html",[0,0.257,4,0.323,14,0.709,50,0.027,51,0.637,138,1.777,162,1.777,212,0.022,213,0.027,214,0.022,232,3.536,339,3.458,361,2.651,413,3.458,421,4.613,527,4.613,594,3.458,664,3.458,685,3.458,946,3.458,968,5.121,969,4.159,970,5.549,971,4.159,972,4.159,973,5.121,974,5.947,975,6.135,976,4.159,977,4.159,978,4.159,979,4.159,980,4.159,981,4.159,982,4.159,983,4.159,984,4.159,985,5.549,986,4.159,987,5.947,988,4.159,989,4.159,990,4.159,991,4.159,992,4.159,993,4.159,994,3.458,995,5.121,996,5.121,997,5.791,998,5.121,999,5.121,1000,4.159,1001,5.791,1002,4.159,1003,4.159,1004,4.159,1005,4.159]],["title/modules.html",[347,2.41]],["body/modules.html",[50,0.03,201,0.756,212,0.027,213,0.03,214,0.027,346,3.147,347,2.82,358,2.82,365,3.147,1006,4.938,1007,5.672,1008,4.938,1009,4.938]],["title/overview.html",[1010,3.509]],["body/overview.html",[1,0.721,2,0.572,44,2.257,46,1.209,50,0.035,97,0.29,172,0.637,178,0.638,180,0.638,182,0.818,184,0.638,186,0.721,188,0.638,190,0.721,192,0.638,194,0.638,196,0.638,198,0.638,200,0.638,203,0.638,206,0.721,208,0.721,212,0.02,213,0.026,214,0.02,345,2.133,346,4.166,347,2.133,348,2.38,349,3.105,350,2.69,351,3.105,352,2.133,353,3.105,354,3.105,355,3.105,356,3.105,357,3.105,358,3.016,359,3.98,360,3.105,361,2.38,420,2.38,480,2.69,538,2.69,650,3.105,1010,3.105,1011,5.283,1012,3.736,1013,3.736]],["title/routes.html",[420,2.69]],["body/routes.html",[50,0.031,212,0.027,213,0.031,214,0.027,420,3.213]],["title/miscellaneous/variables.html",[1014,2.142,1015,3.089]],["body/miscellaneous/variables.html",[18,0.538,26,1.714,50,0.034,52,0.907,70,1.569,79,1.591,119,2.084,212,0.024,213,0.029,214,0.024,501,3.776,683,4.436,935,3.7,938,3.7,939,3.7,940,4.436,941,4.436,994,4.436,1014,3.7,1015,3.7,1016,5.336,1017,4.45,1018,4.45,1019,4.45,1020,4.45,1021,4.45,1022,5.336,1023,5.336,1024,5.336,1025,5.336,1026,5.336]]],"invertedIndex":[["",{"_index":50,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["0.10.2",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":650,"title":{},"body":{"components/QuestionsComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1013,"title":{},"body":{"overview.html":{}}}],["100",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["12.0.1",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["1232551203.us",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1012,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1011,"title":{},"body":{"overview.html":{}}}],["2.1.4",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["2.elb.amazonaws.com",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2/3",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":534,"title":{},"body":{"components/FooterComponent.html":{}}}],["28",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["3.0.4",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["4.4.1",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["5/15",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":662,"title":{},"body":{"components/QuestionsComponent.html":{},"coverage.html":{}}}],["6.5.4",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["9.1.3",{"_index":946,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9876543210",{"_index":522,"title":{},"body":{"components/FooterComponent.html":{}}}],["accept",{"_index":234,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":34,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["accident",{"_index":699,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["actual_component",{"_index":211,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["add",{"_index":159,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["addgathering",{"_index":15,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["addgathering'},{'name",{"_index":177,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["addgathering.component.html",{"_index":17,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["addgatheringcomponent",{"_index":1,"title":{"components/AddgatheringComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adduser",{"_index":439,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["admin",{"_index":247,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/NavbarComponent.html":{}}}],["adminedit",{"_index":216,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppRoutingModule.html":{}}}],["adminedit'},{'name",{"_index":179,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["adminedit.component.html",{"_index":217,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["adminedit/addgathering/addgathering.component",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["adminedit/adminedit.component",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["adminedit/userview/userview.component",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["admineditcomponent",{"_index":178,"title":{"components/AdmineditComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminlogin",{"_index":288,"title":{},"body":{"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{}}}],["adminlogin'},{'name",{"_index":181,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["adminlogin.component.html",{"_index":289,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["adminlogin/adminlogin.component",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["adminlogincomponent",{"_index":180,"title":{"components/AdminloginComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminpage",{"_index":596,"title":{},"body":{"components/NavbarComponent.html":{}}}],["again",{"_index":335,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["angular",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["angular/animations",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":95,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/ViewmyselfComponent.html":{}}}],["angular/compiler",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":85,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"dependencies.html":{}}}],["angular/core/testing/testing",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":87,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":91,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["anxiety",{"_index":734,"title":{},"body":{"components/QuestionsComponent.html":{},"components/TipsPageComponent.html":{}}}],["anxious",{"_index":655,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["anything",{"_index":710,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["api",{"_index":127,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["apibaseurl",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"index.html":{}}}],["app.component",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":182,"title":{"components/AppComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":346,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":404,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":358,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":68,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["artifacts",{"_index":988,"title":{},"body":{"index.html":{}}}],["assault",{"_index":698,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["assertive",{"_index":676,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["asserts",{"_index":753,"title":{},"body":{"components/RegisterComponent.html":{}}}],["attacks",{"_index":726,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["attend",{"_index":463,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["attendees",{"_index":540,"title":{},"body":{"interfaces/Gathering.html":{}}}],["attendees?:string",{"_index":544,"title":{},"body":{"interfaces/Gathering.html":{}}}],["attending",{"_index":467,"title":{},"body":{"components/EventsComponent.html":{}}}],["automatically",{"_index":980,"title":{},"body":{"index.html":{}}}],["available",{"_index":1009,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":688,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["avoidance",{"_index":709,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["backend",{"_index":160,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["based",{"_index":648,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["baseurl",{"_index":407,"title":{},"body":{"classes/AppPage.html":{}}}],["bcrypt.gensaltsync(10",{"_index":261,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["bcrypt.hashsync(pass",{"_index":264,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["bcryptjs",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["behaviors",{"_index":737,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["being",{"_index":667,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["body",{"_index":164,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"interfaces/Gathering.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{},"interfaces/User.html":{}}}],["boolval",{"_index":20,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["bootstrap",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["breath",{"_index":717,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["browse",{"_index":1007,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":414,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":987,"title":{},"body":{"index.html":{}}}],["c.a.l.m",{"_index":532,"title":{},"body":{"components/FooterComponent.html":{}}}],["c.a.l.m(center",{"_index":811,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["calm",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["carrying",{"_index":735,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["certain",{"_index":736,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["certified",{"_index":528,"title":{},"body":{"components/FooterComponent.html":{}}}],["change",{"_index":982,"title":{},"body":{"index.html":{}}}],["check",{"_index":1004,"title":{},"body":{"index.html":{}}}],["checks",{"_index":630,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["chest",{"_index":718,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["choices",{"_index":649,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["cities",{"_index":21,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["city",{"_index":133,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/ViewmyselfComponent.html":{}}}],["city:string",{"_index":546,"title":{},"body":{"interfaces/Gathering.html":{},"interfaces/User.html":{}}}],["citynameadmin",{"_index":882,"title":{},"body":{"components/UserviewComponent.html":{}}}],["class",{"_index":97,"title":{"classes/AppPage.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":405,"title":{},"body":{"classes/AppPage.html":{}}}],["clears",{"_index":150,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["cli",{"_index":970,"title":{},"body":{"index.html":{}}}],["client",{"_index":647,"title":{},"body":{"components/QuestionsComponent.html":{},"injectables/UserService.html":{}}}],["clientmodule",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["clothes",{"_index":745,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["cluster_appmodule",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":162,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":176,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"overview.html":{}}}],["conditinal",{"_index":629,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["conditional",{"_index":327,"title":{},"body":{"components/AdminloginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{}}}],["confirm('are",{"_index":461,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["console.log(`${this.user.password",{"_index":325,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["console.log(`${this.user.username",{"_index":326,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["console.log(err",{"_index":468,"title":{},"body":{"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["console.log(newe",{"_index":135,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["console.log(newusers",{"_index":275,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(salt",{"_index":262,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(this.cities",{"_index":117,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(this.creategatheringform.get('isevent')?.value",{"_index":134,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["console.log(this.title",{"_index":460,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["console.log(this.value",{"_index":114,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["console.log(user",{"_index":319,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["const",{"_index":128,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/EventsService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["constant",{"_index":742,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["constructor(cookieservice",{"_index":582,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/TipsPageComponent.html":{}}}],["constructor(formbuilder",{"_index":37,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":832,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(loginservice",{"_index":783,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["constructor(private",{"_index":100,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"injectables/EventsService.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":894,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["constructor(userapi",{"_index":871,"title":{},"body":{"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["containing",{"_index":124,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["contains",{"_index":806,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["content",{"_index":416,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cookie",{"_index":89,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":42,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{}}}],["cookieservice,private",{"_index":451,"title":{},"body":{"components/EventsComponent.html":{}}}],["copyright",{"_index":533,"title":{},"body":{"components/FooterComponent.html":{}}}],["coverage",{"_index":902,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":756,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createadmin",{"_index":222,"title":{},"body":{"components/AdmineditComponent.html":{},"injectables/UserService.html":{}}}],["createadmin(user",{"_index":834,"title":{},"body":{"injectables/UserService.html":{}}}],["createadminform",{"_index":218,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["created",{"_index":144,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["creategathering",{"_index":28,"title":{},"body":{"components/AddgatheringComponent.html":{},"injectables/EventsService.html":{}}}],["creategathering(gathering",{"_index":489,"title":{},"body":{"injectables/EventsService.html":{}}}],["creategatheringform",{"_index":22,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["creates",{"_index":137,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["createuser",{"_index":749,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["createuser(newusers",{"_index":778,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createuser(user",{"_index":836,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserform",{"_index":748,"title":{},"body":{"components/RegisterComponent.html":{}}}],["creats",{"_index":838,"title":{},"body":{"injectables/UserService.html":{}}}],["criticized",{"_index":668,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["data",{"_index":170,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["data=this.cookieservice.get('username",{"_index":452,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["days",{"_index":656,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["declarations",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declares",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["default",{"_index":70,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":47,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["delete",{"_index":876,"title":{},"body":{"components/UserviewComponent.html":{}}}],["deleted",{"_index":881,"title":{},"body":{"components/UserviewComponent.html":{}}}],["deleteuser",{"_index":827,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(username",{"_index":840,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":348,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":286,"title":{},"body":{"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{}}}],["detail",{"_index":171,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["details",{"_index":108,"title":{},"body":{"components/AddgatheringComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{}}}],["details?:string",{"_index":545,"title":{},"body":{"interfaces/Gathering.html":{}}}],["dev",{"_index":977,"title":{},"body":{"index.html":{}}}],["development",{"_index":972,"title":{},"body":{"index.html":{}}}],["different",{"_index":659,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["difficulty",{"_index":704,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["directive",{"_index":174,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["directives",{"_index":210,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":986,"title":{},"body":{"index.html":{}}}],["directory",{"_index":991,"title":{},"body":{"index.html":{}}}],["disaster",{"_index":700,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["display",{"_index":167,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["dist",{"_index":990,"title":{},"body":{"index.html":{}}}],["dizziness",{"_index":720,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["document.getelementbyid('p').innertext",{"_index":643,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["document.getelementbyid(`${i",{"_index":651,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["documentation",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["dreams",{"_index":707,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["dynamic",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["dynamictestmodule",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["e.city",{"_index":472,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e.details",{"_index":473,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e.occurrencedata",{"_index":471,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e.organizer.username",{"_index":474,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e.title",{"_index":470,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e2e",{"_index":1002,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":406,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":411,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:6",{"_index":412,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["east",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eating",{"_index":675,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["ei.city",{"_index":477,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["ei.username",{"_index":476,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["element",{"_index":147,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["element(by.css('app",{"_index":415,"title":{},"body":{"classes/AppPage.html":{}}}],["element.checked",{"_index":652,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["element.value",{"_index":653,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["embarrassed/humiliated",{"_index":669,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["end",{"_index":1001,"title":{},"body":{"index.html":{}}}],["environment",{"_index":501,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl",{"_index":507,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":331,"title":{},"body":{"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["error",{"_index":23,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["error.error",{"_index":154,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["error.error.message",{"_index":157,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["error.status",{"_index":163,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["errorevent",{"_index":156,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["errormessage",{"_index":290,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["errormessage:string",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["errorr",{"_index":754,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors",{"_index":631,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["etc",{"_index":694,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["even",{"_index":670,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["event.target.value",{"_index":113,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["eventapi",{"_index":43,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["eventapi:eventsservice",{"_index":102,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/EventsComponent.html":{}}}],["events",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{}}}],["events'},{'name",{"_index":185,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["events.component.html",{"_index":435,"title":{},"body":{"components/EventsComponent.html":{}}}],["events/events.component",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["eventscomponent",{"_index":184,"title":{"components/EventsComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsservice",{"_index":44,"title":{"injectables/EventsService.html":{}},"body":{"components/AddgatheringComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/SupportGroupsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventtitle",{"_index":486,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventtitle(title",{"_index":491,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventtitleform",{"_index":436,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["everyday",{"_index":671,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["example",{"_index":739,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["exception",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["excessive",{"_index":721,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["execute",{"_index":998,"title":{},"body":{"index.html":{}}}],["exhibiting",{"_index":702,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["experience",{"_index":715,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["experienced",{"_index":695,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["export",{"_index":96,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["exported",{"_index":826,"title":{},"body":{"injectables/UserService.html":{}}}],["exports",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/EventsService.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["f",{"_index":35,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["false",{"_index":79,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"miscellaneous/variables.html":{}}}],["fear",{"_index":666,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fearful",{"_index":681,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fears",{"_index":730,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["feel",{"_index":654,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{}}}],["files",{"_index":983,"title":{},"body":{"index.html":{}}}],["first",{"_index":282,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["flag",{"_index":993,"title":{},"body":{"index.html":{}}}],["flashbacks",{"_index":708,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fname",{"_index":252,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["fname:string",{"_index":821,"title":{},"body":{"interfaces/User.html":{}}}],["footer",{"_index":519,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":187,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["footer.component.html",{"_index":520,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":186,"title":{"components/FooterComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":123,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["form.reset",{"_index":313,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["formbuilder",{"_index":38,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["formdata",{"_index":482,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["formdata:gathering",{"_index":504,"title":{},"body":{"injectables/EventsService.html":{}}}],["formdata:user",{"_index":855,"title":{},"body":{"injectables/UserService.html":{}}}],["formsmodule",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":600,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["frequently",{"_index":714,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fristname",{"_index":896,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["frombuilder",{"_index":563,"title":{},"body":{"components/LoginComponent.html":{}}}],["further",{"_index":1003,"title":{},"body":{"index.html":{}}}],["gathering",{"_index":24,"title":{"interfaces/Gathering.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"coverage.html":{}}}],["generate",{"_index":985,"title":{},"body":{"index.html":{}}}],["generated",{"_index":969,"title":{},"body":{"index.html":{}}}],["germs",{"_index":740,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["getf",{"_index":82,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["gethering",{"_index":139,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["gets",{"_index":229,"title":{},"body":{"components/AdmineditComponent.html":{},"classes/AppPage.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":966,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":409,"title":{},"body":{"classes/AppPage.html":{}}}],["getusers",{"_index":265,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["getusersbycookie",{"_index":828,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersbyname",{"_index":829,"title":{},"body":{"injectables/UserService.html":{}}}],["given",{"_index":845,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":685,"title":{},"body":{"components/QuestionsComponent.html":{},"index.html":{}}}],["graph",{"_index":1008,"title":{},"body":{"modules.html":{}}}],["great",{"_index":686,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["group",{"_index":168,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["groups",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["groups'},{'name",{"_index":202,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["groups.component",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["groups.component.html",{"_index":782,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts",{"_index":781,"title":{},"body":{"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["groups.component.ts:16",{"_index":784,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:21",{"_index":790,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:22",{"_index":788,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:27",{"_index":787,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:28",{"_index":791,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:29",{"_index":794,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:30",{"_index":793,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:31",{"_index":792,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:32",{"_index":789,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:56",{"_index":786,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:61",{"_index":785,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups/support",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["handleerror",{"_index":29,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["handleerror(error",{"_index":57,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["handles",{"_index":153,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["handling",{"_index":98,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["hands",{"_index":744,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["having",{"_index":690,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["header",{"_index":483,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["headers",{"_index":865,"title":{},"body":{"injectables/UserService.html":{}}}],["headersettings",{"_index":508,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["help",{"_index":527,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["helpline",{"_index":521,"title":{},"body":{"components/FooterComponent.html":{}}}],["here",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":597,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":173,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["http",{"_index":297,"title":{},"body":{"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"injectables/EventsService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["http://a9f0bbf7745324be4ade24e93f11495a",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":979,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":499,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httpclient,private",{"_index":505,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["httperror",{"_index":567,"title":{},"body":{"components/LoginComponent.html":{}}}],["httperrorresponse",{"_index":58,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["httpheaders",{"_index":500,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httpheaders(headersettings",{"_index":510,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["id",{"_index":317,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{}}}],["identifier",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":673,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["if(this.admin",{"_index":591,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.creategatheringform.get('isevent')?.value",{"_index":120,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["if(this.data",{"_index":457,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{}}}],["if(user.username",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{}}}],["ignore",{"_index":250,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["implementation",{"_index":99,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["import",{"_index":84,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["imports",{"_index":246,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{}}}],["include",{"_index":689,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["injectable",{"_index":479,"title":{"injectables/EventsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":480,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":769,"title":{},"body":{"components/RegisterComponent.html":{}}}],["injection",{"_index":691,"title":{},"body":{"components/QuestionsComponent.html":{},"injectables/UserService.html":{}}}],["input",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{},"components/QuestionsComponent.html":{}}}],["inserts",{"_index":146,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["instanceof",{"_index":155,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["intended",{"_index":525,"title":{},"body":{"components/FooterComponent.html":{}}}],["intense",{"_index":665,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["interface",{"_index":537,"title":{"interfaces/Gathering.html":{},"interfaces/User.html":{}},"body":{"interfaces/Gathering.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":538,"title":{},"body":{"interfaces/Gathering.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isadmin",{"_index":274,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["isevent",{"_index":109,"title":{},"body":{"components/AddgatheringComponent.html":{},"interfaces/Gathering.html":{}}}],["isevent:boolean",{"_index":547,"title":{},"body":{"interfaces/Gathering.html":{}}}],["iterates",{"_index":645,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["join",{"_index":797,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["joined",{"_index":799,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["jquery",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":1000,"title":{},"body":{"index.html":{}}}],["know",{"_index":731,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["known",{"_index":724,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["last",{"_index":283,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["lastname",{"_index":898,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["lead",{"_index":741,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["legend",{"_index":172,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"overview.html":{}}}],["lengths",{"_index":687,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["lifestyle",{"_index":812,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["list",{"_index":484,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["literal",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lname",{"_index":253,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["lname:string",{"_index":820,"title":{},"body":{"interfaces/User.html":{}}}],["login",{"_index":287,"title":{},"body":{"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["login'},{'name",{"_index":189,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["login(f",{"_index":298,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.html",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":188,"title":{"components/LoginComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice",{"_index":292,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["loginservice:userservice",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":595,"title":{},"body":{"components/NavbarComponent.html":{}}}],["longer",{"_index":713,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["loop",{"_index":641,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["lot",{"_index":658,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["making",{"_index":678,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["matching",{"_index":213,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mediation",{"_index":813,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["member",{"_index":801,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["members",{"_index":800,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["message",{"_index":151,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["method",{"_index":228,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["miscellaneous",{"_index":1014,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":621,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["models",{"_index":565,"title":{},"body":{"components/LoginComponent.html":{}}}],["models/gathering",{"_index":94,"title":{},"body":{"components/AddgatheringComponent.html":{},"injectables/EventsService.html":{}}}],["models/user",{"_index":248,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":345,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":347,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":712,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["months",{"_index":663,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["more",{"_index":664,"title":{},"body":{"components/QuestionsComponent.html":{},"index.html":{}}}],["multiple",{"_index":566,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":51,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"index.html":{}}}],["navbar",{"_index":579,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":191,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["navbar.component.html",{"_index":580,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":190,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":978,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":410,"title":{},"body":{"classes/AppPage.html":{}}}],["network",{"_index":158,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["new",{"_index":138,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"injectables/EventsService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newe",{"_index":129,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["newusers",{"_index":270,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["next",{"_index":815,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["ng",{"_index":975,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":299,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["ngmodule",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["ngx",{"_index":88,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"dependencies.html":{}}}],["notfound",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":193,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["notfound.component",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notfound.component.html",{"_index":599,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfoundcomponent",{"_index":192,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nothiing",{"_index":808,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["null",{"_index":312,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["number",{"_index":817,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["object",{"_index":683,"title":{},"body":{"components/QuestionsComponent.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":142,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["occurrencedata",{"_index":107,"title":{},"body":{"components/AddgatheringComponent.html":{},"interfaces/Gathering.html":{}}}],["occurrencedata:string",{"_index":542,"title":{},"body":{"interfaces/Gathering.html":{}}}],["oncityselect",{"_index":31,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["oncityselect(event",{"_index":61,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["ondelete(username,password",{"_index":875,"title":{},"body":{"components/UserviewComponent.html":{}}}],["ongoing",{"_index":727,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["ontitleselect",{"_index":440,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["ontitleselect(event",{"_index":442,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["optional",{"_index":53,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["organizer",{"_index":541,"title":{},"body":{"interfaces/Gathering.html":{}}}],["organizer?:user",{"_index":543,"title":{},"body":{"interfaces/Gathering.html":{}}}],["otherwise",{"_index":723,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["out",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionsComponent.html":{},"index.html":{},"overview.html":{}}}],["outputs",{"_index":642,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["overview",{"_index":1010,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":944,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/TipsPageComponent.html":{}}}],["page'},{'name",{"_index":205,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["page.component",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":804,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page.component.ts",{"_index":803,"title":{},"body":{"components/TipsPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:14",{"_index":805,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page.component.ts:19",{"_index":809,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page.component.ts:24",{"_index":807,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page/tips",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TipsPageComponent.html":{},"coverage.html":{}}}],["pain",{"_index":719,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["panic",{"_index":725,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["param",{"_index":311,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["particular",{"_index":682,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["pass",{"_index":258,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["passhash",{"_index":263,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["password",{"_index":255,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/ViewmyselfComponent.html":{}}}],["password:string",{"_index":823,"title":{},"body":{"interfaces/User.html":{}}}],["path",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paths",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["period",{"_index":661,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["perspiration",{"_index":722,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["plane",{"_index":693,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["please",{"_index":478,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["popper.js",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["presentational",{"_index":530,"title":{},"body":{"components/FooterComponent.html":{}}}],["presented",{"_index":646,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["previous",{"_index":814,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["private",{"_index":101,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["prod",{"_index":992,"title":{},"body":{"index.html":{}}}],["production",{"_index":994,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["professionals",{"_index":529,"title":{},"body":{"components/FooterComponent.html":{}}}],["profile",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":195,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["profile.component.html",{"_index":602,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile/viewmyself/viewmyself.component",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecomponent",{"_index":194,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":968,"title":{},"body":{"index.html":{}}}],["promise",{"_index":408,"title":{},"body":{"classes/AppPage.html":{}}}],["promises",{"_index":233,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["properties",{"_index":19,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["property",{"_index":125,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["prototype",{"_index":524,"title":{},"body":{"components/FooterComponent.html":{}}}],["protractor",{"_index":413,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provided",{"_index":825,"title":{},"body":{"injectables/UserService.html":{}}}],["providedin",{"_index":503,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":291,"title":{},"body":{"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["purpose",{"_index":531,"title":{},"body":{"components/FooterComponent.html":{}}}],["question",{"_index":637,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["questions",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/QuestionsComponent.html":{}}}],["questions'},{'name",{"_index":197,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["questions.component.html",{"_index":638,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["questions/questions.component",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["questionscomponent",{"_index":196,"title":{"components/QuestionsComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactive",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["reactiveformsmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":1005,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":644,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["record",{"_index":877,"title":{},"body":{"components/UserviewComponent.html":{}}}],["refresh",{"_index":32,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["refreshevents",{"_index":487,"title":{},"body":{"injectables/EventsService.html":{}}}],["refreshgroups",{"_index":488,"title":{},"body":{"injectables/EventsService.html":{}}}],["refreshlist",{"_index":830,"title":{},"body":{"injectables/UserService.html":{}}}],["refreshmap",{"_index":831,"title":{},"body":{"injectables/UserService.html":{}}}],["register",{"_index":278,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":199,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["register.component.html",{"_index":747,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":198,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":280,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["related",{"_index":711,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["relaxing",{"_index":705,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["relieve",{"_index":733,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["reload",{"_index":981,"title":{},"body":{"index.html":{}}}],["replace",{"_index":526,"title":{},"body":{"components/FooterComponent.html":{}}}],["require",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":169,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":514,"title":{},"body":{"injectables/EventsService.html":{},"components/SupportGroupsComponent.html":{},"injectables/UserService.html":{}}}],["reserved",{"_index":536,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["reseterror",{"_index":33,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["resetform",{"_index":294,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["resetform(form",{"_index":301,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["resets",{"_index":269,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["respectively",{"_index":846,"title":{},"body":{"injectables/UserService.html":{}}}],["response",{"_index":165,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["result",{"_index":212,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":701,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["results",{"_index":214,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":110,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":161,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["returns",{"_index":55,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["rights",{"_index":535,"title":{},"body":{"components/FooterComponent.html":{}}}],["rituals",{"_index":738,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["root",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":183,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["router",{"_index":41,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":420,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":974,"title":{},"body":{"index.html":{}}}],["running",{"_index":995,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":260,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":984,"title":{},"body":{"index.html":{}}}],["see",{"_index":284,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["serve",{"_index":976,"title":{},"body":{"index.html":{}}}],["server",{"_index":973,"title":{},"body":{"index.html":{}}}],["service",{"_index":90,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["services",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["services/events.service",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["services/user.service",{"_index":249,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{}}}],["set",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["shortness",{"_index":716,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["show",{"_index":437,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["showa",{"_index":581,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showmyc",{"_index":219,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["showmycontainer",{"_index":220,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["showmygathering",{"_index":221,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["shownotlogged",{"_index":438,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["silly",{"_index":732,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["site",{"_index":523,"title":{},"body":{"components/FooterComponent.html":{}}}],["situation",{"_index":684,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["situations",{"_index":672,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["small",{"_index":679,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["sorry",{"_index":333,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"index.html":{}}}],["span')).gettext",{"_index":417,"title":{},"body":{"classes/AppPage.html":{}}}],["speaking",{"_index":674,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["spec\\.ts",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts",{"_index":9,"title":{},"body":{"components/AddgatheringComponent.html":{},"coverage.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:105",{"_index":65,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:15",{"_index":69,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:16",{"_index":81,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:17",{"_index":78,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:18",{"_index":77,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:19",{"_index":80,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:20",{"_index":67,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:21",{"_index":74,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:23",{"_index":48,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:29",{"_index":60,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:39",{"_index":83,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:41",{"_index":62,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:46",{"_index":64,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:56",{"_index":54,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:98",{"_index":59,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts",{"_index":215,"title":{},"body":{"components/AdmineditComponent.html":{},"coverage.html":{}}}],["src/app/adminedit/adminedit.component.ts:101",{"_index":235,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:111",{"_index":224,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:33",{"_index":244,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:34",{"_index":243,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:35",{"_index":238,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:36",{"_index":242,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:37",{"_index":237,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:39",{"_index":223,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:43",{"_index":239,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:44",{"_index":240,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:45",{"_index":241,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:49",{"_index":226,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:61",{"_index":225,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:68",{"_index":236,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:71",{"_index":245,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:95",{"_index":227,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts",{"_index":868,"title":{},"body":{"components/UserviewComponent.html":{},"coverage.html":{}}}],["src/app/adminedit/userview/userview.component.ts:10",{"_index":872,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts:12",{"_index":874,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts:14",{"_index":873,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts",{"_index":285,"title":{},"body":{"components/AdminloginComponent.html":{},"coverage.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:18",{"_index":307,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:19",{"_index":304,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:24",{"_index":305,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:25",{"_index":308,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:27",{"_index":295,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:32",{"_index":306,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:46",{"_index":302,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:61",{"_index":300,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:89",{"_index":296,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/app",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/events/events.component.ts",{"_index":434,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/events/events.component.ts:21",{"_index":445,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:22",{"_index":447,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:23",{"_index":450,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:24",{"_index":449,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:25",{"_index":448,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:26",{"_index":446,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:55",{"_index":443,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:61",{"_index":441,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/footer/footer.component.ts",{"_index":518,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:103",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:24",{"_index":561,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":562,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":560,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:75",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/gathering.ts",{"_index":539,"title":{},"body":{"interfaces/Gathering.html":{},"coverage.html":{}}}],["src/app/models/user",{"_index":893,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/models/user.ts",{"_index":819,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":578,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:10",{"_index":583,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:22",{"_index":587,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:23",{"_index":586,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:24",{"_index":588,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":589,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:26",{"_index":584,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/notfound.component.ts",{"_index":598,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":601,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:14",{"_index":605,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:17",{"_index":618,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:19",{"_index":614,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:20",{"_index":615,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:21",{"_index":612,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:22",{"_index":619,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:23",{"_index":616,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:24",{"_index":617,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:27",{"_index":613,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:28",{"_index":607,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:41",{"_index":606,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:49",{"_index":609,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:58",{"_index":610,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:61",{"_index":620,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:63",{"_index":608,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:67",{"_index":611,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts",{"_index":886,"title":{},"body":{"components/ViewmyselfComponent.html":{},"coverage.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:11",{"_index":891,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:12",{"_index":888,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:13",{"_index":892,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:15",{"_index":890,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:26",{"_index":889,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/questions/questions.component.ts",{"_index":636,"title":{},"body":{"components/QuestionsComponent.html":{},"coverage.html":{}}}],["src/app/questions/questions.component.ts:18",{"_index":640,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":746,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:107",{"_index":758,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:111",{"_index":751,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":765,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":767,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":763,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":764,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":761,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":762,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":750,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":766,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:49",{"_index":755,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:64",{"_index":752,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:72",{"_index":759,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:78",{"_index":760,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:81",{"_index":768,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/services/events.service",{"_index":92,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/services/events.service.ts",{"_index":481,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/app/services/events.service.ts:13",{"_index":498,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:14",{"_index":496,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:15",{"_index":497,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:16",{"_index":495,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:25",{"_index":493,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:31",{"_index":494,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:37",{"_index":492,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:44",{"_index":490,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/user.service",{"_index":93,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":824,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:13",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:14",{"_index":852,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:15",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:16",{"_index":851,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:20",{"_index":833,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":837,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:40",{"_index":835,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:50",{"_index":842,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:57",{"_index":844,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:62",{"_index":843,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:68",{"_index":847,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:74",{"_index":848,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:79",{"_index":841,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:83",{"_index":850,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/support",{"_index":780,"title":{},"body":{"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["src/app/tips",{"_index":802,"title":{},"body":{"components/TipsPageComponent.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":502,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":148,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["started",{"_index":967,"title":{"index.html":{}},"body":{}}],["statement",{"_index":328,"title":{},"body":{"components/AdminloginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{}}}],["statements",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":166,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["stored",{"_index":989,"title":{},"body":{"index.html":{}}}],["string",{"_index":75,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/ViewmyselfComponent.html":{}}}],["string,password",{"_index":863,"title":{},"body":{"injectables/UserService.html":{}}}],["submit",{"_index":639,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["submitted",{"_index":25,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(res",{"_index":879,"title":{},"body":{"components/UserviewComponent.html":{}}}],["successfully",{"_index":318,"title":{},"body":{"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["support",{"_index":201,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"modules.html":{}}}],["supportgroupscomponent",{"_index":200,"title":{"components/SupportGroupsComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sure",{"_index":462,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["svg",{"_index":1006,"title":{},"body":{"modules.html":{}}}],["symptoms",{"_index":703,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["table",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":593,"title":{},"body":{"components/NavbarComponent.html":{}}}],["talk",{"_index":680,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["test",{"_index":594,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tests",{"_index":997,"title":{},"body":{"index.html":{}}}],["text",{"_index":72,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["then(res",{"_index":465,"title":{},"body":{"components/EventsComponent.html":{},"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["things",{"_index":660,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["this.boolval",{"_index":121,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.cities",{"_index":116,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.cookieservice.deleteall",{"_index":309,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{}}}],["this.cookieservice.get('isadmin",{"_index":585,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.cookieservice.get('password",{"_index":516,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.cookieservice.get('username",{"_index":444,"title":{},"body":{"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/SupportGroupsComponent.html":{},"injectables/UserService.html":{}}}],["this.cookieservice.set('isadmin",{"_index":324,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.cookieservice.set('password",{"_index":322,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.cookieservice.set('password',`${this.user.password",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.cookieservice.set('username",{"_index":320,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.cookieservice.set('username',`${this.user.username",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createadminform",{"_index":251,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.controls",{"_index":257,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('fname')?.value",{"_index":271,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('lname')?.value",{"_index":272,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('password')?.value",{"_index":259,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('username')?.value",{"_index":273,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.creategatheringform",{"_index":105,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.creategatheringform.controls",{"_index":111,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.creategatheringform.get('details')?.value",{"_index":132,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.creategatheringform.get('occurrencedata')?.value",{"_index":131,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.creategatheringform.get('title').value",{"_index":130,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.createuserform",{"_index":770,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.controls",{"_index":772,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('fname')?.value",{"_index":774,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('lname')?.value",{"_index":775,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('password')?.value",{"_index":773,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('username')?.value",{"_index":776,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.data",{"_index":796,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["this.error",{"_index":140,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["this.eventapi.creategathering(newe",{"_index":136,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.eventapi.eventtitle(this.title",{"_index":464,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.eventapi.eventtitle(this.title).then",{"_index":798,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["this.eventapi.refreshevents",{"_index":455,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.eventapi.refreshgroups",{"_index":795,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["this.eventtitleform",{"_index":454,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.formbuilder.group",{"_index":71,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.formdata.password",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["this.formdata.username",{"_index":859,"title":{},"body":{"injectables/UserService.html":{}}}],["this.gathering.unshift(gethering",{"_index":145,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.handleerror(err",{"_index":332,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.handleerror(error",{"_index":152,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["this.header",{"_index":509,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.http.delete(`${this.url}/api/users",{"_index":864,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.url}/api/gathering/events",{"_index":511,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.get(`${this.url}/api/gathering/groups",{"_index":515,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.get(`${this.url}/api/users",{"_index":858,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.url}/api/users/${username}/${password",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get>(`${this.url}/api/map",{"_index":862,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.url}/api/admin/${username}/${password",{"_index":857,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.url}/api/gathering/${username}/${password",{"_index":517,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.post(`${this.url}/api/users",{"_index":856,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${this.url}/api/users/${username}/${password",{"_index":866,"title":{},"body":{"injectables/UserService.html":{}}}],["this.list",{"_index":513,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.loginservice.formdata",{"_index":314,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.loginservice.getusersbyname().then",{"_index":315,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.refresh",{"_index":104,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.reseterror",{"_index":149,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.resetform",{"_index":310,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/adminedit",{"_index":330,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":779,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/support",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.show",{"_index":456,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.showa",{"_index":590,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.shownotlogged",{"_index":458,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.submitted",{"_index":118,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.title",{"_index":459,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.toastr.error('admin",{"_index":277,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.toastr.error('error",{"_index":141,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.toastr.error('user",{"_index":632,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastr.info('admin",{"_index":279,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.toastr.info('gathering",{"_index":143,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.toastr.info('get",{"_index":316,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.toastr.info('user",{"_index":634,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastr.warning('add",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastr.warning('added",{"_index":466,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.toastr.warning('deleted",{"_index":880,"title":{},"body":{"components/UserviewComponent.html":{}}}],["this.updateuserform",{"_index":622,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.controls",{"_index":623,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.get('fname').value",{"_index":624,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.get('lname').value",{"_index":625,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.get('password').value",{"_index":627,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.get('username').value",{"_index":626,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.url",{"_index":506,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.user",{"_index":267,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["this.user.password",{"_index":323,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.user.unshift(user",{"_index":281,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["this.user.username",{"_index":321,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.userapi",{"_index":777,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userapi.createadmin(newusers",{"_index":276,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.userapi.deleteuser(username,password",{"_index":878,"title":{},"body":{"components/UserviewComponent.html":{}}}],["this.userapi.getusers",{"_index":266,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userapi.getusersbycookie",{"_index":895,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["this.userapi.refreshlist",{"_index":810,"title":{},"body":{"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["this.userapi.refreshmap",{"_index":115,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userapi.refreshmap().then((cities",{"_index":771,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userapi.updateuser(newusers",{"_index":628,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.value",{"_index":112,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["thoughts",{"_index":729,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["through",{"_index":231,"title":{},"body":{"components/AdmineditComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{}}}],["tips",{"_index":204,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["tipspage",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tipspagecomponent",{"_index":203,"title":{"components/TipsPageComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["title",{"_index":106,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/SupportGroupsComponent.html":{}}}],["title:string",{"_index":453,"title":{},"body":{"components/EventsComponent.html":{},"interfaces/Gathering.html":{}}}],["titledateslocationdetailsorganizer",{"_index":469,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["tittle",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["toastr",{"_index":39,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":40,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["toastrservice,public",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["topromise",{"_index":512,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["tostrmodule",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["total",{"_index":816,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["traumatic",{"_index":696,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["travelling",{"_index":692,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["true",{"_index":119,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":334,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{}}}],["tslib",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":52,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u.city",{"_index":883,"title":{},"body":{"components/UserviewComponent.html":{}}}],["u.isadmin",{"_index":885,"title":{},"body":{"components/UserviewComponent.html":{}}}],["u.username",{"_index":884,"title":{},"body":{"components/UserviewComponent.html":{}}}],["undefined",{"_index":76,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["unit",{"_index":996,"title":{},"body":{"index.html":{}}}],["unwanted/intrusive",{"_index":728,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["update",{"_index":633,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updated",{"_index":635,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updates",{"_index":475,"title":{},"body":{"components/EventsComponent.html":{}}}],["updateuser",{"_index":604,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["updateuser(user",{"_index":849,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserform",{"_index":603,"title":{},"body":{"components/ProfileComponent.html":{}}}],["upsetting",{"_index":706,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["url",{"_index":485,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["use",{"_index":232,"title":{},"body":{"components/AdmineditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["used",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["user",{"_index":122,"title":{"interfaces/User.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{}}}],["user).topromise",{"_index":867,"title":{},"body":{"injectables/UserService.html":{}}}],["user.city",{"_index":900,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["user.fname",{"_index":897,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["user.lname",{"_index":899,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["user.password",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["user.username",{"_index":901,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["userapi",{"_index":45,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["userapi:userservice",{"_index":103,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["userapi?.list?.length",{"_index":818,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["userform",{"_index":293,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["username",{"_index":254,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/ViewmyselfComponent.html":{}}}],["username:string",{"_index":822,"title":{},"body":{"interfaces/User.html":{}}}],["users",{"_index":230,"title":{},"body":{"components/AdmineditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["userservice",{"_index":46,"title":{"injectables/UserService.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userview",{"_index":869,"title":{},"body":{"components/UserviewComponent.html":{}}}],["userview'},{'name",{"_index":207,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["userview.component.html",{"_index":870,"title":{},"body":{"components/UserviewComponent.html":{}}}],["userviewcomponent",{"_index":206,"title":{"components/UserviewComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":268,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["using",{"_index":839,"title":{},"body":{"injectables/UserService.html":{}}}],["utilized",{"_index":329,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["validates",{"_index":757,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validation",{"_index":559,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators",{"_index":86,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["validators.minlength(6",{"_index":256,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":73,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["validtors",{"_index":564,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":126,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":175,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["variable",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1015,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":971,"title":{},"body":{"index.html":{}}}],["via",{"_index":999,"title":{},"body":{"index.html":{}}}],["view",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["viewmyself",{"_index":209,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["viewmyself.component.html",{"_index":887,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["viewmyselfcomponent",{"_index":208,"title":{"components/ViewmyselfComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["void",{"_index":56,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["war",{"_index":697,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["washing",{"_index":743,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["work",{"_index":677,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["worrying",{"_index":657,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["x1f3e0;home",{"_index":592,"title":{},"body":{"components/NavbarComponent.html":{}}}],["yes",{"_index":303,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["zone.js",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddgatheringComponent.html":{"url":"components/AddgatheringComponent.html","title":"component - AddgatheringComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddgatheringComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminedit/addgathering/addgathering.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addgathering\n            \n\n\n\n\n            \n                templateUrl\n                ./addgathering.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boolval\n                            \n                            \n                                cities\n                            \n                            \n                                CreateGatheringForm\n                            \n                            \n                                error\n                            \n                            \n                                Gathering\n                            \n                            \n                                submitted\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateGathering\n                            \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCitySelect\n                            \n                            \n                                refresh\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, toastr: ToastrService, router: Router, CookieService: CookieService, eventApi: EventsService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminedit/addgathering/addgathering.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventApi\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateGathering\n                        \n                        \n                    \n                \n            \n            \n                \nCreateGathering()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCitySelect\n                        \n                        \n                    \n                \n            \n            \n                \nonCitySelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boolval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateGatheringForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Gathering\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gathering[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:39\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { EventsService } from 'src/app/services/events.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Gathering from '../../models/Gathering';\nimport { HttpErrorResponse } from '@angular/common/http';\n@Component({\n  selector: 'app-addgathering',\n  templateUrl: './addgathering.component.html'\n})\nexport class AddgatheringComponent implements OnInit {\n  cities: Array;\nvalue: string;\nGathering: Gathering[] = [];\nerror: string | undefined; // error handling implementation\nsubmitted = false;\nboolval: boolean;\n  CreateGatheringForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n  constructor(private formBuilder: FormBuilder, private toastr: ToastrService,\n    private router: Router,  private CookieService: CookieService,\n     private eventApi:EventsService,\n     private userApi:UserService) { }\n\n  ngOnInit(){\n    this.refresh()\n    \n    this.CreateGatheringForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      occurrenceData: ['', Validators.required],\n      details: ['', Validators.required],\n   isEvent:['']\n  });\n  }\n  get f() { return this.CreateGatheringForm.controls; }\n\n  onCitySelect(event) {\n    this.value= event.target.value;\n    console.log(this.value)\n}\n\nrefresh(){\n  return this.userApi.refreshMap()\n  .then(\n    cities => {\n      this.cities= cities;\n      console.log(this.cities)\n    })\n\n}\n\nCreateGathering() {\n  this.submitted = true;\n  if(this.CreateGatheringForm.get('isEvent')?.value == \"true\"){\n   this.boolval = true\n  }\n  else{\n    this.boolval = false\n  }\n  /**\n   * User form containing property values from API\n   */\n  const newE: Gathering = {\n    title: this.CreateGatheringForm.get('title').value,\n    occurrenceData: this.CreateGatheringForm.get('occurrenceData')?.value,\n    details: this.CreateGatheringForm.get('details')?.value,  \n    city:  this.value,\n    isEvent: this.boolval,\n  \n  };\n  console.log(this.CreateGatheringForm.get('isEvent')?.value)\nconsole.log(newE)\n\n  this.eventApi.CreateGathering(newE) // creates new user\n    .then(\n      Gethering => {\n        if (this.error) {\n\n         this.toastr.error('Error occurred', 'Error');\n\n\n        } else {\n          this.toastr.info('Gathering Created', 'Created');\n\n          this.Gathering.unshift(Gethering); //inserts new element at start of array\n          this.resetError(); //clears error message\n        }\n      },\n      error => this.handleError(error) //handles error message\n    );\n\n\n}\nhandleError(error: HttpErrorResponse) {\n  if (error.error instanceof ErrorEvent) {\n    this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n  } else {\n    this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n  }\n}\nresetError() {\n  this.error = undefined; //clears error message\n}\n\n}\n\n    \n\n    \n        \n   \n\n        \n\n\n            Add an event or Group\n\n\n         Title:\n             \n                 \n                     Title is required\n                 \n         \n         Data:\n             \n                 \n                     Data is required\n                 \n         \n         Details:\n             \n                 \n                     Detail required\n                 \n         \n         City:\n             \n             \n           {{city}}\n             \n         \n          \n         Event or Group:\n             Event\n                 Group\n         \n\n\n         \n             Add\n     \n     \n         {{ error }}\n     \n\n\n\n\n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                       Add an event or Group         Title:                                                   Title is required                                   Data:                                                   Data is required                                   Details:                                                   Detail required                                   City:                                     {{city}}                                         Event or Group:             Event                 Group                               Add                   {{ error }}         '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddgatheringComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdmineditComponent.html":{"url":"components/AdmineditComponent.html","title":"component - AdmineditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdmineditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminedit/adminedit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adminedit\n            \n\n\n\n\n            \n                templateUrl\n                ./adminedit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreateAdminForm\n                            \n                            \n                                error\n                            \n                            \n                                showMyC\n                            \n                            \n                                showMyContainer\n                            \n                            \n                                showMyGathering\n                            \n                            \n                                submitted\n                            \n                            \n                                User\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateAdmin\n                            \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCitySelect\n                            \n                            \n                                refresh\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, toastr: ToastrService, router: Router, CookieService: CookieService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminedit/adminedit.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateAdmin\n                        \n                        \n                    \n                \n            \n            \n                \nCreateAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCitySelect\n                        \n                        \n                    \n                \n            \n            \n                \nonCitySelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:95\n                \n            \n\n\n            \n                \n                    method that gets users through the use of promises to accept response from api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateAdminForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showMyC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showMyContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showMyGathering\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/adminedit/adminedit.component.ts:71\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; // imports component OnInit\n\n/**\n * app admin component.\n */\n\n//import { Component, OnInit } from '@angular/core';\nimport User from '../models/User';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'app-adminedit',\n  templateUrl: './adminedit.component.html'\n})\nexport class AdmineditComponent implements OnInit {\n\n// constructor with no parameters\n\n/**\n * @ignore\n */\ncities: Array;\nvalue: string;\n  User: User[] = [];\n  error: string | undefined; // error handling implementation\n  submitted = false;\n  CreateAdminForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n  constructor(private formBuilder: FormBuilder, private toastr: ToastrService,\n    private router: Router,  private CookieService: CookieService,\n     private userApi:UserService) { }\n     showMyC: boolean = false;\n     showMyContainer: boolean = false;\n     showMyGathering: boolean = false;\n\n\n\n  ngOnInit() {\n    this.refresh()\n    \n    this.CreateAdminForm = this.formBuilder.group({\n      fName: ['', Validators.required],\n      lName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n\n  });\n  }\n\n    handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n      } else {\n        this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n      }\n    }\n    resetError() {\n      this.error = undefined; //clears error message\n    }\n    get f() { return this.CreateAdminForm.controls; }\n\n  //  const pass= this.CreateAdminForm.get('password')?.value;\n  //  const salt =  bcrypt.genSaltSync(10);\n  //  console.log(salt)\n  // const  passhash = bcrypt.hashSync(pass, salt);\n\n\n  /**\n   * method that gets users through the use of promises to accept response from api\n   */\n\n    // getUsers() {\n    //   return this.userApi.getUsers()\n    //     .then(\n    //       User => {\n    //         this.User = User; //uses promises to accept the api response\n    //         this.resetError(); //resets error message\n    //       },\n    //       error => {\n    //         this.handleError(error); //handles error\n    //       }\n    //     );\n    // }\n    onCitySelect(event) {\n      this.value= event.target.value;\n      console.log(this.value)\n  }\n\n  \n  refresh(){\n    return this.userApi.refreshMap()\n    .then(\n      cities => {\n        this.cities= cities;\n        console.log(this.cities)\n      })\n \n  }\n\n    CreateAdmin() {\n      this.submitted = true;\n      /**\n       * User form containing property values from API\n       */\n      const newUsers: User = {\n        fName: this.CreateAdminForm.get('fName')?.value,\n        lName: this.CreateAdminForm.get('lName')?.value,\n        username: this.CreateAdminForm.get('username')?.value,\n        password: this.CreateAdminForm.get('password')?.value,\n        city:  this.value,\n        isAdmin: true,\n\n      };\n  console.log(newUsers)\n\n      this.userApi.CreateAdmin(newUsers) // creates new user\n        .then(\n          User => {\n            if (this.error) {\n\n             this.toastr.error('Admin Register', 'Error');\n\n\n            } else {\n              this.toastr.info('Admin Created', 'registered');\n\n              this.User.unshift(User); //inserts new element at start of array\n              this.resetError(); //clears error message\n            }\n          },\n          error => this.handleError(error) //handles error message\n        );\n\n\n  }\n\n  }\n\n    \n\n    \n        \n\n\n\n    \n\n                \n                    Add new Admin\n        \n                    \n\n                    \n\n\n                           Add an admin\n\n\n                        First Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        Last Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        Admin Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        City:\n                            \n                            \n                          {{city}}\n                            \n                        \n                         \n                         password:\n                            \n                                \n                                    password is required\n                                \n                        \n\n\n                        \n                            Register\n                    \n                    \n                        {{ error }}\n                    \n                \n                See all users\n              \n                \n              \n                    \n                \n\n                Add a new Gathering\n              \n                \n              \n                    \n                \n\n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Add new Admin                                                                           Add an admin                        First Name:                                                                                                Name is required                                                                                Last Name:                                                                                                Name is required                                                                                Admin Name:                                                                                                Name is required                                                                                City:                                                                                  {{city}}                                                                                                      password:                                                                                                password is required                                                                                                            Register                                                                {{ error }}                                                    See all users                                                                                                Add a new Gathering                                                                                            '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdmineditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminloginComponent.html":{"url":"components/AdminloginComponent.html","title":"component - AdminloginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminloginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminlogin/adminlogin.component.ts\n\n\n    \n        Description\n    \n    \n        app admin login component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adminlogin\n            \n\n\n\n\n            \n                templateUrl\n                ./adminlogin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Public\n                                LoginService\n                            \n                            \n                                user\n                            \n                            \n                                UserForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                Login\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, toastr: ToastrService, LoginService: UserService, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminlogin/adminlogin.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LoginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminlogin/adminlogin.component.ts:89\n                \n            \n\n\n            \n                \n                    this is an HTTP error handling method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Login\n                        \n                        \n                    \n                \n            \n            \n                \nLogin(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminlogin/adminlogin.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm(form?: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminlogin/adminlogin.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:24\n                            \n                        \n\n                \n                    \n                        error message form for user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            LoginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, NgForm } from '@angular/forms';\nimport User from '../models/User';\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n/**\n * app admin login component.\n */\n@Component({\n  selector: 'app-adminlogin',\n  templateUrl: './adminlogin.component.html',\n})\nexport class AdminloginComponent implements OnInit {\n  user: User;\n  error: string | undefined;\n\n  /**\n   * error message form for user.\n   */\n  errorMessage: string;\n  UserForm = this.formBuilder.group({\n    text: ['', Validators.required],\n  });\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService,\n    public LoginService: UserService,\n    private cookieService: CookieService\n  ) {}\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.cookieService.deleteAll();\n    this.resetForm();\n  }\n  /**\n   *\n   * @param form\n   */\n  resetForm(form?: NgForm) {\n    if (form != null) form.reset();\n    this.LoginService.formData = {\n      fName: '',\n      lName: '',\n      username: '',\n      password: '',\n      city: '',\n      isAdmin: false,\n    };\n  }\n  /**\n   *\n   * @param f\n   */\n  Login(f: NgForm) {\n    return this.LoginService.getUsersByName().then(\n      (user) => {\n        this.toastr.info('Get By id successfully', 'Get user by id');\n        this.user = user;\n        console.log(user);\n        this.cookieService.set('username', `${this.user.username}`);\n        this.cookieService.set('password', `${this.user.password}`);\n        this.cookieService.set('isAdmin', 'true');\n        console.log(`${this.user.password}`);\n\n        console.log(`${this.user.username}`);\n\n        /**\n         * Conditional statement utilized.\n         */\n\n        this.router.navigate(['/adminedit']);\n      },\n      (err) => {\n        this.handleError(err);\n      }\n    );\n  }\n  /**\n   * this is an HTTP error handling method.\n   * @param error\n   */\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n    } else {\n      this.error = `Sorry try again, error ${error.status}, ${error.error.message}`; //If the response status code was an error then display said error\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n     \n            \n  \n\n  \n              \n                \n                 \n                Admin name\n  \n                \n                  password\n                \n  \n  \n                \n  \n                AdminLogin\n                \n                      {{error}}  \n                  \n                \n                \n\n  \n  \n              \n            \n          \n        \n        \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Admin name                                    password                                                      AdminLogin                                      {{error}}                                                                                                                          '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminloginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        app-root component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Calm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * app-root component\n */\n @Component({\n   selector: 'app-root',\n   templateUrl: './app.component.html'\n })\n /**\n  * Application tittle set here\n  */\n export class AppComponent {\n   title = 'Calm';\n }\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddgatheringComponent\n\nAddgatheringComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddgatheringComponent->AppModule\n\n\n\n\n\nAdmineditComponent\n\nAdmineditComponent\n\nAppModule -->\n\nAdmineditComponent->AppModule\n\n\n\n\n\nAdminloginComponent\n\nAdminloginComponent\n\nAppModule -->\n\nAdminloginComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nAppModule -->\n\nQuestionsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSupportGroupsComponent\n\nSupportGroupsComponent\n\nAppModule -->\n\nSupportGroupsComponent->AppModule\n\n\n\n\n\nTipsPageComponent\n\nTipsPageComponent\n\nAppModule -->\n\nTipsPageComponent->AppModule\n\n\n\n\n\nUserviewComponent\n\nUserviewComponent\n\nAppModule -->\n\nUserviewComponent->AppModule\n\n\n\n\n\nViewmyselfComponent\n\nViewmyselfComponent\n\nAppModule -->\n\nViewmyselfComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nAppModule -->\n\nEventsService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddgatheringComponent\n                        \n                        \n                            AdmineditComponent\n                        \n                        \n                            AdminloginComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            EventsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotfoundComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            QuestionsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            SupportGroupsComponent\n                        \n                        \n                            TipsPageComponent\n                        \n                        \n                            UserviewComponent\n                        \n                        \n                            ViewmyselfComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EventsService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule} from '@angular/router';\n\n\n/**\n * imports of all components from each individual component\n */\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TipsPageComponent } from './tips-page/tips-page.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n/**\n * imports HTTP clientmodule and reactive form.\n */\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n//import { DynamicTestModule} from '@angular/core/testing/testing'\n\n/**\n * imports a cookieservice and a tostrmodule.\n */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {ToastrModule} from 'ngx-toastr';\nimport {CookieService} from 'ngx-cookie-service';\nimport { NotfoundComponent } from './notfound.component';\nimport { EventsComponent } from './events/events.component';\nimport { SupportGroupsComponent } from './support-groups/support-groups.component';\nimport { QuestionsComponent } from './questions/questions.component';\n\n\n\n/**\n * ngModule that declares all components\n */\n\nimport { AdminloginComponent } from './adminlogin/adminlogin.component';\nimport { AdmineditComponent } from './adminedit/adminedit.component';\nimport { UserService } from './services/user.service';\nimport { UserviewComponent } from './adminedit/userview/userview.component';\n\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { EventsService } from './services/events.service';\nimport { AddgatheringComponent } from './adminedit/addgathering/addgathering.component';\nimport { ViewmyselfComponent } from './profile/viewmyself/viewmyself.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    TipsPageComponent,\n    LoginComponent,\n    RegisterComponent,\n    NotfoundComponent,\n    EventsComponent,\n    SupportGroupsComponent,\n    QuestionsComponent,\n    AdminloginComponent,\n    AdmineditComponent,\n    UserviewComponent,\n    ProfileComponent,\n    AddgatheringComponent,\n    ViewmyselfComponent\n  ],\n  imports: [\n\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forRoot([])\n  ],\n  providers: [CookieService, UserService, EventsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n            \n                Description\n            \n            \n                export class Apppage that returns the baseUrl as Promise\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n                    gets tittle method that returns an element.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor'; // imports from a protractor\n/**\n * export class Apppage that returns the baseUrl as Promise\n */\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n  /**\n   *  gets tittle method that returns an element.\n   */\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'; //imports from ngmodule\nimport { Routes, RouterModule} from '@angular/router'; // imports angular routing module\nimport { TipsPageComponent } from './tips-page/tips-page.component'; // imports from tipspage component\nimport { LoginComponent } from './login/login.component'; // imports from login component\nimport { RegisterComponent } from './register/register.component'; // imports from register component\nimport { NotfoundComponent } from './notfound.component'; // imports from the Notfound component.\nimport { EventsComponent } from './events/events.component'; // imports event component\nimport { SupportGroupsComponent } from './support-groups/support-groups.component';\nimport { QuestionsComponent } from './questions/questions.component'; // imports questions component\n\n\n/**\n * Routing paths for all components on the user view page.\n */\n\nimport { AdminloginComponent } from './adminlogin/adminlogin.component';\nimport { AdmineditComponent } from './adminedit/adminedit.component';\nimport { ProfileComponent } from './profile/profile.component';\n/**\n * routing paths for each component.\n */\nconst routes: Routes = [\n  { path: '', component: TipsPageComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'adminlogin', component: AdminloginComponent },\n  { path: 'adminedit', component: AdmineditComponent },\n  { path: 'events', component: EventsComponent },\n  { path: 'questions', component: QuestionsComponent },\n  { path: 'support-groups', component: SupportGroupsComponent },\n  { path: 'notfound', component: NotfoundComponent },\n  { path: 'profile', component: ProfileComponent }\n]\n/**\n * imports and exports of Router\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/events.component.ts\n\n\n    \n        Description\n    \n    \n        Event component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                EventTitleForm\n                            \n                            \n                                show\n                            \n                            \n                                shownotlogged\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddUser\n                            \n                            \n                                onTitleSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddUser\n                        \n                        \n                    \n                \n            \n            \n                \nAddUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/events.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTitleSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonTitleSelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/events.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventTitleForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownotlogged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EventsService } from '../services/events.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Validators, FormBuilder } from '@angular/forms';\n/**\n * Event component\n */\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html'\n})\nexport class EventsComponent implements OnInit {\n\n/**\n * @ignore\n */\n  constructor( public eventApi:EventsService,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,private toastr: ToastrService) { }\n  data=this.cookieService.get('username');\n   show: boolean = false;\n   value: string;\n   title:string;\n   shownotlogged: boolean = false;\n   EventTitleForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n  /**\n * @ignore\n */\n  ngOnInit() {\n\n    this.EventTitleForm = this.formBuilder.group({\n    title: ['', Validators.required],\n  });\n\n    this.eventApi.refreshevents();\n    this.show = false;\n    if(this.data != \"\"){\n this.show = true;\n    }\n    else{\n    this.show = false;\n    }\n    this.shownotlogged = true;\n    if(this.data != \"\"){\n this.shownotlogged = false;\n    }\n    else{\n    this.shownotlogged = true;\n    }\n  }\n\n  onTitleSelect(event) {\n    this.value= event.target.value;\n    console.log(this.value)\n}\n\n\nAddUser(){\n   this.title= this.value;\n   console.log(this.title)\n  if (confirm('Are you sure to attend this event ?')) {\n    this.eventApi.EventTitle(this.title)\n      .then(res => {\n\n      console.log(this.title)\n        this.toastr.warning('added successfully', 'Attending event');\n      },\n        err => {\n\n          console.log(err);\n        })\n  }}\n\n}\n\n    \n\n    \n        \n  \n    \n    events\n        TitleDatesLocationDetailsOrganizer\n          \n            \n            {{e.title}}\n            {{e.occurrenceData}} \n            {{e.city}} \n            {{e.details}}\n            {{e.organizer.username}}\n\n          \n\n        \n    \n       Event updates: \n            \n            \n              \n                {{ei.username}} from, {{ei.city}} is attending {{e.title}} \n                 \n              \n           \n            \n  \n          \n  \n\n      \n        \n          \n            Title:\n              \n              \n            {{e.title}}\n              \n          \n           \n          \n          \n           Attend\n         \n\n\n        \n          \n           Please login to attend an event\n          \n        \n     \n    \n    \n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          events        TitleDatesLocationDetailsOrganizer                                  {{e.title}}            {{e.occurrenceData}}             {{e.city}}             {{e.details}}            {{e.organizer.username}}                             Event updates:                                                       {{ei.username}} from, {{ei.city}} is attending {{e.title}}                                                                                                         Title:                                        {{e.title}}                                                                  Attend                                      Please login to attend an event                               '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/events.service.ts\n        \n\n            \n                Description\n            \n            \n                injectable method that exports event service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formData\n                            \n                            \n                                header\n                            \n                            \n                                list\n                            \n                            \n                                Url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateGathering\n                            \n                            \n                                EventTitle\n                            \n                            \n                                refreshevents\n                            \n                            \n                                refreshgroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateGathering\n                        \n                        \n                    \n                \n            \n            \n                \nCreateGathering(Gathering: Gathering)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/events.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Gathering\n                                    \n                                                Gathering\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            EventTitle\n                        \n                        \n                    \n                \n            \n            \n                \nEventTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/events.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshevents\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshevents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/events.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshgroups\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshgroups()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/events.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gathering\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gathering[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { environment } from 'src/environments/environment';\nimport Gathering from '../models/Gathering';\n/**\n * injectable method that exports event service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  Url: string;\n  header: any;\n  list: Gathering[];\n  formData:Gathering;\n/**\n * @ignore\n */\n  constructor(private http: HttpClient,private CookieService: CookieService) { \n  this.Url = environment.ApiBaseUrl;\n  const headerSettings: { [name: string]: string | string[]; } = {};\n  this.header = new HttpHeaders(headerSettings);\n  }\n  refreshevents(){\n    this.http.get(`${this.Url}/api/Gathering/events`)\n    .toPromise()\n    .then(res => this.list = res as Gathering[]);\n  }\n\n  refreshgroups(){\n    this.http.get(`${this.Url}/api/Gathering/groups`)\n    .toPromise()\n    .then(res => this.list = res as Gathering[]);\n  }\n\n  EventTitle(title: string){\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.post(`${this.Url}/api/Gathering/${username}/${password}/`+ title, title)\n    .toPromise();\n  }\n\n  CreateGathering(Gathering: Gathering){\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.post(`${this.Url}/api/Gathering/${username}/${password}`, Gathering)\n    .toPromise();\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * Footer Component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor() { }\n/**\n * @ignore\n */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Helpline : 9876543210\n    This site is a prototype. Not intended to replace the help of certified professionals.\n    For presentational purpose only.\n    C.A.L.M © Copyright 2020. All rights reserved.\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Helpline : 9876543210    This site is a prototype. Not intended to replace the help of certified professionals.    For presentational purpose only.    C.A.L.M © Copyright 2020. All rights reserved.  '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Gathering.html":{"url":"interfaces/Gathering.html","title":"interface - Gathering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Gathering\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Gathering.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attendees\n                                \n                                \n                                        city\n                                \n                                \n                                            Optional\n                                        details\n                                \n                                \n                                        isEvent\n                                \n                                \n                                        occurrenceData\n                                \n                                \n                                            Optional\n                                        organizer\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attendees\n                                    \n                                \n                                \n                                    \n                                        attendees:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEvent\n                                    \n                                \n                                \n                                    \n                                        isEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occurrenceData\n                                    \n                                \n                                \n                                    \n                                        occurrenceData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizer\n                                    \n                                \n                                \n                                    \n                                        organizer:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import User from './User';\n\nexport default interface Gathering {\n    title:string;  \n    occurrenceData:string;  \n    organizer?:User[];  \n    attendees?:string;\n    details?:string;\n    city:string;  \n    isEvent:boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        login component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Public\n                                LoginService\n                            \n                            \n                                user\n                            \n                            \n                                UserForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                Login\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, toastr: ToastrService, LoginService: UserService, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LoginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:103\n                \n            \n\n\n            \n                \n                    used as a method for error handling\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Login\n                        \n                        \n                    \n                \n            \n            \n                \nLogin(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:75\n                \n            \n\n\n            \n                \n                    this is a method that gets users with the use of cookie services\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm(form?: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:59\n                \n            \n\n\n            \n                \n                    user form that declares its properties.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        exception login error handling\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:34\n                            \n                        \n\n                \n                    \n                        exception handling with error validation message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            LoginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, NgForm } from '@angular/forms'; // imports frombuilder, validtors & ngform\nimport User from '../models/User'; // imports user from models.\n/**\n * imports multiple services for user login component.\n */\nimport { ToastrService } from 'ngx-toastr'; // imports toastr\nimport { CookieService } from 'ngx-cookie-service'; // imports cookie services from ngx cookie\nimport { Router } from '@angular/router'; // imports router\nimport { UserService } from '../services/user.service'; // imports user services\nimport { HttpErrorResponse } from '@angular/common/http'; // imports an httperror response.\n\n\n/**\n * login component\n */\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  user : User;\n\n/**\n * exception login error handling\n */\n\n  error: string | undefined;\n/**\n * exception handling with error validation message\n */\n  errorMessage:string;\n  UserForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n\n/**\n *\n * @param formBuilder\n */\n  constructor( private formBuilder: FormBuilder, private router: Router,\n    private toastr: ToastrService,public LoginService:UserService,\n    private cookieService: CookieService) { }\n\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.cookieService.deleteAll();\n    this.resetForm();\n  }\n  /**\n   * user form that declares its properties.\n   * @param form\n   */\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.reset();\n    this.LoginService.formData = {\n      fName: '',\n      lName: '',\n      username: '',\n      password:'',\n      city:'',\n      isAdmin: false\n    }\n  }\n  /**\n   * this is a method that gets users with the use of cookie services\n   * @param f\n   */\n  Login(f: NgForm) {\n   \n    return  this.LoginService.getUsersByName().then(\n         user => {\n           if(user.username == ' ' || user.password == ' '){\n            this.toastr.warning('Add details', 'No input');\n           }\n           this.toastr.info('Get By Id successfully', 'Get user by id');\n           this.user = user;\n           console.log(user);\n           this.cookieService.set('username',`${this.user.username}`);\n           this.cookieService.set('password',`${this.user.password}`);\n           console.log(`${this.user.username}`);\n           console.log(`${this.user.password}`);\n           this.router.navigate(['/support-groups']);\n\n\n         },\n         err => {\n          this.handleError(err) \n          console.log(err)\n         }\n       )\n     }\n     /**\n      * used as a method for error handling\n      * @param error\n      */\n     handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n      } else {\n        this.error = `Sorry try again, error ${error.status}, ${error.error.message}`; //If the response status code was an error then display said error\n      }\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n            \n\n\n\n              \n\n\n                username\n\n                \n                  password\n                \n\n\n\n                \n\n                Login\n                \n                      {{error}} \n\n                \n                \n\n\n\n\n\n\n              \n            \n          \n\n        \n    \n    \n    \n\n    ## this form is an html form for user login view page. \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              username                                  password                                                Login                                      {{error}}                                                                                             ## this form is an html form for user login view page. '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        navbar component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admin\n                            \n                            \n                                data\n                            \n                            \n                                show\n                            \n                            \n                                showA\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('isAdmin')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                        navbar containing cookie service set to be a false value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; //imports component OnInit form\nimport { CookieService } from 'ngx-cookie-service'; // imports cookie service from  ngx\n/**\n * navbar component\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html'\n})\nexport class NavbarComponent implements OnInit {\n// a constructor with a cookie service\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n\n\n    /**\n     * navbar containing cookie service set to be a false value.\n     */\n\n    data=this.cookieService.get('username');\n    admin= this.cookieService.get('isAdmin')\n    show: boolean = false;\n    showA: boolean = false;\n   ngOnInit(): void {\n    // A conditional statement.\n     this.show = false;\n    if(this.data != \"\"){\n this.show = true;\n    }\n    else{\n    this.show = false;}\n\n\n   this.showA = false;\n   if(this.admin == \"true\"){\n    this.showA = true;\n       }\n}\n}\n\n    \n\n    \n        \n    \n\n        &#x1F3E0;Home\n        \n            \n        \n\n    \n    \n        \n            Take the test\n        \n        \n            Events\n        \n        \n            Support-Groups\n        \n     \n        \n            Profile\n        \n      \n        \n            Register\n        \n        \n            Login\n        \n     \n        \n            Logout\n        \n        \n            AdminPage\n        \n        \n            Admin\n        \n       \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠Home                                                        Take the test                            Events                            Support-Groups                                 Profile                                  Register                            Login                                 Logout                            AdminPage                            Admin               '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notfound.component.ts\n\n\n    \n        Description\n    \n    \n        app-notfound component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * app-notfound component\n */\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html'\n})\nexport class NotfoundComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor() { }\n/**\n * @ignore\n */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Page Not Found\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page Not Found'\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                submitted\n                            \n                            \n                                updateUserForm\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userApi\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCitySelect\n                            \n                            \n                                refresh\n                            \n                            \n                                resetError\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, formBuilder: FormBuilder, userApi: UserService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCitySelect\n                        \n                        \n                    \n                \n            \n            \n                \nonCitySelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n      text: ['', Validators.required]\n    })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/profile.component.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from '../services/user.service';\nimport User from '../models/User'; // imports from user model\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {  FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent implements OnInit {\n  user: User;\n  constructor(private cookieService: CookieService,\n    private formBuilder: FormBuilder,\n    public userApi:UserService,\n    private toastr: ToastrService) { }\n    error: string | undefined;\n    errorMessage:string;\n    cities: Array;\n    value: string;\n    submitted = false;\n    updateUserForm = this.formBuilder.group({\n      text: ['', Validators.required]\n    });\n  data=this.cookieService.get('username');\n  ngOnInit() {\n\n    this.refresh();\n\n    this.updateUserForm = this.formBuilder.group({\n      fName: ['', Validators.required],\n      lName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n\n  });\n\n  }\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n    } else {\n      this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n    }\n  }\n\n  refresh(){\n    return this.userApi.refreshMap()\n    .then(\n      cities => {\n        this.cities= cities;\n        console.log(this.cities)\n      })\n\n  }\n  resetError() {\n    this.error = undefined; //clears error message\n  }\n  get f() { return this.updateUserForm.controls; }\n\n  onCitySelect(event) {\n    this.value= event.target.value;\n    console.log(this.value)\n}\n  updateUser() {\n    this.submitted = true;\n    /**\n     * User form containing property values from API\n     */\n    const newUsers: User = {\n\n      fName: this.updateUserForm.get('fName').value,\n      lName: this.updateUserForm.get('lName').value,\n      username: this.updateUserForm.get('username').value,\n      city: this.value,\n      password: this.updateUserForm.get('password').value,\n      isAdmin: false\n\n    };\nconsole.log(newUsers)\n\n    this.userApi.updateUser(newUsers) // creates new user\n      .then(\n        User => {\n          if (this.error) { //conditinal statement that checks for errors in register component.\n\n           this.toastr.error('User update', 'Error');\n\n\n          } else {\n            this.toastr.info('User updated', 'Updated');\n\n            this.resetError(); //clears error message\n          }\n        },\n        error => this.handleError(error) //handles error message\n      );\n\n\n}\n}\n\n    \n\n    \n        \n\n  \n    \n        \n          \n            \n          First Name:\n            \n                \n                    Name is required\n                \n        \n        Last Name:\n            \n                \n                    Name is required\n                \n        \n        City :\n            \n            \n          {{city}}\n            \n        \n         \n        User Name:\n            \n                \n                    Name is required\n                \n        \n         password:\n            \n                \n                    password is required\n                \n        \n\n\n        \n            Update\n    \n    \n        {{ error }}\n    \n\n  \n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              First Name:                                                Name is required                                Last Name:                                                Name is required                                City :                                  {{city}}                                     User Name:                                                Name is required                                 password:                                                password is required                                            Update                {{ error }}          '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionsComponent.html":{"url":"components/QuestionsComponent.html","title":"component - QuestionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/questions/questions.component.ts\n\n\n    \n        Description\n    \n    \n        Question component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-questions\n            \n\n\n\n\n            \n                templateUrl\n                ./questions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Submit\n                        \n                        \n                    \n                \n            \n            \n                \nSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/questions.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * Question component\n */\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n})\nexport class QuestionsComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() {}\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n  Submit() {\n    /**\n     * for loop that gets the user input element by id which outputs a value.\n     */\n    document.getElementById('p').innerText = 'Recommended groups: ';\n    // for loop statement that iterates through questions presented to the client based on choices.\n    for (let i = 1; i document.getElementById(`${i}`);\n      if (element.checked) {\n        // conditional statement\n        document.getElementById('p').innerText += element.value;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n        \n    \n      \n         \n            \n        \n      \n        Do you feel anxious on most days, worrying about\n            a lot of different things,\n             for a period of 6 months or more?\n                \n\n             \n                \n        \n      \n        Do you have an intense fear of being criticized\n            or embarrassed/humiliated, even in everyday situations (ie. public  speaking, eating in public,\n             being assertive at work or making small talk)?\n               \n\n            \n                \n        \n     \n        Do you feel fearful about a particular object or\n             situation and may go great lengths to avoid it? This may include having an injection,\n             travelling on a plane, etc?\n               \n\n            \n                \n             \n             \n        Have you experienced a traumatic event (war, assault, accident, disaster, etc) that has resulted  in you exhibiting symptoms that can  include difficulty relaxing, upsetting dreams or flashbacks of the event,  and avoidance of anything related\n             to the event for a period of a month or longer?\n               \n\n            \n                \n             \n              \n        Do you frequently experience shortness of breath, chest pain, dizziness  and excessive perspiration,\n             otherwise known as panic attacks?\n               \n\n            \n                \n             \n             \n        Do you have ongoing unwanted/intrusive thoughts\n             and fears  that you know are silly but try to relieve the anxiety by\n             carrying out certain behaviors or rituals?  For example, fear of germs\n             can lead to constant washing of hands and clothes.\n               \n\n\n        Submit\n\n\n      \n      \n      \n    \n\n\n \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                 Do you feel anxious on most days, worrying about            a lot of different things,             for a period of 6 months or more?                                                                   Do you have an intense fear of being criticized            or embarrassed/humiliated, even in everyday situations (ie. public  speaking, eating in public,             being assertive at work or making small talk)?                                                                Do you feel fearful about a particular object or             situation and may go great lengths to avoid it? This may include having an injection,             travelling on a plane, etc?                                                                             Have you experienced a traumatic event (war, assault, accident, disaster, etc) that has resulted  in you exhibiting symptoms that can  include difficulty relaxing, upsetting dreams or flashbacks of the event,  and avoidance of anything related             to the event for a period of a month or longer?                                                                              Do you frequently experience shortness of breath, chest pain, dizziness  and excessive perspiration,             otherwise known as panic attacks?                                                                             Do you have ongoing unwanted/intrusive thoughts             and fears  that you know are silly but try to relieve the anxiety by             carrying out certain behaviors or rituals?  For example, fear of germs             can lead to constant washing of hands and clothes.                       Submit                       '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        register component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                CreateUserForm\n                            \n                            \n                                error\n                            \n                            \n                                submitted\n                            \n                            \n                                User\n                            \n                            \n                                    Public\n                                userApi\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateUser\n                            \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCitySelect\n                            \n                            \n                                refresh\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, toastr: ToastrService, router: Router, CookieService: CookieService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            constructor form with its parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateUser\n                        \n                        \n                    \n                \n            \n            \n                \nCreateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:64\n                \n            \n\n\n            \n                \n                    Asserts errorr handling in the register form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:49\n                \n            \n\n\n            \n                \n                    create user form that validates user properties\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCitySelect\n                        \n                        \n                    \n                \n            \n            \n                \nonCitySelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:107\n                \n            \n\n\n            \n                \n                    method that gets users through the use of promises to accept response from api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; // import from OnInit component.\nimport User from '../models/User'; // imports from user model\nimport { Router } from '@angular/router'; // imports router\nimport { FormBuilder, Validators } from '@angular/forms'; // imports formbuilder\nimport { UserService } from '../services/user.service'; // imports from user services\nimport { ToastrService } from 'ngx-toastr'; // imports from ngx toastr\nimport { CookieService } from 'ngx-cookie-service'; // imports from ngx cookie service\nimport { HttpErrorResponse } from '@angular/common/http'; // imports Http error response\n\n/**\n * register component\n */\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n})\n/**\n * exports Register component.\n */\nexport class RegisterComponent implements OnInit {\n  User: User[] = [];\n  value: string;\n  error: string | undefined; // error handling implementation\n  submitted = false;\n  cities: Array;\n  CreateUserForm = this.formBuilder.group({\n    text: ['', Validators.required],\n  });\n\n  /**\n   * constructor form with its parameters\n   * @param formBuilder\n   * @param toastr\n   * @param router\n   * @param CookieService\n   * @param userApi\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private router: Router,\n    private CookieService: CookieService,\n    public userApi: UserService\n  ) {}\n  /**\n   * create user form that validates user properties\n   */\n  ngOnInit() {\n    this.refresh();\n\n    this.CookieService.deleteAll(); // cookie service injected.\n    this.CreateUserForm = this.formBuilder.group({\n      fName: ['', Validators.required],\n      lName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n  /**\n   * Asserts errorr handling in the register form.\n   * @param error\n   */\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n    } else {\n      this.error = `Sorry try again, error ${error.status}, ${error.error.message}`; //If the response status code was an error then display said error\n    }\n  }\n\n  refresh() {\n    return this.userApi.refreshMap().then((cities) => {\n      this.cities = cities;\n      console.log(this.cities);\n    });\n  }\n  resetError() {\n    this.error = undefined; //clears error message\n  }\n  get f() {\n    return this.CreateUserForm.controls;\n  }\n\n  //  const pass= this.CreateUserForm.get('Password')?.value;\n  //  const salt =  bcrypt.genSaltSync(10);\n  //  console.log(salt)\n  // const  passhash = bcrypt.hashSync(pass, salt);\n\n  /**\n   * method that gets users through the use of promises to accept response from api\n   */\n\n  // getUsers() {\n  //   return this.userApi.getUsers()\n  //     .then(\n  //       User => {\n  //         this.User = User; //uses promises to accept the api response\n  //         this.resetError(); //resets error message\n  //       },\n  //       error => {\n  //         this.handleError(error); //handles error\n  //       }\n  //     );\n  // }\n\n  onCitySelect(event) {\n    this.value = event.target.value;\n    console.log(this.value);\n  }\n  CreateUser() {\n    this.submitted = true;\n    /**\n     * User form containing property values from API\n     */\n    const newUsers: User = {\n      fName: this.CreateUserForm.get('fName')?.value,\n      lName: this.CreateUserForm.get('lName')?.value,\n      username: this.CreateUserForm.get('username')?.value,\n      city: this.value,\n      password: this.CreateUserForm.get('password')?.value,\n      isAdmin: false,\n    };\n    console.log(newUsers);\n\n    this.userApi\n      .CreateUser(newUsers) // creates new user\n      .then(\n        (User) => {\n          if (this.error) {\n            //conditinal statement that checks for errors in register component.\n\n            this.toastr.error('User Register', 'Error');\n          } else {\n            this.toastr.info('User Created', 'registered');\n            this.router.navigate(['/login']);\n            this.User.unshift(User); //inserts new element at start of array\n            this.resetError(); //clears error message\n          }\n        },\n        (error) => this.handleError(error) //handles error message\n      );\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n                \n\n                    \n\n                        Register\n\n\n                        First Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        Last Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        City :\n                            \n                            \n                          {{city}}\n                            \n                        \n                         \n                        User Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                         password:\n                            \n                                \n                                    password is required\n                                \n                        \n\n\n                        \n                            Register\n\n                            \n                                {{ error }}\n                            \n        \n                    \n                   \n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Register                        First Name:                                                                                                Name is required                                                                                Last Name:                                                                                                Name is required                                                                                City :                                                                                  {{city}}                                                                                                     User Name:                                                                                                Name is required                                                                                 password:                                                                                                password is required                                                                                                            Register                                                            {{ error }}                                                                                       '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportGroupsComponent.html":{"url":"components/SupportGroupsComponent.html","title":"component - SupportGroupsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SupportGroupsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/support-groups/support-groups.component.ts\n\n\n    \n        Description\n    \n    \n        Support group component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support-groups\n            \n\n\n\n\n            \n                templateUrl\n                ./support-groups.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Public\n                                eventApi\n                            \n                            \n                                EventTitleForm\n                            \n                            \n                                    Public\n                                LoginService\n                            \n                            \n                                show\n                            \n                            \n                                shownotlogged\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddUser\n                            \n                            \n                                onTitleSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(LoginService: UserService, eventApi: EventsService, formBuilder: FormBuilder, cookieService: CookieService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/support-groups/support-groups.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        LoginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventApi\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddUser\n                        \n                        \n                    \n                \n            \n            \n                \nAddUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/support-groups/support-groups.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTitleSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonTitleSelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/support-groups/support-groups.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventTitleForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            LoginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownotlogged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from '../services/user.service';\nimport { EventsService } from '../services/events.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n/**\n * Support group component\n */\n@Component({\n  selector: 'app-support-groups',\n  templateUrl: './support-groups.component.html',\n})\nexport class SupportGroupsComponent implements OnInit {\n  /*\n   * @ignore\n   */\n  constructor(\n    public LoginService: UserService,\n    public eventApi: EventsService,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private toastr: ToastrService\n  ) {}\n  data = this.cookieService.get('username');\n  show: boolean = false;\n  value: string;\n  title: string;\n  shownotlogged: boolean = false;\n  EventTitleForm = this.formBuilder.group({\n    text: ['', Validators.required],\n  });\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.eventApi.refreshgroups();\n    this.show = false;\n    if (this.data != '') {\n      this.show = true;\n    } else {\n      this.show = false;\n    }\n\n    this.shownotlogged = true;\n    if (this.data != '') {\n      this.shownotlogged = false;\n    } else {\n      this.shownotlogged = true;\n    }\n  }\n\n  onTitleSelect(event) {\n    this.value = event.target.value;\n    console.log(this.value);\n  }\n\n  AddUser() {\n    this.title = this.value;\n    console.log(this.title);\n    if (confirm('Are you sure to join this group ?')) {\n      this.eventApi.EventTitle(this.title).then(\n        (res) => {\n          console.log(this.title);\n          this.toastr.warning('added successfully', 'Joined Group');\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  Support groups\n      TitleDatesLocationDetailsOrganizer\n        \n          \n          {{e.title}}\n          {{e.occurrenceData}} \n          {{e.city}} \n          {{e.details}} \n          {{e.organizer.username}}\n        \n      \n\n      Group members: \n      \n      \n        \n          {{ei.username}} from, {{ei.city}} is a member of {{e.title}} \n           \n        \n     \n      \n\n    \n      \n        Title:\n          \n          \n        {{e.title}}\n          \n      \n       \n      \n      \n       Attend\n     \n\n\n    \n      \n       Please login to Join a group\n      \n    \n\n  \n\n\n \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Support groups      TitleDatesLocationDetailsOrganizer                            {{e.title}}          {{e.occurrenceData}}           {{e.city}}           {{e.details}}           {{e.organizer.username}}                    Group members:                               {{ei.username}} from, {{ei.city}} is a member of {{e.title}}                                                 Title:                            {{e.title}}                                          Attend                      Please login to Join a group             '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportGroupsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TipsPageComponent.html":{"url":"components/TipsPageComponent.html","title":"component - TipsPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TipsPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tips-page/tips-page.component.ts\n\n\n    \n        Description\n    \n    \n        Tips-page Component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tips-page\n            \n\n\n\n\n            \n                templateUrl\n                ./tips-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tips-page/tips-page.component.ts:14\n                            \n                        \n\n                \n                    \n                            constructor that contains a cookie service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tips-page/tips-page.component.ts:24\n                \n            \n\n\n            \n                \n                    Method that returns Nothiing.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tips-page/tips-page.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; // imports component, onInit\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from '../services/user.service';\n\n/**\n * Tips-page Component.\n */\n\n@Component({\n  selector: 'app-tips-page',\n  templateUrl: './tips-page.component.html'\n})\nexport class TipsPageComponent implements OnInit {\n\n/**\n * constructor that contains a cookie service\n */\n  constructor( private cookieService: CookieService, public userApi: UserService) { }\n\n/**\n * Method that returns Nothiing.\n */\n  ngOnInit(): void {\n    this.cookieService.deleteAll();\n    this.userApi.refreshList();\n   \n  }\n\n}\n\n    \n\n    \n        \n\n  C.A.L.M(Center for Anxiety and Lifestyle Mediation)\n  \n  \n    \n      \n        \n        \n        \n            \n            \n              \n              \n              \n              \n              \n            \n        \n            \n            \n        \n              \n                \n                \n                \n                 \n                \n              \n        \n              \n                \n                \n                   \n                \n              \n            \n              \n                \n                \n                    \n                \n              \n              \n                \n                \n                  \n                 \n                \n              \n        \n              \n                \n                \n                   \n                \n              \n            \n          \n          \n            \n        \n            \n            \n              \n              Previous\n            \n            \n              \n              Next\n            \n       \n          \n\n\n      \n      \n    \n  \n\n\n  Total number of users: {{ userApi?.list?.length | number }}\n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  C.A.L.M(Center for Anxiety and Lifestyle Mediationrevious                                                    Next                                                 Total number of users: {{ userApi?.list?.length | number }}  '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TipsPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/User.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        fName\n                                \n                                \n                                        isAdmin\n                                \n                                \n                                        lName\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fName\n                                    \n                                \n                                \n                                    \n                                        fName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lName\n                                    \n                                \n                                \n                                    \n                                        lName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface User {\n    lName:string;  \n    fName:string;  \n    username:string;  \n    password:string;  \n   isAdmin: boolean;\n   city:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                root injection provided and exported user services\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                formData\n                            \n                            \n                                header\n                            \n                            \n                                list\n                            \n                            \n                                Url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateAdmin\n                            \n                            \n                                CreateUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                getUsersBycookie\n                            \n                            \n                                getUsersByName\n                            \n                            \n                                refreshList\n                            \n                            \n                                refreshMap\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, CookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateAdmin\n                        \n                        \n                    \n                \n            \n            \n                \nCreateAdmin(User: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateUser\n                        \n                        \n                    \n                \n            \n            \n                \nCreateUser(User: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:34\n                \n            \n\n\n            \n                \n                    creats users using the api url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:50\n                \n            \n\n\n            \n                \n                    gets users from using api url.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsersBycookie\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsersBycookie()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsersByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsersByName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:57\n                \n            \n\n\n            \n                \n                    this method gets users by their given name respectively.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshList\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshMap\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(User: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                        user form with a private Http client.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport User from '../models/User';\nimport { CookieService } from 'ngx-cookie-service';\n/**\n * root injection provided and exported user services\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  Url: string;\n  header: any;\n  list: User[];\n  cities: Array;\n/**\n * user form with a private Http client.\n */\n  formData:User;\n  constructor(private http: HttpClient,private CookieService: CookieService) {\n\n    this.Url = environment.ApiBaseUrl;\n    const headerSettings: { [name: string]: string | string[]; } = {};\n    this.header = new HttpHeaders(headerSettings);\n\n  }\n\n\n  /**\n * creats users using the api url\n * @param User\n */\n  CreateUser(User: User) {\n    return this.http.post(`${this.Url}/api/Users/`, User)\n    .toPromise();\n  }\n\n\n  CreateAdmin(User: User) {\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.post(`${this.Url}/api/Admin/${username}/${password}`, User)\n    .toPromise();\n  }\n  \n  /** gets users from using api url.\n   * @param User\n   */\n  getUsers() {\n    return this.http.get(`${this.Url}/api/Users/`)\n      .toPromise();\n  }\n  /**\n   * this method gets users by their given name respectively.\n   */\n  getUsersByName(){\n    return this.http.get(`${this.Url}/api/Users/`+ this.formData.username +\"/\"+ this.formData.password)\n    .toPromise();\n  }\n\n  getUsersBycookie(){\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.get(`${this.Url}/api/Users/${username}/${password}`)\n    .toPromise();\n  }\n  refreshList(){\n    this.http.get(`${this.Url}/api/Users`)\n    .toPromise()\n    .then(res => this.list = res as User[]);\n  }\n\n  refreshMap(){\n return   this.http.get>(`${this.Url}/api/Map`)\n    .toPromise()\n  }\n  \n  deleteUser(username: string,password: string) {\n    return this.http.delete(`${this.Url}/api/Users/`+ username +\"/\"+ password, { headers: this.header });\n  }\n\n  updateUser(User: User) {\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.put(`${this.Url}/api/Users/${username}/${password}`, User).toPromise()\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserviewComponent.html":{"url":"components/UserviewComponent.html","title":"component - UserviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminedit/userview/userview.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-userview\n            \n\n\n\n\n            \n                templateUrl\n                ./userview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userApi: UserService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminedit/userview/userview.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/userview/userview.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/userview/userview.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-userview',\n  templateUrl: './userview.component.html'\n\n})\nexport class UserviewComponent implements OnInit {\n\n  constructor( public userApi:UserService, private toastr: ToastrService ) { }\n\n  ngOnInit() {\n    this.userApi.refreshList();\n  }\n\n\n\n  // onDelete(username,password) {\n  //   if (confirm('Are you sure to delete this record ?')) {\n  //     this.userApi.deleteUser(username,password)\n  //       .subscribe(res => {\n\n  //         this.userApi.refreshList();\n  //         this.toastr.warning('Deleted successfully', 'user deleted');\n  //       },\n  //         err => {\n\n  //           console.log(err);\n  //         })\n  //   }\n  //   }\n\n}\n\n    \n\n    \n        users\n    CitynameAdmin\n      \n        {{u.city}}  \n        {{u.username}}  \n        {{u.isAdmin}}\n       \n       \n      \n      \n  \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'users    CitynameAdmin              {{u.city}}          {{u.username}}          {{u.isAdmin}}                                '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewmyselfComponent.html":{"url":"components/ViewmyselfComponent.html","title":"component - ViewmyselfComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewmyselfComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/viewmyself/viewmyself.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-viewmyself\n            \n\n\n\n\n            \n                templateUrl\n                ./viewmyself.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/viewmyself/viewmyself.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport User from 'src/app/models/User';\n\n@Component({\n  selector: 'app-viewmyself',\n  templateUrl: './viewmyself.component.html'\n})\nexport class ViewmyselfComponent implements OnInit {\n  user: User;\n  error: string | undefined;\n  constructor(public userApi:UserService,) { }\n\n  ngOnInit(): void {\n    this.userApi.getUsersBycookie()\n    .then(\n      user => {\n        this.user =user;\n  },\n        error => {\n          this.handleError(error); //handles error\n        }\n      );\n  }\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n    } else {\n      this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n   FristName: {{user.fName}} LastName: {{user.lName}} City: {{user.city}}\n    \n    Username: {{user.username}} Password: {{user.password}}\n \n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       FristName: {{user.fName}} LastName: {{user.lName}} City: {{user.city}}        Username: {{user.username}} Password: {{user.password}}     '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewmyselfComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/adminedit/addgathering/addgathering.component.ts\n            \n            component\n            AddgatheringComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/adminedit/adminedit.component.ts\n            \n            component\n            AdmineditComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/adminedit/userview/userview.component.ts\n            \n            component\n            UserviewComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/adminlogin/adminlogin.component.ts\n            \n            component\n            AdminloginComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/models/Gathering.ts\n            \n            interface\n            Gathering\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/User.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/profile/viewmyself/viewmyself.component.ts\n            \n            component\n            ViewmyselfComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/questions/questions.component.ts\n            \n            component\n            QuestionsComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/services/events.service.ts\n            \n            injectable\n            EventsService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                src/app/support-groups/support-groups.component.ts\n            \n            component\n            SupportGroupsComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/tips-page/tips-page.component.ts\n            \n            component\n            TipsPageComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.3\n        \n            @angular/common : ~9.1.3\n        \n            @angular/compiler : ~9.1.3\n        \n            @angular/core : ~9.1.3\n        \n            @angular/forms : ~9.1.3\n        \n            @angular/platform-browser : ~9.1.3\n        \n            @angular/platform-browser-dynamic : ~9.1.3\n        \n            @angular/router : ~9.1.3\n        \n            bcryptjs : ^2.4.3\n        \n            bootstrap : ^4.4.1\n        \n            jquery : ^3.5.0\n        \n            ngx-cookie-service : ^3.0.4\n        \n            ngx-toastr : ^12.0.1\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.5.4\n        \n            toastr : ^2.1.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCalm\nThis project was generated with Angular CLI version 9.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddgatheringComponent\n\nAddgatheringComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddgatheringComponent->AppModule\n\n\n\n\n\nAdmineditComponent\n\nAdmineditComponent\n\nAppModule -->\n\nAdmineditComponent->AppModule\n\n\n\n\n\nAdminloginComponent\n\nAdminloginComponent\n\nAppModule -->\n\nAdminloginComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nAppModule -->\n\nQuestionsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSupportGroupsComponent\n\nSupportGroupsComponent\n\nAppModule -->\n\nSupportGroupsComponent->AppModule\n\n\n\n\n\nTipsPageComponent\n\nTipsPageComponent\n\nAppModule -->\n\nTipsPageComponent->AppModule\n\n\n\n\n\nUserviewComponent\n\nUserviewComponent\n\nAppModule -->\n\nUserviewComponent->AppModule\n\n\n\n\n\nViewmyselfComponent\n\nViewmyselfComponent\n\nAppModule -->\n\nViewmyselfComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nAppModule -->\n\nEventsService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  ApiBaseUrl: 'http://a9f0bbf7745324be4ade24e93f11495a-1232551203.us-east-2.elb.amazonaws.com',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ApiBaseUrl: 'http://a9f0bbf7745324be4ade24e93f11495a-1232551203.us-east-2.elb.amazonaws.com',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
