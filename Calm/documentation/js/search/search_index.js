var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AdmineditComponent.html",[0,0.049,1,0.459]],["body/components/AdmineditComponent.html",[0,0.072,1,0.583,2,0.519,3,0.174,4,0.148,5,0.445,6,0.445,7,0.445,8,0.445,9,0.148,10,1.425,11,0.774,12,1.189,13,0.445,14,1.419,15,1.174,16,2.254,17,0.703,18,3.38,19,0.703,20,2.724,21,0.261,22,0.703,23,3.38,24,3.598,25,3.38,26,3.38,27,2.797,28,0.774,29,3.179,30,1.714,31,1.092,32,3.179,33,2.254,34,2.126,35,0.703,36,1.083,37,2.8,38,1.592,39,1.94,40,2.617,41,1.456,42,1.945,43,1.055,44,1.1,45,1.722,46,1.273,47,0.038,48,1.057,49,0.797,50,0.851,51,1.722,52,1.026,53,1.375,54,2.157,55,1.945,56,1.714,57,2.797,58,2.797,59,2.417,60,2.743,61,1.092,62,0.98,63,1.714,64,2.417,65,1.722,66,1.722,67,1.722,68,1.2,69,1.318,70,2.126,71,1.714,72,2.8,73,1.722,74,1.026,75,2.126,76,1.722,77,2.157,78,1.844,79,1.722,80,1.722,81,1.722,82,1.425,83,1.722,84,0.583,85,0.365,86,0.713,87,2.933,88,1.414,89,0.869,90,1.083,91,0.869,92,0.703,93,0.786,94,0.869,95,0.489,96,0.489,97,0.786,98,0.174,99,0.148,100,0.649,101,1.083,102,1.425,103,0.967,104,1.448,105,1.229,106,1.722,107,1.529,108,1.529,109,1.244,110,2.032,111,1.425,112,1.714,113,1.083,114,1.083,115,2.417,116,1.083,117,1.083,118,0.538,119,1.083,120,2.633,121,2.633,122,1.083,123,1.083,124,1.529,125,1.083,126,1.083,127,1.083,128,1.083,129,2.254,130,1.375,131,1.722,132,2.157,133,1.425,134,2.724,135,2.254,136,1.425,137,1.425,138,1.425,139,1.425,140,1.229,141,1.425,142,1.083,143,1.425,144,2.254,145,1.425,146,2.254,147,2.254,148,1.425,149,1.375,150,0.786,151,1.229,152,1.425,153,1.425,154,1.425,155,1.722,156,1.722,157,1.722,158,0.967,159,1.425,160,1.722,161,1.425,162,1.94,163,1.722,164,2.126,165,1.722,166,1.425,167,1.425,168,1.425,169,1.425,170,0.791,171,1.425,172,1.425,173,2.254,174,4,175,2.254,176,2.724,177,0.364,178,0.703,179,0.445,180,0.992,181,0.445,182,0.445,183,0.261,184,0.445,185,0.294,186,0.445,187,0.261,188,0.445,189,0.294,190,0.445,191,0.261,192,0.445,193,0.294,194,0.445,195,0.261,196,0.445,197,0.261,198,0.445,199,0.261,200,0.445,201,0.261,202,0.328,203,0.445,204,0.261,205,0.364,206,0.445,207,0.294,208,0.445,209,0.445,210,0.445,211,0.01,212,0.016,213,0.01]],["title/components/AdminloginComponent.html",[0,0.049,183,0.459]],["body/components/AdminloginComponent.html",[0,0.073,1,0.309,2,0.59,3,0.206,4,0.174,5,0.525,6,0.525,7,0.525,8,0.525,9,0.174,11,0.881,12,1.068,13,0.525,14,1.467,15,1.22,17,0.801,19,0.801,21,0.309,22,0.801,24,3.542,28,0.881,30,1.951,31,0.578,34,1.951,35,0.525,36,1.28,37,2.999,38,1.741,39,2.122,40,2.782,41,1.548,43,1.312,44,1.107,46,1.583,47,0.037,48,0.973,49,0.973,50,1.312,52,1.169,59,1.28,61,1.068,62,0.879,63,1.951,64,2.644,68,0.635,69,0.698,70,1.951,71,1.951,72,1.951,74,1.416,75,1.951,78,0.843,84,0.598,85,0.273,87,2.644,88,1.543,89,1.027,90,1.28,91,1.027,92,0.801,93,0.929,94,1.027,95,0.578,96,0.578,97,0.929,98,0.206,99,0.174,100,0.767,101,1.951,103,1.142,104,1.416,107,1.142,108,1.142,109,0.929,110,1.716,112,1.951,113,1.28,114,1.28,115,1.951,116,1.28,117,1.28,118,0.635,119,1.28,120,1.28,121,2.364,122,1.28,123,1.28,124,1.741,125,1.28,126,1.28,127,1.28,128,1.28,130,1.027,142,1.28,150,2.066,158,1.142,170,0.726,177,0.43,178,0.801,179,0.525,180,1.085,181,0.525,182,0.525,183,0.638,184,0.525,185,0.347,186,0.525,187,0.309,188,0.525,189,0.347,190,0.525,191,0.309,192,0.525,193,0.347,194,0.525,195,0.309,196,0.525,197,0.309,198,0.525,199,0.309,200,0.525,201,0.309,202,0.387,203,0.525,204,0.309,205,0.43,206,0.525,207,0.347,208,0.525,209,0.525,210,0.525,211,0.012,212,0.018,213,0.012,214,1.684,215,0.43,216,2.359,217,3.478,218,3.758,219,3.101,220,3.478,221,2.109,222,3.478,223,3.11,224,2.566,225,2.035,226,2.035,227,1.741,228,2.566,229,4.102,230,2.035,231,2.566,232,2.035,233,1.684,234,2.035,235,2.035,236,2.035,237,2.035,238,2.035,239,1.684,240,1.453,241,1.28,242,1.684,243,2.364,244,1.684,245,1.684,246,1.684,247,2.109,248,1.453,249,1.684,250,1.684,251,1.453,252,1.684,253,1.684,254,1.684,255,2.035,256,2.035,257,2.035,258,1.453,259,1.28,260,2.035,261,2.035,262,1.453,263,1.684]],["title/components/AppComponent.html",[0,0.049,185,0.516]],["body/components/AppComponent.html",[0,0.089,1,0.518,2,0.853,3,0.345,4,0.292,5,0.881,6,0.881,7,0.881,8,0.881,9,0.292,13,0.881,14,1.586,15,1.308,17,1.156,19,1.156,21,0.518,22,1.156,44,0.722,47,0.037,48,0.853,49,0.65,68,1.066,69,1.171,74,1.286,84,0.4,85,0.457,98,0.345,99,0.292,170,1.048,177,0.722,178,1.156,179,0.881,180,1.371,181,0.881,182,0.881,183,0.518,184,0.881,185,0.905,186,0.881,187,0.518,188,0.881,189,0.582,190,0.881,191,0.518,192,0.881,193,0.582,194,0.881,195,0.518,196,0.881,197,0.518,198,0.881,199,0.518,200,0.881,201,0.518,202,0.65,203,0.881,204,0.518,205,0.722,206,0.881,207,0.582,208,0.881,209,0.881,210,0.881,211,0.02,212,0.026,213,0.02,215,0.722,264,2.824,265,2.98,266,5,267,4.479,268,4.138,269,3.707,270,3.413,271,3.413,272,2.824,273,2.824,274,3.413]],["title/modules/AppModule.html",[275,1.698,276,1.903]],["body/modules/AppModule.html",[0,0.04,1,0.779,2,0.685,3,0.251,4,0.213,9,0.213,15,0.526,38,1.03,41,1.321,43,1.602,47,0.038,84,0.713,85,0.333,86,2.039,91,1.256,92,0.929,93,1.136,94,1.256,95,0.707,96,0.707,97,1.136,98,0.251,99,0.213,150,1.136,177,0.526,183,0.779,185,0.979,187,0.779,189,0.875,191,0.779,193,0.875,195,0.779,197,0.779,199,0.779,201,0.779,202,0.474,204,0.779,205,0.526,207,0.875,211,0.015,212,0.021,213,0.015,227,1.396,275,1.396,276,3.918,277,1.396,278,1.564,279,3.501,280,3.021,281,3.501,282,1.256,283,2.058,284,2.058,285,2.058,286,2.058,287,2.058,288,2.88,289,2.979,290,2.058,291,1.564,292,2.487,293,3.6,294,2.979,295,1.564,296,3.501,297,2.058,298,1.396,299,2.058,300,2.487,301,2.487,302,2.487,303,2.487,304,2.487,305,1.564,306,2.058,307,2.058,308,2.058,309,2.487,310,2.487,311,3.6,312,2.487,313,3.6,314,3.6,315,2.487,316,3.6,317,2.487,318,2.487,319,2.058,320,2.058,321,1.564,322,2.058,323,2.058,324,2.058,325,2.058,326,2.058,327,2.487,328,2.487,329,2.487]],["title/classes/AppPage.html",[99,0.259,330,2.159]],["body/classes/AppPage.html",[3,0.398,4,0.337,9,0.337,21,0.597,28,1.394,44,1.038,47,0.037,52,1.849,53,2.478,61,1.669,84,0.461,86,1.631,98,0.54,99,0.458,130,2.478,170,1.252,211,0.023,212,0.029,213,0.023,215,0.833,265,2.209,272,4.061,295,2.476,330,3.997,331,3.936,332,3.257,333,4.908,334,6.023,335,5.599,336,5.599,337,3.936,338,3.936,339,4.061,340,3.936,341,3.936,342,3.936,343,3.936]],["title/modules/AppRoutingModule.html",[275,1.698,288,1.698]],["body/modules/AppRoutingModule.html",[0,0.099,1,0.644,2,0.6,3,0.318,4,0.27,9,0.27,16,2.606,40,1.767,47,0.038,84,0.695,85,0.422,86,2.439,88,0.895,93,1.438,98,0.318,99,0.27,118,0.983,132,1.767,164,2.671,183,0.644,187,0.644,191,0.644,195,0.644,197,0.644,199,0.644,201,0.644,202,0.808,204,0.644,205,0.666,211,0.018,212,0.025,213,0.018,216,2.383,217,2.606,275,1.767,277,1.767,282,2.144,288,2.383,296,3.975,297,3.513,298,2.696,299,2.606,305,1.981,306,2.606,307,2.606,308,2.606,319,2.606,320,2.606,321,1.981,322,2.606,323,2.606,325,2.606,326,2.606,344,3.149,345,3.149,346,2.606,347,4.804,348,3.149,349,3.513,350,3.513,351,4.246,352,2.606,353,1.981,354,5.824,355,2.248,356,1.767,357,3.149]],["title/interfaces/Event.html",[118,0.945,358,1.698]],["body/interfaces/Event.html",[3,0.422,4,0.358,9,0.358,21,0.633,22,1.313,47,0.036,49,1.115,50,1.589,68,1.303,74,2.245,84,0.489,88,1.559,89,2.107,98,0.422,118,1.589,211,0.025,212,0.03,213,0.025,247,3.207,268,4.542,358,2.342,359,2.979,360,3.453,361,5.488,362,5.488,363,5.488,364,4.542,365,4.172,366,4.172,367,4.172,368,4.172]],["title/components/EventsComponent.html",[0,0.049,187,0.459]],["body/components/EventsComponent.html",[0,0.082,1,0.404,2,0.72,3,0.269,4,0.228,5,0.687,6,0.687,7,0.687,8,0.687,9,0.228,11,1.074,12,1.249,13,0.687,14,1.534,15,1.257,17,0.976,19,0.976,21,0.404,22,0.976,28,1.074,31,0.756,35,0.687,38,1.566,39,1.908,41,1.18,44,1.012,46,1.003,47,0.037,48,0.837,49,0.837,50,0.831,61,0.756,62,0.884,68,1.372,69,1.507,77,2.685,78,2.237,84,0.56,85,0.357,92,0.976,95,0.756,96,0.756,98,0.269,99,0.228,100,1.424,118,1.686,149,2.551,170,0.884,177,0.563,178,0.976,179,0.687,180,1.235,181,0.687,182,0.687,183,0.404,184,0.687,185,0.454,186,0.687,187,0.726,188,0.687,189,0.454,190,0.687,191,0.404,192,0.687,193,0.454,194,0.687,195,0.404,196,0.687,197,0.404,198,0.687,199,0.404,200,0.687,201,0.404,202,0.507,203,0.687,204,0.404,205,0.563,206,0.687,207,0.454,208,0.687,209,0.687,210,0.687,211,0.016,212,0.022,213,0.016,215,0.563,216,2.121,221,1.494,355,3.415,369,2.202,370,4.395,371,3.779,372,2.698,373,3.854,374,4.395,375,3.127,376,3.779,377,2.661,378,3.779,379,1.674,380,2.661,381,2.661,382,2.661,383,1.674,384,2.661,385,2.661,386,2.661,387,1.9,388,2.661,389,3.137,390,2.698,391,4.395,392,2.661,393,2.202,394,3.779,395,3.779,396,3.779,397,3.779,398,3.779,399,3.779]],["title/injectables/EventsService.html",[383,1.903,400,1.381]],["body/injectables/EventsService.html",[3,0.354,4,0.3,9,0.3,21,0.532,22,1.177,28,1.295,41,1.582,44,1.176,47,0.037,48,0.668,49,1.021,52,1.718,61,0.996,62,0.821,74,2.095,84,0.628,85,0.47,92,0.905,95,0.996,96,1.439,97,1.601,98,0.354,99,0.3,100,1.321,103,1.968,118,1.78,132,1.968,162,1.77,211,0.021,212,0.027,213,0.021,215,0.742,227,1.968,265,1.968,282,2.302,383,2.868,400,2.45,401,2.206,402,2.901,403,3.773,404,4.192,405,4.192,406,4.192,407,5.365,408,3.506,409,3.506,410,3.506,411,3.506,412,3.506,413,2.901,414,3.506,415,2.206,416,2.901,417,2.503,418,3.506,419,2.901,420,2.901,421,2.901,422,2.901,423,2.901,424,2.901,425,3.506,426,2.901,427,2.901,428,2.901,429,2.901]],["title/components/FooterComponent.html",[0,0.049,189,0.516]],["body/components/FooterComponent.html",[0,0.089,1,0.505,2,0.838,3,0.336,4,0.285,5,0.858,6,0.858,7,0.858,8,0.858,9,0.285,11,1.251,12,1.403,13,0.858,14,1.581,15,1.295,17,1.137,19,1.137,31,0.945,35,0.858,47,0.037,48,0.838,62,0.778,84,0.389,85,0.445,98,0.336,99,0.285,100,1.659,170,1.03,177,0.703,178,1.137,179,0.858,180,1.357,181,0.858,182,0.858,183,0.505,184,0.858,185,0.567,186,0.858,187,0.505,188,0.858,189,0.896,190,0.858,191,0.505,192,0.858,193,0.567,194,0.858,195,0.505,196,0.858,197,0.505,198,0.858,199,0.505,200,0.858,201,0.505,202,0.633,203,0.858,204,0.505,205,0.703,206,0.858,207,0.567,208,0.858,209,0.858,210,0.858,211,0.02,212,0.026,213,0.02,215,0.703,430,2.751,431,5.255,432,4.936,433,4.403,434,4.403,435,4.403,436,4.403,437,4.403,438,4.403,439,4.403,440,4.403]],["title/injectables/GroupsService.html",[400,1.381,441,2.159]],["body/injectables/GroupsService.html",[3,0.431,4,0.366,9,0.366,35,1.522,44,0.903,47,0.037,52,1.944,84,0.5,85,0.572,98,0.431,99,0.366,211,0.025,212,0.03,213,0.025,215,0.903,265,2.396,282,2.604,400,2.629,401,2.685,417,3.047,441,3.682,442,3.532,443,4.268,444,3.245,445,4.269,446,5.158,447,4.268,448,5.158]],["title/components/LoginComponent.html",[0,0.049,191,0.459]],["body/components/LoginComponent.html",[0,0.074,1,0.281,2,0.55,3,0.187,4,0.159,5,0.479,6,0.479,7,0.479,8,0.479,9,0.159,11,0.82,12,1.007,13,0.479,14,1.441,15,1.18,17,0.745,19,0.745,21,0.281,22,1.033,24,3.542,28,0.82,30,1.816,31,0.527,34,1.816,35,0.745,36,1.166,37,3.016,38,1.796,39,1.79,40,2.783,41,1.497,43,1.249,44,1.077,46,1.508,47,0.037,48,0.874,49,0.944,50,1.249,52,1.508,53,1.458,54,1.62,56,1.816,59,1.816,61,1.007,62,0.83,63,1.816,64,2.517,68,0.579,69,0.636,70,1.816,71,1.816,72,1.816,74,1.336,75,1.816,78,0.768,84,0.581,85,0.248,86,2.054,88,1.6,89,0.936,90,1.166,91,0.936,92,0.915,93,0.847,94,0.936,95,1.232,96,0.527,97,0.847,98,0.187,99,0.159,100,0.699,101,2.889,104,1.508,107,1.041,108,1.041,109,1.619,110,1.619,112,1.816,113,1.166,114,1.166,115,1.816,116,1.166,117,1.166,118,0.579,119,1.166,120,1.166,121,2.23,122,1.166,123,1.166,124,1.62,125,1.166,126,1.166,127,1.166,128,1.166,130,0.936,142,1.166,150,2.326,158,1.041,170,0.676,177,0.392,178,1.033,179,0.479,180,1.033,181,0.479,182,0.479,183,0.281,184,0.479,185,0.316,186,0.479,187,0.281,188,0.479,189,0.316,190,0.479,191,0.607,192,0.479,193,0.316,194,0.479,195,0.281,196,0.479,197,0.281,198,0.479,199,0.281,200,0.479,201,0.281,202,0.353,203,0.479,204,0.281,205,0.392,206,0.479,207,0.316,208,0.479,209,0.479,210,0.479,211,0.011,212,0.017,213,0.011,215,0.392,216,3.065,220,3.311,221,1.62,222,3.311,223,2.933,224,2.389,228,2.389,229,4.103,231,2.389,233,1.534,239,1.534,240,1.324,241,1.166,242,1.534,243,2.517,244,1.534,245,1.534,246,1.534,247,1.99,248,1.324,249,1.534,250,1.534,251,1.324,252,1.534,253,1.534,254,1.534,262,1.324,263,1.534,324,2.389,352,2.389,353,1.816,356,1.041,444,2.727,449,1.534,450,3.545,451,2.887,452,1.854,453,1.854,454,2.887,455,1.854,456,1.854,457,1.854,458,4.001,459,1.854,460,2.887,461,1.854,462,1.854,463,1.854,464,1.854,465,1.854,466,1.854,467,1.854,468,1.854,469,1.854,470,1.854]],["title/components/NavbarComponent.html",[0,0.049,193,0.516]],["body/components/NavbarComponent.html",[0,0.086,1,0.421,2,0.741,3,0.28,4,0.238,5,0.716,6,0.716,7,0.716,8,0.716,9,0.238,11,1.105,12,1.384,13,0.716,14,1.543,15,1.264,17,1.004,19,1.004,21,0.421,22,1.004,28,1.105,31,1.384,35,1.16,41,1.661,44,1.03,46,1.044,47,0.037,48,0.855,49,0.741,50,0.866,61,0.788,62,0.91,68,1.215,69,1.671,77,2.183,78,2.204,84,0.456,85,0.371,86,1.612,87,2.447,92,1.004,95,1.458,96,1.458,98,0.28,99,0.238,104,1.044,149,1.4,150,1.266,151,2.777,164,2.447,170,0.91,177,0.586,178,1.004,179,0.716,180,1.258,181,0.716,182,0.716,183,0.421,184,0.716,185,0.473,186,0.716,187,0.421,188,0.716,189,0.473,190,0.716,191,0.421,192,0.716,193,0.831,194,0.716,195,0.421,196,0.716,197,0.421,198,0.716,199,0.421,200,0.716,201,0.421,202,0.855,203,0.716,204,0.421,205,0.586,206,0.716,207,0.473,208,0.716,209,0.716,210,0.716,211,0.016,212,0.023,213,0.016,215,0.586,216,2.183,258,1.979,259,1.744,273,3.219,355,2.777,356,2.183,372,2.777,373,3.208,379,1.744,387,1.979,389,3.208,390,1.979,471,2.294,472,5.319,473,4.493,474,3.889,475,2.294,476,2.772,477,2.772,478,2.772,479,2.772,480,2.772,481,3.889,482,3.219,483,3.889,484,2.772]],["title/components/NotfoundComponent.html",[0,0.049,195,0.459]],["body/components/NotfoundComponent.html",[0,0.089,1,0.519,2,0.854,3,0.346,4,0.293,5,0.883,6,0.883,7,0.883,8,0.883,9,0.293,11,1.274,12,1.422,13,0.883,14,1.586,15,1.309,17,1.158,19,1.158,31,0.972,35,0.883,47,0.037,48,0.854,62,0.8,84,0.401,85,0.458,98,0.346,99,0.293,100,1.69,170,1.05,177,0.723,178,1.158,179,0.883,180,1.372,181,0.883,182,0.883,183,0.519,184,0.883,185,0.583,186,0.883,187,0.519,188,0.883,189,0.583,190,0.883,191,0.519,192,0.883,193,0.583,194,0.883,195,0.806,196,0.883,197,0.519,198,0.883,199,0.519,200,0.883,201,0.519,202,0.651,203,0.883,204,0.519,205,0.723,206,0.883,207,0.583,208,0.883,209,0.883,210,0.883,211,0.02,212,0.026,213,0.02,215,0.723,349,4.397,353,2.822,485,2.83,486,5.005,487,4.485,488,4.485]],["title/components/QuestionsComponent.html",[0,0.049,197,0.459]],["body/components/QuestionsComponent.html",[0,0.076,1,0.339,2,0.633,3,0.225,4,0.191,5,0.576,6,0.576,7,0.576,8,0.576,9,0.191,11,0.944,12,1.129,13,0.576,14,1.491,15,1.222,17,0.858,19,0.858,21,0.339,28,0.944,31,0.634,35,0.576,44,0.472,47,0.037,48,0.633,53,1.126,55,1.593,61,0.634,62,0.778,69,0.765,84,0.261,85,0.299,88,0.634,98,0.225,99,0.191,100,1.252,118,1.541,170,0.93,177,0.472,178,0.858,179,0.576,180,1.136,181,0.576,182,0.576,183,0.339,184,0.576,185,0.38,186,0.576,187,0.339,188,0.576,189,0.38,190,0.576,191,0.339,192,0.576,193,0.38,194,0.576,195,0.339,196,0.576,197,0.668,198,0.576,199,0.339,200,0.576,201,0.339,202,0.425,203,0.576,204,0.339,205,0.472,206,0.576,207,0.38,208,0.576,209,0.576,210,0.576,211,0.013,212,0.02,213,0.013,215,0.472,221,2.471,247,1.252,258,1.593,259,2.091,291,2.091,350,3.287,356,1.252,489,1.846,490,3.324,491,3.972,492,3.324,493,4.936,494,2.231,495,3.324,496,2.231,497,2.231,498,3.324,499,2.231,500,2.231,501,2.231,502,1.846,503,2.231,504,2.231,505,2.231,506,2.231,507,2.231,508,2.231,509,2.231,510,4.402,511,3.324,512,3.324,513,3.324,514,3.324,515,3.324,516,3.324,517,4.402,518,3.324,519,3.324,520,2.751,521,3.324,522,4.402,523,4.402,524,3.324,525,3.324,526,3.324,527,3.324,528,3.324,529,3.324,530,3.324,531,3.324,532,3.324,533,3.324,534,3.324,535,3.324,536,3.324,537,3.324,538,3.324,539,2.751,540,3.324,541,2.751,542,3.324,543,3.324,544,3.324,545,4.402,546,3.324,547,2.751,548,3.324,549,3.324,550,4.402,551,3.324,552,3.324,553,3.324,554,3.324,555,3.324,556,3.324,557,3.324,558,3.324,559,3.324,560,3.324,561,3.324,562,3.324,563,3.324,564,3.324,565,3.324,566,3.324,567,3.324,568,3.324,569,3.324,570,3.324,571,3.324,572,3.324,573,3.324,574,3.324,575,3.324,576,3.324,577,3.324,578,3.324,579,3.324,580,3.324,581,3.324,582,3.324,583,3.324,584,3.324,585,3.324,586,3.324,587,3.324,588,3.324,589,3.324,590,3.324,591,2.751,592,3.324,593,3.324,594,3.324,595,3.324,596,3.324,597,3.324,598,3.324,599,3.324,600,3.324,601,3.324,602,3.324]],["title/components/RegisterComponent.html",[0,0.049,199,0.459]],["body/components/RegisterComponent.html",[0,0.076,1,0.241,2,0.486,3,0.161,4,0.136,5,0.41,6,0.41,7,0.41,8,0.41,9,0.136,11,0.726,12,1.043,13,0.41,14,1.394,15,1.142,17,0.66,19,0.66,21,0.241,22,0.948,24,3.593,27,2.652,28,0.726,30,1.607,31,1.043,32,3.038,33,2.114,34,2.016,35,0.827,36,1,37,2.954,38,1.78,39,1.853,40,2.72,41,1.467,42,2.288,43,1.001,44,1.052,46,1.383,47,0.038,48,1.058,49,0.699,50,0.798,52,0.963,53,2.169,54,1.434,55,1.824,56,1.607,57,2.652,58,2.652,59,2.53,60,2.621,61,1.043,62,0.941,63,1.607,64,2.309,68,1.001,69,1.099,70,2.016,71,1.607,72,2.703,74,0.963,75,2.016,78,1.328,82,1.315,84,0.568,85,0.213,86,1.871,88,1.64,89,0.802,90,1,91,0.802,92,0.948,93,0.726,94,0.802,95,0.91,96,0.91,97,0.726,98,0.161,99,0.136,101,2.016,102,1.315,103,0.892,104,1.383,105,1.135,107,1.434,108,1.434,109,1.463,110,2.062,111,1.315,112,1.607,113,1,114,1,115,2.309,116,1,117,1,118,0.496,119,1,120,1,121,2.53,122,1,123,1,124,1.434,125,1,126,1,127,1,128,1,129,2.114,130,1.29,132,2.06,133,1.315,135,2.114,136,1.315,137,1.315,138,1.315,139,1.315,140,1.135,141,1.315,142,1,143,1.315,144,2.114,145,1.315,146,2.114,147,2.114,148,1.315,149,0.802,150,2.062,151,1.135,152,1.315,153,1.315,154,1.315,158,0.892,159,1.315,161,1.315,162,2.169,164,3.31,166,1.315,167,1.315,168,1.315,169,1.315,170,0.75,171,1.315,172,1.315,173,2.652,174,3.886,175,2.652,177,0.336,178,0.66,179,0.41,180,0.948,181,0.41,182,0.41,183,0.241,184,0.41,185,0.271,186,0.41,187,0.241,188,0.41,189,0.271,190,0.41,191,0.241,192,0.41,193,0.271,194,0.41,195,0.241,196,0.41,197,0.241,198,0.41,199,0.557,200,0.41,201,0.241,202,0.303,203,0.41,204,0.241,205,0.336,206,0.41,207,0.271,208,0.41,209,0.41,210,0.41,211,0.009,212,0.015,213,0.009,215,0.336,227,0.892,241,1,243,2.703,259,1,282,0.802,444,1,603,1.315,604,3.204,605,2.555,606,3.204,607,3.038,608,1.589,609,1.589,610,1.589,611,2.555,612,2.555,613,1.589,614,2.555,615,2.555,616,1.589,617,1.589,618,1.589,619,1.589,620,1.589,621,1.589,622,1.589,623,1.589,624,1.589,625,1.589,626,2.555,627,1.589,628,1.589,629,1.589,630,1.589,631,1.589,632,1.589,633,1.589,634,1.589,635,1.589,636,1.589]],["title/components/SupportGroupsComponent.html",[0,0.049,201,0.459]],["body/components/SupportGroupsComponent.html",[0,0.085,1,0.451,2,0.778,3,0.301,4,0.255,5,0.768,6,0.768,7,0.768,8,0.768,9,0.255,11,1.161,12,1.325,13,0.768,14,1.558,15,1.277,17,1.054,19,1.054,21,0.451,22,1.054,31,0.845,41,1.457,43,0.929,44,0.864,47,0.037,48,0.778,49,0.566,62,0.696,68,1.276,69,1.401,77,2.293,78,2.081,84,0.546,85,0.399,92,0.768,94,1.502,95,0.845,96,0.845,98,0.301,99,0.255,100,1.539,104,1.121,149,2.355,170,0.956,177,0.629,178,1.054,179,0.768,180,1.296,181,0.768,182,0.768,183,0.451,184,0.768,185,0.507,186,0.768,187,0.451,188,0.768,189,0.507,190,0.768,191,0.451,192,0.768,193,0.507,194,0.768,195,0.451,196,0.768,197,0.451,198,0.768,199,0.451,200,0.768,201,0.762,202,1.109,203,0.768,204,0.451,205,0.629,206,0.768,207,0.507,208,0.768,209,0.768,210,0.768,211,0.017,212,0.024,213,0.017,215,0.629,240,2.124,321,2.935,356,2.293,372,2.916,373,3.976,379,1.871,387,2.124,389,3.33,390,2.124,443,3.38,637,3.86,638,2.462,639,4.665,640,4.085,641,2.975,642,2.975,643,2.975]],["title/components/TipsPageComponent.html",[0,0.049,204,0.459]],["body/components/TipsPageComponent.html",[0,0.088,1,0.447,2,0.773,3,0.298,4,0.253,5,0.761,6,0.761,7,0.761,8,0.761,9,0.253,11,1.154,12,1.421,13,0.761,14,1.557,15,1.275,17,1.048,19,1.048,21,0.447,28,1.154,31,1.421,35,1.291,41,1.693,44,0.859,46,1.111,47,0.037,48,0.884,49,0.561,50,0.921,52,1.53,61,1.319,62,0.95,84,0.475,85,0.395,86,1.222,92,1.048,95,1.421,96,1.421,98,0.298,99,0.253,104,1.111,170,0.95,177,0.624,178,1.048,179,0.761,180,1.291,181,0.761,182,0.761,183,0.447,184,0.761,185,0.503,186,0.761,187,0.447,188,0.761,189,0.503,190,0.761,191,0.447,192,0.761,193,0.503,194,0.761,195,0.447,196,0.761,197,0.447,198,0.761,199,0.447,200,0.761,201,0.447,202,0.561,203,0.761,204,0.759,205,1.229,206,0.761,207,0.503,208,0.761,209,0.761,210,0.761,211,0.017,212,0.024,213,0.017,215,0.624,241,1.855,305,2.921,353,3.147,475,2.44,591,3.36,644,3.842,645,2.44,646,4.643,647,4.06,648,2.948,649,4.06,650,2.948,651,4.06,652,2.948,653,4.06,654,4.06,655,4.06,656,4.06,657,4.06]],["title/interfaces/User.html",[88,0.859,358,1.698]],["body/interfaces/User.html",[3,0.415,4,0.352,9,0.352,21,0.624,22,1.301,47,0.036,49,1.13,50,1.574,68,1.284,74,2.288,77,3.061,88,1.432,98,0.415,107,3.061,108,3.061,109,2.49,110,2.49,158,3.191,211,0.024,212,0.03,213,0.024,247,3.191,358,2.307,359,2.935,364,4.512,658,3.402,659,4.111,660,4.111,661,4.111,662,4.111]],["title/injectables/UserService.html",[43,0.945,400,1.381]],["body/injectables/UserService.html",[3,0.245,4,0.208,9,0.208,21,0.368,22,0.912,28,1.003,29,2.922,35,0.625,41,1.639,43,1.103,44,1.195,46,1.916,47,0.037,48,0.999,49,1.024,50,1.43,52,1.726,53,2.313,54,2.854,60,3.27,61,1.444,62,0.567,74,2.152,84,0.57,85,0.325,87,2.221,88,1.719,89,1.223,92,0.625,95,0.688,96,0.688,97,1.106,98,0.245,99,0.208,103,1.359,104,1.331,109,1.903,110,2.091,130,2.459,132,2.339,140,3.27,150,1.612,162,1.223,211,0.014,212,0.021,213,0.014,215,0.512,227,2.571,243,2.622,265,2.339,379,1.524,400,1.612,401,1.524,403,2.922,404,4.03,405,3.449,406,4.343,413,3.449,415,1.524,416,2.004,417,1.729,419,2.004,420,2.004,421,2.004,422,2.004,423,2.922,424,2.004,426,4.03,427,2.004,428,2.004,429,2.004,444,2.221,447,2.922,502,2.922,547,2.922,607,2.922,663,2.004,664,3.531,665,3.531,666,3.531,667,4.58,668,4.58,669,2.422,670,3.531,671,3.531,672,2.422,673,3.531,674,3.531,675,2.422,676,3.531,677,5.084,678,3.531,679,2.422,680,2.422,681,2.422,682,3.531,683,2.422,684,2.422,685,2.422,686,2.422,687,2.422,688,2.422,689,3.531,690,2.422,691,2.422,692,2.422,693,4.168,694,2.422,695,2.422,696,2.422,697,2.422,698,2.422]],["title/components/UserviewComponent.html",[0,0.049,207,0.516]],["body/components/UserviewComponent.html",[0,0.073,1,0.423,2,0.743,3,0.281,4,0.239,5,0.719,6,0.719,7,0.719,8,0.719,9,0.239,11,1.109,12,1.28,13,0.719,14,1.544,15,1.265,17,1.008,19,1.008,21,0.423,22,1.008,28,1.109,31,1.387,35,1.008,38,2.023,39,2.465,42,3.216,43,1.525,44,1.087,46,1.698,47,0.037,48,0.979,49,0.858,50,1.407,54,2.191,61,1.28,62,1.054,84,0.572,85,0.373,88,1.46,92,0.719,98,0.281,99,0.239,104,1.05,105,1.989,109,1.272,110,1.782,170,0.913,177,0.589,178,1.008,179,0.719,180,1.26,181,0.719,182,0.719,183,0.423,184,0.719,185,0.475,186,0.719,187,0.423,188,0.719,189,0.475,190,0.719,191,0.423,192,0.719,193,0.475,194,0.719,195,0.423,196,0.719,197,0.423,198,0.719,199,0.423,200,0.719,201,0.423,202,0.53,203,0.719,204,0.423,205,0.589,206,0.719,207,0.833,208,1.163,209,0.719,210,0.719,211,0.016,212,0.023,213,0.016,221,2.529,251,1.989,262,1.989,375,3.23,393,2.305,699,2.305,700,4.505,701,3.903,702,3.903,703,2.786,704,2.786,705,2.786,706,2.786,707,2.786,708,3.903,709,2.786,710,3.903,711,2.786,712,2.786,713,2.786,714,3.903,715,2.786,716,2.786,717,2.786,718,2.786,719,2.786,720,2.786,721,2.786,722,2.786,723,2.786,724,2.786,725,2.786,726,3.903,727,3.903,728,3.903,729,3.903]],["title/coverage.html",[730,3.419]],["body/coverage.html",[0,0.099,1,0.517,9,0.292,10,2.818,43,1.064,47,0.037,49,0.648,88,0.968,99,0.292,118,1.064,162,1.72,183,0.517,185,0.581,187,0.517,189,0.581,191,0.517,193,0.581,195,0.517,197,0.517,199,0.517,201,0.517,204,0.517,207,0.581,211,0.02,212,0.026,213,0.02,214,2.818,248,4.115,264,2.818,305,2.143,321,2.143,330,2.432,332,2.818,358,2.511,360,2.818,369,2.818,383,2.143,400,2.281,402,2.818,415,2.814,430,2.818,441,2.432,442,2.818,449,2.818,471,2.818,485,2.818,489,2.818,603,2.818,637,2.818,638,2.818,644,2.818,645,2.818,658,2.818,663,2.818,699,2.818,730,2.818,731,3.406,732,3.406,733,3.406,734,3.406,735,3.406,736,2.818,737,3.406,738,4.473,739,3.406,740,3.406,741,5.305,742,4.473,743,3.406,744,3.406,745,5.305,746,4.473,747,3.406,748,3.406,749,3.406,750,3.406,751,3.406,752,3.406,753,3.406,754,3.406,755,3.406,756,3.406,757,3.406,758,3.406,759,3.406,760,2.818,761,5.305,762,5.305,763,2.818,764,3.702,765,2.818,766,2.818,767,3.406,768,3.406]],["title/dependencies.html",[278,2.289,769,2.524]],["body/dependencies.html",[38,2.108,47,0.037,85,0.559,91,2.107,92,1.313,93,1.905,95,1.186,96,1.186,211,0.025,212,0.03,213,0.025,278,2.625,280,2.979,294,4.21,295,3.2,770,4.172,771,5.038,772,4.172,773,4.172,774,4.172,775,4.172,776,4.172,777,4.172,778,4.172,779,4.172,780,4.172,781,4.172,782,4.172,783,4.172,784,4.172,785,4.172,786,4.172,787,4.172,788,4.172,789,4.172,790,4.172]],["title/index.html",[21,0.383,791,2.524,792,2.524]],["body/index.html",[0,0.086,4,0.332,15,0.819,47,0.029,48,0.737,56,3.339,124,2.174,162,1.955,211,0.023,212,0.029,213,0.023,269,3.204,291,2.436,339,3.204,346,4.393,482,3.204,520,3.204,541,3.204,771,3.204,793,4.858,794,3.872,795,5.308,796,3.872,797,3.872,798,4.858,799,5.733,800,5.937,801,3.872,802,3.872,803,3.872,804,3.872,805,3.872,806,3.872,807,3.872,808,3.872,809,3.872,810,5.308,811,3.872,812,5.733,813,3.872,814,3.872,815,3.872,816,3.872,817,3.872,818,3.872,819,3.204,820,4.858,821,4.858,822,5.566,823,4.858,824,4.858,825,3.872,826,5.566,827,3.872,828,3.872,829,5.308,830,3.872,831,3.872]],["title/modules.html",[277,2.319]],["body/modules.html",[47,0.032,202,0.911,211,0.028,212,0.032,213,0.028,276,3.009,277,2.684,288,2.684,295,3.009,832,4.782,833,5.516,834,4.782,835,4.782]],["title/overview.html",[836,3.419]],["body/overview.html",[1,0.777,2,0.682,43,1.598,47,0.037,99,0.307,177,0.757,183,0.777,185,0.995,187,0.777,189,0.873,191,0.777,193,0.873,195,0.777,197,0.777,199,0.777,201,0.777,204,0.777,207,0.873,211,0.021,212,0.027,213,0.021,275,2.01,276,4,277,2.01,278,2.253,279,2.964,280,2.557,281,2.964,282,1.808,283,2.964,284,2.964,285,2.964,286,2.964,287,2.964,288,2.873,289,3.825,290,2.964,291,2.253,298,2.01,359,2.557,401,2.253,736,2.964,836,2.964,837,4.622,838,3.581,839,3.581,840,3.581]],["title/routes.html",[298,2.319]],["body/routes.html",[47,0.033,211,0.029,212,0.033,213,0.029,298,2.756]],["title/miscellaneous/variables.html",[841,2.089,842,3.011]],["body/miscellaneous/variables.html",[21,0.646,47,0.037,49,1.095,68,1.729,69,1.899,78,1.764,149,2.6,211,0.025,212,0.03,213,0.025,415,3.619,539,4.262,760,3.523,763,3.523,764,3.523,765,4.262,766,4.262,819,4.262,841,3.523,842,3.523,843,5.15,844,4.258,845,4.258,846,4.258,847,4.258,848,4.258,849,5.15,850,4.258,851,4.258,852,4.258]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":248,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":840,"title":{},"body":{"overview.html":{}}}],["1.10.0",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["12.0.1",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":838,"title":{},"body":{"overview.html":{}}}],["16",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":837,"title":{},"body":{"overview.html":{}}}],["2.1.4",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":438,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":839,"title":{},"body":{"overview.html":{}}}],["3.0.4",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["4.4.1",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["5/10",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":518,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["6.5.4",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["6/12",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":736,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9.1.3",{"_index":771,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9876543210",{"_index":435,"title":{},"body":{"components/FooterComponent.html":{}}}],["accept",{"_index":58,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":33,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["accident",{"_index":555,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["actual_component",{"_index":210,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["add",{"_index":120,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["admin",{"_index":87,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["adminedit",{"_index":16,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppRoutingModule.html":{}}}],["adminedit'},{'name",{"_index":182,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["adminedit.component.css",{"_index":18,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["adminedit.component.html",{"_index":20,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["adminedit/adminedit.component",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["adminedit/userview/userview.component",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["admineditcomponent",{"_index":1,"title":{"components/AdmineditComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminlogin",{"_index":217,"title":{},"body":{"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{}}}],["adminlogin'},{'name",{"_index":184,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["adminlogin.component.css",{"_index":218,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["adminlogin.component.html",{"_index":219,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["adminlogin/adminlogin.component",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["adminlogincomponent",{"_index":183,"title":{"components/AdminloginComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["angular",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["angular/animations",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":97,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":85,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":91,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":93,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["anxiety",{"_index":591,"title":{},"body":{"components/QuestionsComponent.html":{},"components/TipsPageComponent.html":{}}}],["anxious",{"_index":511,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["anything",{"_index":566,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["api",{"_index":60,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["api.azurewebsites.net",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibaseurl",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"index.html":{}}}],["app.component",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":185,"title":{"components/AppComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":276,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":330,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":288,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":172,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["artifacts",{"_index":813,"title":{},"body":{"index.html":{}}}],["assault",{"_index":554,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["assertive",{"_index":532,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["asserts",{"_index":611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["attacks",{"_index":582,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["attend",{"_index":399,"title":{},"body":{"components/EventsComponent.html":{}}}],["attendees",{"_index":361,"title":{},"body":{"interfaces/Event.html":{}}}],["attendees:string",{"_index":368,"title":{},"body":{"interfaces/Event.html":{}}}],["automatically",{"_index":805,"title":{},"body":{"index.html":{}}}],["available",{"_index":835,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":544,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["avoidance",{"_index":565,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["backend",{"_index":122,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["based",{"_index":503,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["baseurl",{"_index":333,"title":{},"body":{"classes/AppPage.html":{}}}],["bcrypt.gensaltsync(10",{"_index":136,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["bcrypt.hashsync(pass",{"_index":139,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["bcryptjs",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["behaviors",{"_index":594,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["being",{"_index":523,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["body",{"_index":126,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["boolean",{"_index":77,"title":{},"body":{"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["breath",{"_index":573,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["browse",{"_index":833,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":340,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":812,"title":{},"body":{"index.html":{}}}],["c.a.l.m",{"_index":436,"title":{},"body":{"components/FooterComponent.html":{}}}],["c.a.l.m(center",{"_index":653,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["calm",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["carrying",{"_index":592,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["certain",{"_index":593,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["change",{"_index":807,"title":{},"body":{"index.html":{}}}],["check",{"_index":830,"title":{},"body":{"index.html":{}}}],["checks",{"_index":632,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chest",{"_index":574,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["choices",{"_index":504,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["class",{"_index":99,"title":{"classes/AppPage.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":331,"title":{},"body":{"classes/AppPage.html":{}}}],["clears",{"_index":129,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["cli",{"_index":795,"title":{},"body":{"index.html":{}}}],["client",{"_index":502,"title":{},"body":{"components/QuestionsComponent.html":{},"injectables/UserService.html":{}}}],["clientmodule",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["clothes",{"_index":602,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["cluster_appmodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":124,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":181,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"overview.html":{}}}],["conditinal",{"_index":631,"title":{},"body":{"components/RegisterComponent.html":{}}}],["conditional",{"_index":258,"title":{},"body":{"components/AdminloginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{}}}],["confirm('are",{"_index":717,"title":{},"body":{"components/UserviewComponent.html":{}}}],["console.log(`${this.user.password",{"_index":256,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["console.log(`${this.user.username",{"_index":257,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["console.log(err",{"_index":725,"title":{},"body":{"components/UserviewComponent.html":{}}}],["console.log(newusers",{"_index":159,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(salt",{"_index":137,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(user",{"_index":252,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["const",{"_index":132,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/EventsService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["constant",{"_index":599,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["constructor(cookieservice",{"_index":475,"title":{},"body":{"components/NavbarComponent.html":{},"components/TipsPageComponent.html":{}}}],["constructor(formbuilder",{"_index":36,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"injectables/EventsService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":643,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["constructor(userapi",{"_index":703,"title":{},"body":{"components/UserviewComponent.html":{}}}],["contain",{"_index":446,"title":{},"body":{"injectables/GroupsService.html":{}}}],["containing",{"_index":151,"title":{},"body":{"components/AdmineditComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["contains",{"_index":649,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["content",{"_index":342,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cookie",{"_index":95,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":41,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{}}}],["cookieservice,private",{"_index":386,"title":{},"body":{"components/EventsComponent.html":{}}}],["copyright",{"_index":437,"title":{},"body":{"components/FooterComponent.html":{}}}],["coverage",{"_index":730,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createadmin",{"_index":29,"title":{},"body":{"components/AdmineditComponent.html":{},"injectables/UserService.html":{}}}],["createadmin(user",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["createadminform",{"_index":23,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["created",{"_index":166,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["creates",{"_index":161,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["createuser",{"_index":607,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["createuser(user",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserform",{"_index":606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["creation",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["creats",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["criticized",{"_index":524,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["data",{"_index":372,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["data=this.cookieservice.get('username",{"_index":387,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["days",{"_index":512,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["declarations",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declares",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["delete",{"_index":719,"title":{},"body":{"components/UserviewComponent.html":{}}}],["deleted",{"_index":724,"title":{},"body":{"components/UserviewComponent.html":{}}}],["deleteuser",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(username",{"_index":678,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":278,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":215,"title":{},"body":{"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{}}}],["dev",{"_index":802,"title":{},"body":{"index.html":{}}}],["development",{"_index":797,"title":{},"body":{"index.html":{}}}],["different",{"_index":515,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["difficulty",{"_index":560,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["directive",{"_index":179,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["directives",{"_index":209,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":811,"title":{},"body":{"index.html":{}}}],["directory",{"_index":816,"title":{},"body":{"index.html":{}}}],["disaster",{"_index":556,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["display",{"_index":128,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dist",{"_index":815,"title":{},"body":{"index.html":{}}}],["dizziness",{"_index":576,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["document.getelementbyid('p').innertext",{"_index":498,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["document.getelementbyid(`${i",{"_index":507,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["documentation",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["dreams",{"_index":563,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["dynamic",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":378,"title":{},"body":{"components/EventsComponent.html":{}}}],["e.occurrencedata",{"_index":396,"title":{},"body":{"components/EventsComponent.html":{}}}],["e.organizer.username",{"_index":397,"title":{},"body":{"components/EventsComponent.html":{}}}],["e.title",{"_index":395,"title":{},"body":{"components/EventsComponent.html":{}}}],["e2e",{"_index":827,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":332,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":337,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:6",{"_index":338,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["eating",{"_index":531,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["element",{"_index":170,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["element(by.css('app",{"_index":341,"title":{},"body":{"classes/AppPage.html":{}}}],["element.checked",{"_index":508,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["element.value",{"_index":509,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["embarrassed/humiliated",{"_index":525,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["end",{"_index":826,"title":{},"body":{"index.html":{}}}],["environment",{"_index":415,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl",{"_index":421,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":262,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/UserviewComponent.html":{}}}],["error",{"_index":24,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error.error",{"_index":112,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error.error.message",{"_index":117,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error.status",{"_index":125,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errorevent",{"_index":114,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errormessage",{"_index":220,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["errormessage:string",{"_index":239,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["errorr",{"_index":612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors",{"_index":633,"title":{},"body":{"components/RegisterComponent.html":{}}}],["etc",{"_index":550,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["even",{"_index":526,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["event",{"_index":118,"title":{"interfaces/Event.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["eventapi:eventsservice,private",{"_index":385,"title":{},"body":{"components/EventsComponent.html":{}}}],["events",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{}}}],["events'},{'name",{"_index":188,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["events.component.css",{"_index":370,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.html",{"_index":371,"title":{},"body":{"components/EventsComponent.html":{}}}],["events/events.component",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["eventscomponent",{"_index":187,"title":{"components/EventsComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsservice",{"_index":383,"title":{"injectables/EventsService.html":{}},"body":{"components/EventsComponent.html":{},"injectables/EventsService.html":{},"coverage.html":{}}}],["everyday",{"_index":527,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["example",{"_index":596,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["exception",{"_index":458,"title":{},"body":{"components/LoginComponent.html":{}}}],["excessive",{"_index":577,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["execute",{"_index":823,"title":{},"body":{"index.html":{}}}],["exhibiting",{"_index":558,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["experience",{"_index":571,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["experienced",{"_index":551,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["export",{"_index":98,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["exported",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["exports",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/EventsService.html":{},"injectables/GroupsService.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["f",{"_index":34,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["false",{"_index":78,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"miscellaneous/variables.html":{}}}],["fear",{"_index":522,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fearful",{"_index":537,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fears",{"_index":586,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["feel",{"_index":510,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"coverage.html":{}}}],["files",{"_index":808,"title":{},"body":{"index.html":{}}}],["first",{"_index":173,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["flag",{"_index":818,"title":{},"body":{"index.html":{}}}],["flashbacks",{"_index":564,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fname",{"_index":107,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["fname:string",{"_index":660,"title":{},"body":{"interfaces/User.html":{}}}],["footer",{"_index":431,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":190,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["footer.component.css",{"_index":432,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":433,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":189,"title":{"components/FooterComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":505,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["form",{"_index":150,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["form.reset",{"_index":245,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["formbuilder",{"_index":37,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formdata",{"_index":403,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["formdata:event",{"_index":418,"title":{},"body":{"injectables/EventsService.html":{}}}],["formdata:user",{"_index":688,"title":{},"body":{"injectables/UserService.html":{}}}],["formsmodule",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":488,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["frequently",{"_index":570,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["frombuilder",{"_index":464,"title":{},"body":{"components/LoginComponent.html":{}}}],["further",{"_index":828,"title":{},"body":{"index.html":{}}}],["generate",{"_index":810,"title":{},"body":{"index.html":{}}}],["generated",{"_index":794,"title":{},"body":{"index.html":{}}}],["germs",{"_index":597,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["getf",{"_index":82,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["gets",{"_index":53,"title":{},"body":{"components/AdmineditComponent.html":{},"classes/AppPage.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":791,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":335,"title":{},"body":{"classes/AppPage.html":{}}}],["getusers",{"_index":140,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["getusersbyname",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["given",{"_index":447,"title":{},"body":{"injectables/GroupsService.html":{},"injectables/UserService.html":{}}}],["go",{"_index":541,"title":{},"body":{"components/QuestionsComponent.html":{},"index.html":{}}}],["graph",{"_index":834,"title":{},"body":{"modules.html":{}}}],["great",{"_index":542,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["group",{"_index":443,"title":{},"body":{"injectables/GroupsService.html":{},"components/SupportGroupsComponent.html":{}}}],["groups",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["groups'},{'name",{"_index":203,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["groups.component",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["groups.component.css",{"_index":639,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.html",{"_index":640,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts",{"_index":638,"title":{},"body":{"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["groups.component.ts:20",{"_index":641,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:21",{"_index":642,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups/support",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["groupsservice",{"_index":441,"title":{"injectables/GroupsService.html":{}},"body":{"injectables/GroupsService.html":{},"coverage.html":{}}}],["handleerror",{"_index":30,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["handleerror(error",{"_index":63,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["handles",{"_index":147,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["handling",{"_index":101,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["hands",{"_index":601,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["having",{"_index":546,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["header",{"_index":404,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["headers",{"_index":698,"title":{},"body":{"injectables/UserService.html":{}}}],["headersettings",{"_index":422,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["help",{"_index":829,"title":{},"body":{"index.html":{}}}],["helpline",{"_index":434,"title":{},"body":{"components/FooterComponent.html":{}}}],["here",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":484,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":178,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["http",{"_index":227,"title":{},"body":{"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"injectables/EventsService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["http://192.168.99.100:8000",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://calm",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":804,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":413,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httpclient,private",{"_index":419,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["httperror",{"_index":468,"title":{},"body":{"components/LoginComponent.html":{}}}],["httperrorresponse",{"_index":64,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["httpheaders",{"_index":414,"title":{},"body":{"injectables/EventsService.html":{}}}],["httpheaders(headersettings",{"_index":424,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httpheaders,httprequest",{"_index":687,"title":{},"body":{"injectables/UserService.html":{}}}],["httprequest",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["i=1",{"_index":506,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["id",{"_index":247,"title":{},"body":{"components/AdminloginComponent.html":{},"interfaces/Event.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["idnameisadmin",{"_index":726,"title":{},"body":{"components/UserviewComponent.html":{}}}],["ie",{"_index":529,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["if(this.data",{"_index":390,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["ignore",{"_index":100,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["implementation",{"_index":102,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["import",{"_index":84,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["importing",{"_index":652,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["imports",{"_index":86,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{}}}],["include",{"_index":545,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["injectable",{"_index":400,"title":{"injectables/EventsService.html":{},"injectables/GroupsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/EventsService.html":{},"injectables/GroupsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":401,"title":{},"body":{"injectables/EventsService.html":{},"injectables/GroupsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":623,"title":{},"body":{"components/RegisterComponent.html":{}}}],["injection",{"_index":547,"title":{},"body":{"components/QuestionsComponent.html":{},"injectables/UserService.html":{}}}],["input",{"_index":496,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["inserts",{"_index":169,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["instanceof",{"_index":113,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["intense",{"_index":521,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["interface",{"_index":358,"title":{"interfaces/Event.html":{},"interfaces/User.html":{}},"body":{"interfaces/Event.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":359,"title":{},"body":{"interfaces/Event.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isadmin",{"_index":158,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["iterates",{"_index":500,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["jquery",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":825,"title":{},"body":{"index.html":{}}}],["know",{"_index":587,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["known",{"_index":580,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["last",{"_index":175,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["lead",{"_index":598,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["legend",{"_index":177,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"overview.html":{}}}],["lengths",{"_index":543,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["lifestyle",{"_index":654,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["list",{"_index":405,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["literal",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lname",{"_index":108,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["lname:string",{"_index":659,"title":{},"body":{"interfaces/User.html":{}}}],["login",{"_index":216,"title":{},"body":{"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'name",{"_index":192,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["login(f",{"_index":228,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.css",{"_index":450,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":451,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":191,"title":{"components/LoginComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice",{"_index":222,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["loginservice:userservice",{"_index":240,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["logout",{"_index":483,"title":{},"body":{"components/NavbarComponent.html":{}}}],["longer",{"_index":569,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["loop",{"_index":495,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["lot",{"_index":514,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["making",{"_index":534,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["matching",{"_index":212,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mediation",{"_index":655,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["message",{"_index":121,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["method",{"_index":52,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"injectables/EventsService.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":28,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["miscellaneous",{"_index":841,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":622,"title":{},"body":{"components/RegisterComponent.html":{}}}],["models",{"_index":466,"title":{},"body":{"components/LoginComponent.html":{}}}],["models/user",{"_index":89,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"interfaces/Event.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":275,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":277,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":568,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["months",{"_index":519,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["more",{"_index":520,"title":{},"body":{"components/QuestionsComponent.html":{},"index.html":{}}}],["multiple",{"_index":467,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"index.html":{}}}],["navbar",{"_index":472,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":194,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["navbar.component.css",{"_index":473,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":474,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":193,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":803,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":336,"title":{},"body":{"classes/AppPage.html":{}}}],["network",{"_index":119,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["new",{"_index":162,"title":{},"body":{"components/AdmineditComponent.html":{},"injectables/EventsService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newusers",{"_index":154,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["next",{"_index":657,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["ng",{"_index":800,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":229,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["ngmodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":31,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["ngx",{"_index":92,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"dependencies.html":{}}}],["notfound",{"_index":349,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":196,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["notfound.component",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notfound.component.css",{"_index":486,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.html",{"_index":487,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfoundcomponent",{"_index":195,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nothiing",{"_index":651,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["null",{"_index":244,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["number",{"_index":364,"title":{},"body":{"interfaces/Event.html":{},"interfaces/User.html":{}}}],["object",{"_index":539,"title":{},"body":{"components/QuestionsComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":393,"title":{},"body":{"components/EventsComponent.html":{},"components/UserviewComponent.html":{}}}],["occurred",{"_index":116,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["occurrencedata",{"_index":362,"title":{},"body":{"interfaces/Event.html":{}}}],["occurrencedata:string",{"_index":366,"title":{},"body":{"interfaces/Event.html":{}}}],["ondelete",{"_index":702,"title":{},"body":{"components/UserviewComponent.html":{}}}],["ondelete(username",{"_index":706,"title":{},"body":{"components/UserviewComponent.html":{}}}],["ondelete(username,password",{"_index":716,"title":{},"body":{"components/UserviewComponent.html":{}}}],["ongoing",{"_index":583,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["organizer",{"_index":363,"title":{},"body":{"interfaces/Event.html":{}}}],["organizer:user",{"_index":367,"title":{},"body":{"interfaces/Event.html":{}}}],["otherwise",{"_index":579,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["out",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionsComponent.html":{},"index.html":{},"overview.html":{}}}],["outputs",{"_index":497,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["overview",{"_index":836,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":769,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/TipsPageComponent.html":{}}}],["page'},{'name",{"_index":206,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["page.component",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":646,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page.component.html",{"_index":647,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page.component.ts",{"_index":645,"title":{},"body":{"components/TipsPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:14",{"_index":648,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page.component.ts:24",{"_index":650,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page/tips",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TipsPageComponent.html":{},"coverage.html":{}}}],["pain",{"_index":575,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["panic",{"_index":581,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["param",{"_index":243,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["parameter",{"_index":448,"title":{},"body":{"injectables/GroupsService.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["particular",{"_index":538,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["pass",{"_index":133,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["passhash",{"_index":138,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["password",{"_index":110,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["password:string",{"_index":662,"title":{},"body":{"interfaces/User.html":{}}}],["path",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paths",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["period",{"_index":517,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["perspiration",{"_index":578,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["plane",{"_index":549,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["please",{"_index":398,"title":{},"body":{"components/EventsComponent.html":{}}}],["popper.js",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["populateform",{"_index":375,"title":{},"body":{"components/EventsComponent.html":{},"components/UserviewComponent.html":{}}}],["populateform(e",{"_index":376,"title":{},"body":{"components/EventsComponent.html":{}}}],["populateform(u",{"_index":708,"title":{},"body":{"components/UserviewComponent.html":{}}}],["presented",{"_index":501,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["previous",{"_index":656,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["private",{"_index":104,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["prod",{"_index":817,"title":{},"body":{"index.html":{}}}],["production",{"_index":819,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":793,"title":{},"body":{"index.html":{}}}],["promise",{"_index":334,"title":{},"body":{"classes/AppPage.html":{}}}],["promises",{"_index":57,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["property",{"_index":152,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["protractor",{"_index":339,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provided",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["providedin",{"_index":417,"title":{},"body":{"injectables/EventsService.html":{},"injectables/GroupsService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":221,"title":{},"body":{"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{},"components/UserviewComponent.html":{}}}],["question",{"_index":490,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["questions",{"_index":350,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/QuestionsComponent.html":{}}}],["questions'},{'name",{"_index":198,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["questions.component.css",{"_index":491,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["questions.component.html",{"_index":492,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["questions/questions.component",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["questionscomponent",{"_index":197,"title":{"components/QuestionsComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactive",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["reactiveformsmodule",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":831,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":499,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["record",{"_index":720,"title":{},"body":{"components/UserviewComponent.html":{}}}],["refreshevents",{"_index":407,"title":{},"body":{"injectables/EventsService.html":{}}}],["refreshlist",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["register",{"_index":164,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":200,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["register.component.css",{"_index":604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":199,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":167,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["related",{"_index":567,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["relaxing",{"_index":561,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["relieve",{"_index":590,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["reload",{"_index":806,"title":{},"body":{"index.html":{}}}],["require",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":174,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":429,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["reserved",{"_index":440,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["reseterror",{"_index":32,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["resetform",{"_index":224,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["resetform(form",{"_index":231,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["resets",{"_index":145,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["respectively",{"_index":682,"title":{},"body":{"injectables/UserService.html":{}}}],["response",{"_index":59,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["result",{"_index":211,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":557,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["results",{"_index":213,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":130,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":123,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["returns",{"_index":61,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["rights",{"_index":439,"title":{},"body":{"components/FooterComponent.html":{}}}],["rituals",{"_index":595,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["root",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/EventsService.html":{},"injectables/GroupsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":186,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["router",{"_index":40,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":298,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":799,"title":{},"body":{"index.html":{}}}],["running",{"_index":820,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":135,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":809,"title":{},"body":{"index.html":{}}}],["see",{"_index":176,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["serve",{"_index":801,"title":{},"body":{"index.html":{}}}],["server",{"_index":798,"title":{},"body":{"index.html":{}}}],["service",{"_index":96,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["services",{"_index":444,"title":{},"body":{"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["services/events.service",{"_index":384,"title":{},"body":{"components/EventsComponent.html":{}}}],["services/user.service",{"_index":94,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["set",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["settings",{"_index":689,"title":{},"body":{"injectables/UserService.html":{}}}],["shortness",{"_index":572,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["show",{"_index":373,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["showmyc",{"_index":25,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["showmycontainer",{"_index":26,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["shownotlogged",{"_index":374,"title":{},"body":{"components/EventsComponent.html":{}}}],["silly",{"_index":588,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["situation",{"_index":540,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["situations",{"_index":528,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["small",{"_index":535,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"injectables/GroupsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"index.html":{}}}],["span')).gettext",{"_index":343,"title":{},"body":{"classes/AppPage.html":{}}}],["speaking",{"_index":530,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["spec\\.ts",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/adminedit/adminedit.component.ts",{"_index":10,"title":{},"body":{"components/AdmineditComponent.html":{},"coverage.html":{}}}],["src/app/adminedit/adminedit.component.ts:36",{"_index":76,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:37",{"_index":81,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:38",{"_index":73,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:40",{"_index":45,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:44",{"_index":79,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:45",{"_index":80,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:49",{"_index":66,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:59",{"_index":65,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:66",{"_index":67,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:69",{"_index":83,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:94",{"_index":51,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts",{"_index":699,"title":{},"body":{"components/UserviewComponent.html":{},"coverage.html":{}}}],["src/app/adminedit/userview/userview.component.ts:11",{"_index":704,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts:13",{"_index":711,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts:15",{"_index":705,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts:19",{"_index":709,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts:23",{"_index":707,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts",{"_index":214,"title":{},"body":{"components/AdminloginComponent.html":{},"coverage.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:19",{"_index":237,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:20",{"_index":234,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:25",{"_index":235,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:26",{"_index":238,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:28",{"_index":225,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:32",{"_index":236,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:45",{"_index":232,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:61",{"_index":230,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:91",{"_index":226,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/app",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/events/events.component.ts",{"_index":369,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/events/events.component.ts:18",{"_index":380,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:19",{"_index":381,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:20",{"_index":382,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:41",{"_index":377,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/footer/footer.component.ts",{"_index":430,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":449,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:25",{"_index":462,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":457,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":459,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":463,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":452,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":461,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":456,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:76",{"_index":455,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:98",{"_index":453,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/event.ts",{"_index":360,"title":{},"body":{"interfaces/Event.html":{},"coverage.html":{}}}],["src/app/models/user",{"_index":713,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/models/user.ts",{"_index":658,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":471,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:11",{"_index":476,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:23",{"_index":478,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":479,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:26",{"_index":477,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/notfound.component.ts",{"_index":485,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/questions/questions.component.ts",{"_index":489,"title":{},"body":{"components/QuestionsComponent.html":{},"coverage.html":{}}}],["src/app/questions/questions.component.ts:20",{"_index":494,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":603,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:23",{"_index":620,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":618,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":619,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:28",{"_index":608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:58",{"_index":610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:65",{"_index":616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:68",{"_index":621,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:92",{"_index":609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/services/events.service.ts",{"_index":402,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/app/services/events.service.ts:12",{"_index":412,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:13",{"_index":410,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:14",{"_index":411,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:15",{"_index":409,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:24",{"_index":408,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/groups.service.ts",{"_index":442,"title":{},"body":{"injectables/GroupsService.html":{},"coverage.html":{}}}],["src/app/services/groups.service.ts:8",{"_index":445,"title":{},"body":{"injectables/GroupsService.html":{}}}],["src/app/services/user.service",{"_index":712,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":663,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:16",{"_index":686,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:17",{"_index":684,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:18",{"_index":685,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:22",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:40",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:51",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:61",{"_index":680,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:68",{"_index":681,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:74",{"_index":683,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:80",{"_index":679,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/support",{"_index":637,"title":{},"body":{"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["src/app/tips",{"_index":644,"title":{},"body":{"components/TipsPageComponent.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":416,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":171,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["started",{"_index":792,"title":{"index.html":{}},"body":{}}],["statement",{"_index":259,"title":{},"body":{"components/AdminloginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{}}}],["statements",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":127,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["stored",{"_index":814,"title":{},"body":{"index.html":{}}}],["string",{"_index":74,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"interfaces/Event.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["string,password",{"_index":696,"title":{},"body":{"injectables/UserService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["submit",{"_index":493,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["submitted",{"_index":27,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(res",{"_index":722,"title":{},"body":{"components/UserviewComponent.html":{}}}],["successfully",{"_index":251,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/UserviewComponent.html":{}}}],["support",{"_index":202,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"modules.html":{}}}],["supportgroupscomponent",{"_index":201,"title":{"components/SupportGroupsComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sure",{"_index":718,"title":{},"body":{"components/UserviewComponent.html":{}}}],["svg",{"_index":832,"title":{},"body":{"modules.html":{}}}],["symptoms",{"_index":559,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["table",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":481,"title":{},"body":{"components/NavbarComponent.html":{}}}],["talk",{"_index":536,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["test",{"_index":482,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tests",{"_index":822,"title":{},"body":{"index.html":{}}}],["text",{"_index":71,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["then(res",{"_index":427,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["things",{"_index":516,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["this.cookieservice.deleteall",{"_index":241,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{}}}],["this.cookieservice.get('password",{"_index":691,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookieservice.get('username",{"_index":379,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{},"injectables/UserService.html":{}}}],["this.cookieservice.set('password',`${this.user.password",{"_index":255,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.cookieservice.set('user',`${this.user.id",{"_index":253,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.cookieservice.set('username',`${this.user.username",{"_index":254,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.createadminform",{"_index":106,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.controls",{"_index":131,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('fname')?.value",{"_index":155,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('lname')?.value",{"_index":156,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('password')?.value",{"_index":134,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('username')?.value",{"_index":157,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createuserform",{"_index":624,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.controls",{"_index":625,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('fname')?.value",{"_index":627,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('lname')?.value",{"_index":628,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('password')?.value",{"_index":626,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('username')?.value",{"_index":629,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.error",{"_index":115,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.eventapi.formdata",{"_index":392,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.eventapi.refreshevents",{"_index":388,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.formbuilder.group",{"_index":70,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formdata.password",{"_index":695,"title":{},"body":{"injectables/UserService.html":{}}}],["this.formdata.username",{"_index":694,"title":{},"body":{"injectables/UserService.html":{}}}],["this.handleerror(err",{"_index":263,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.handleerror(error",{"_index":146,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["this.header",{"_index":423,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.http.delete(`${this.url}/api/users",{"_index":697,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.url}/api/gathering",{"_index":425,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.get(`${this.url}/api/users",{"_index":693,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.url}/api/admin/${username}/${password",{"_index":692,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.url}/api/users",{"_index":690,"title":{},"body":{"injectables/UserService.html":{}}}],["this.list",{"_index":428,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.loginservice.formdata",{"_index":246,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.loginservice.getusersbyname().then",{"_index":249,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.reseterror",{"_index":144,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["this.resetform",{"_index":242,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/adminedit",{"_index":261,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":636,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/support",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.show",{"_index":389,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.shownotlogged",{"_index":391,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.submitted",{"_index":148,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastr.error('admin",{"_index":163,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.toastr.error('user",{"_index":634,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.toastr.info('admin",{"_index":165,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.toastr.info('get",{"_index":250,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.toastr.info('user",{"_index":635,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.toastr.warning('deleted",{"_index":723,"title":{},"body":{"components/UserviewComponent.html":{}}}],["this.url",{"_index":420,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.user",{"_index":142,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.user.unshift(user",{"_index":168,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userapi.createadmin(newusers",{"_index":160,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.userapi.createuser(newusers",{"_index":630,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userapi.deleteuser(username,password",{"_index":721,"title":{},"body":{"components/UserviewComponent.html":{}}}],["this.userapi.formdata",{"_index":715,"title":{},"body":{"components/UserviewComponent.html":{}}}],["this.userapi.getusers",{"_index":141,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userapi.refreshlist",{"_index":714,"title":{},"body":{"components/UserviewComponent.html":{}}}],["thoughts",{"_index":585,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["through",{"_index":55,"title":{},"body":{"components/AdmineditComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{}}}],["tips",{"_index":205,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["tipspage",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tipspagecomponent",{"_index":204,"title":{"components/TipsPageComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["title",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Event.html":{}}}],["title:string",{"_index":365,"title":{},"body":{"interfaces/Event.html":{}}}],["titledatesorganizer",{"_index":394,"title":{},"body":{"components/EventsComponent.html":{}}}],["tittle",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["toastr",{"_index":38,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserviewComponent.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":39,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserviewComponent.html":{}}}],["toastrservice,public",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{}}}],["topromise",{"_index":426,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["tostrmodule",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["traumatic",{"_index":552,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["travelling",{"_index":548,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["true",{"_index":149,"title":{},"body":{"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":589,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["tslib",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"interfaces/Event.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":710,"title":{},"body":{"components/UserviewComponent.html":{}}}],["u.id",{"_index":727,"title":{},"body":{"components/UserviewComponent.html":{}}}],["u.isadmin",{"_index":729,"title":{},"body":{"components/UserviewComponent.html":{}}}],["u.username",{"_index":728,"title":{},"body":{"components/UserviewComponent.html":{}}}],["undefined",{"_index":75,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["unit",{"_index":821,"title":{},"body":{"index.html":{}}}],["unwanted/intrusive",{"_index":584,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["upsetting",{"_index":562,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["url",{"_index":406,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["use",{"_index":56,"title":{},"body":{"components/AdmineditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["used",{"_index":454,"title":{},"body":{"components/LoginComponent.html":{}}}],["user",{"_index":88,"title":{"interfaces/User.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Event.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"coverage.html":{}}}],["userapi",{"_index":42,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{},"components/UserviewComponent.html":{}}}],["userapi:userservice",{"_index":105,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{},"components/UserviewComponent.html":{}}}],["userform",{"_index":223,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["username",{"_index":109,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["username:string",{"_index":661,"title":{},"body":{"interfaces/User.html":{}}}],["users",{"_index":54,"title":{},"body":{"components/AdmineditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["userservice",{"_index":43,"title":{"injectables/UserService.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userview",{"_index":208,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["userview.component.css",{"_index":700,"title":{},"body":{"components/UserviewComponent.html":{}}}],["userview.component.html",{"_index":701,"title":{},"body":{"components/UserviewComponent.html":{}}}],["userviewcomponent",{"_index":207,"title":{"components/UserviewComponent.html":{}},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":143,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["using",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["utilized",{"_index":260,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["validates",{"_index":615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validation",{"_index":460,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators",{"_index":90,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":111,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":72,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validtors",{"_index":465,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":153,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":180,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["variable",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":842,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":796,"title":{},"body":{"index.html":{}}}],["via",{"_index":824,"title":{},"body":{"index.html":{}}}],["view",{"_index":352,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["void",{"_index":62,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["war",{"_index":553,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["washing",{"_index":600,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["work",{"_index":533,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["worrying",{"_index":513,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["x1f3e0;home",{"_index":480,"title":{},"body":{"components/NavbarComponent.html":{}}}],["yes",{"_index":233,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["zone.js",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdmineditComponent.html":{"url":"components/AdmineditComponent.html","title":"component - AdmineditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdmineditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminedit/adminedit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adminedit\n            \n\n            \n                styleUrls\n                ./adminedit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./adminedit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreateAdminForm\n                            \n                            \n                                error\n                            \n                            \n                                showMyC\n                            \n                            \n                                showMyContainer\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateAdmin\n                            \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, toastr: ToastrService, router: Router, CookieService: CookieService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminedit/adminedit.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateAdmin\n                        \n                        \n                    \n                \n            \n            \n                \nCreateAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:94\n                \n            \n\n\n            \n                \n                    method that gets users through the use of promises to accept response from api\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateAdminForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showMyC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showMyContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/adminedit/adminedit.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; // imports component OnInit\n\n/**\n * app admin component.\n */\n\n//import { Component, OnInit } from '@angular/core';\nimport User from '../models/User';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'app-adminedit',\n  templateUrl: './adminedit.component.html',\n  styleUrls: ['./adminedit.component.css']\n})\nexport class AdmineditComponent implements OnInit {\n\n// constructor with no parameters\n\n/**\n * @ignore\n */\n\n\n  User: User[] = [];\n  error: string | undefined; // error handling implementation\n  submitted = false;\n  CreateAdminForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n  constructor(private formBuilder: FormBuilder, private toastr: ToastrService,\n    private router: Router,  private CookieService: CookieService,\n     private userApi:UserService) { }\n     showMyC: boolean = false;\n     showMyContainer: boolean = false;\n\n\n\n  ngOnInit(): void {\n    this.CreateAdminForm = this.formBuilder.group({\n      fName: ['', Validators.required],\n      lName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n\n  });\n  }\n\n    handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n      } else {\n        this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n      }\n    }\n    resetError() {\n      this.error = undefined; //clears error message\n    }\n    get f() { return this.CreateAdminForm.controls; }\n\n  //  const pass= this.CreateAdminForm.get('password')?.value;\n  //  const salt =  bcrypt.genSaltSync(10);\n  //  console.log(salt)\n  // const  passhash = bcrypt.hashSync(pass, salt);\n\n\n  /**\n   * method that gets users through the use of promises to accept response from api\n   */\n\n    // getUsers() {\n    //   return this.userApi.getUsers()\n    //     .then(\n    //       User => {\n    //         this.User = User; //uses promises to accept the api response\n    //         this.resetError(); //resets error message\n    //       },\n    //       error => {\n    //         this.handleError(error); //handles error\n    //       }\n    //     );\n    // }\n\n    CreateAdmin() {\n      this.submitted = true;\n      /**\n       * User form containing property values from API\n       */\n      const newUsers: User = {\n        fName: this.CreateAdminForm.get('fName')?.value,\n        lName: this.CreateAdminForm.get('lName')?.value,\n        username: this.CreateAdminForm.get('username')?.value,\n        password: this.CreateAdminForm.get('password')?.value,\n        isAdmin: true,\n\n      };\n  console.log(newUsers)\n\n      this.userApi.CreateAdmin(newUsers) // creates new user\n        .then(\n          User => {\n            if (this.error) {\n\n             this.toastr.error('Admin Register', 'Error');\n\n\n            } else {\n              this.toastr.info('Admin Created', 'registered');\n\n              this.User.unshift(User); //inserts new element at start of array\n              this.resetError(); //clears error message\n            }\n          },\n          error => this.handleError(error) //handles error message\n        );\n\n\n  }\n\n  }\n\n    \n\n    \n        \n\n\n\n    \n\n                \n                    Add new Admin\n        \n                    \n\n                    \n\n\n                           Add an admin\n\n\n                        First Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        Last Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        Admin Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                         password:\n                            \n                                \n                                    password is required\n                                \n                        \n\n\n                        \n                            Register\n                    \n                    \n                        {{ error }}\n                    \n                \n                See all users\n              \n                \n              \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./adminedit.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Add new Admin                                                                           Add an admin                        First Name:                                                                                                Name is required                                                                                Last Name:                                                                                                Name is required                                                                                Admin Name:                                                                                                Name is required                                                                                 password:                                                                                                password is required                                                                                                            Register                                                                {{ error }}                                                    See all users                                                                                            '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdmineditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminloginComponent.html":{"url":"components/AdminloginComponent.html","title":"component - AdminloginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminloginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminlogin/adminlogin.component.ts\n\n\n    \n        Description\n    \n    \n        app admin login component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adminlogin\n            \n\n            \n                styleUrls\n                ./adminlogin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./adminlogin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Public\n                                LoginService\n                            \n                            \n                                user\n                            \n                            \n                                UserForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                Login\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, toastr: ToastrService, LoginService: UserService, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminlogin/adminlogin.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LoginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminlogin/adminlogin.component.ts:91\n                \n            \n\n\n            \n                \n                    this is an HTTP error handling method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Login\n                        \n                        \n                    \n                \n            \n            \n                \nLogin(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminlogin/adminlogin.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm(form?: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminlogin/adminlogin.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:25\n                            \n                        \n\n                \n                    \n                        error message form for user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            LoginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, NgForm } from '@angular/forms';\nimport User from '../models/User';\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n/**\n * app admin login component.\n */\n@Component({\n  selector: 'app-adminlogin',\n  templateUrl: './adminlogin.component.html',\n  styleUrls: ['./adminlogin.component.css']\n})\nexport class AdminloginComponent implements OnInit {\n  user : User;\n  error: string | undefined;\n\n  /**\n   * error message form for user.\n   */\n  errorMessage:string;\n  UserForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService,\n    public LoginService:UserService,\n    private cookieService: CookieService,) { }\n    /**\n     * @ignore\n     */\n  ngOnInit(): void {\n    this.cookieService.deleteAll();\n    this.resetForm();\n  }\n  /**\n   *\n   * @param form \n   */\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.reset();\n    this.LoginService.formData = {\n      id: 0,\n      fName: '',\n      lName: '',\n      username: '',\n      password:'',\n      isAdmin: false,\n    }\n  }\n  /**\n   *\n   * @param f\n   */\n  Login(f: NgForm) {\n    return  this.LoginService.getUsersByName().then(\n         user => {\n           this.toastr.info('Get By id successfully', 'Get user by id');\n           this.user = user;\n           console.log(user);\n           this.cookieService.set('User',`${this.user.id}`);\n           this.cookieService.set('username',`${this.user.username}`);\n           this.cookieService.set('password',`${this.user.password}`);\n           console.log(`${this.user.password}`)\n        \n           console.log(`${this.user.username}`)\n\n          /**\n           * Conditional statement utilized.\n           */\n   \n       this.router.navigate(['/adminedit']);\n           \n\n         },\n         err => {\n          this.handleError(err) \n         }\n       )\n     }\n     /**\n      * this is an HTTP error handling method.\n      * @param error\n      */\n     handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n      } else {\n        this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n      }\n    }\n\n}\n\n    \n\n    \n        \n\n    \n     \n            \n  \n\n  \n              \n                \n                 \n                Admin name\n  \n                \n                  password\n                \n  \n  \n                \n  \n                AdminLogin\n                \n                      {{errorMessage}}  \n                  \n                \n                \n\n  \n  \n              \n            \n          \n        \n        \n    \n    \n    \n  \n    \n\n    \n                \n                    ./adminlogin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Admin name                                    password                                                      AdminLogin                                      {{errorMessage}}                                                                                                                          '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminloginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        app-root component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Calm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * app-root component\n */\n @Component({\n   selector: 'app-root',\n   templateUrl: './app.component.html',\n   styleUrls: ['./app.component.css']\n })\n /**\n  * Application tittle set here\n  */\n export class AppComponent {\n   title = 'Calm';\n }\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdmineditComponent\n\nAdmineditComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdmineditComponent->AppModule\n\n\n\n\n\nAdminloginComponent\n\nAdminloginComponent\n\nAppModule -->\n\nAdminloginComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nAppModule -->\n\nQuestionsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSupportGroupsComponent\n\nSupportGroupsComponent\n\nAppModule -->\n\nSupportGroupsComponent->AppModule\n\n\n\n\n\nTipsPageComponent\n\nTipsPageComponent\n\nAppModule -->\n\nTipsPageComponent->AppModule\n\n\n\n\n\nUserviewComponent\n\nUserviewComponent\n\nAppModule -->\n\nUserviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdmineditComponent\n                        \n                        \n                            AdminloginComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            EventsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotfoundComponent\n                        \n                        \n                            QuestionsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            SupportGroupsComponent\n                        \n                        \n                            TipsPageComponent\n                        \n                        \n                            UserviewComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\n/**\n * imports of all components from each individual component\n */\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TipsPageComponent } from './tips-page/tips-page.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n/**\n * imports HTTP clientmodule and reactive form.\n */\nimport { HttpClientModule, HttpRequest } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n/**\n * imports a cookieservice and a tostrmodule.\n */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {ToastrModule} from 'ngx-toastr';\nimport {CookieService} from 'ngx-cookie-service';\nimport { NotfoundComponent } from './notfound.component';\nimport { EventsComponent } from './events/events.component';\nimport { SupportGroupsComponent } from './support-groups/support-groups.component';\nimport { QuestionsComponent } from './questions/questions.component';\n\n\n/**\n * ngModule that declares all components\n */\n\nimport { AdminloginComponent } from './adminlogin/adminlogin.component';\nimport { AdmineditComponent } from './adminedit/adminedit.component';\nimport { UserService } from './services/user.service';\nimport { UserviewComponent } from './adminedit/userview/userview.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    TipsPageComponent,\n    LoginComponent,\n    RegisterComponent,\n    NotfoundComponent,\n    EventsComponent,\n    SupportGroupsComponent,\n    QuestionsComponent,\n    AdminloginComponent,\n    AdmineditComponent,\n    UserviewComponent\n  ],\n  imports: [\n\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forRoot([])\n  ],\n  providers: [CookieService, UserService, ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n            \n                Description\n            \n            \n                export class Apppage that returns the baseUrl as Promise\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n                    gets tittle method that returns an element.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor'; // imports from a protractor\n/**\n * export class Apppage that returns the baseUrl as Promise\n */\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n  /**\n   *  gets tittle method that returns an element.\n   */\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'; //imports from ngmodule\nimport { Routes, RouterModule} from '@angular/router'; // imports angular routing module\nimport { TipsPageComponent } from './tips-page/tips-page.component'; // imports from tipspage component\nimport { LoginComponent } from './login/login.component'; // imports from login component\nimport { RegisterComponent } from './register/register.component'; // imports from register component\nimport { NotfoundComponent } from './notfound.component'; // imports from the Notfound component.\nimport { EventsComponent } from './events/events.component'; // imports event component\nimport { SupportGroupsComponent } from './support-groups/support-groups.component';\nimport { QuestionsComponent } from './questions/questions.component'; // imports questions component\n\n\n/**\n * Routing paths for all components on the user view page.\n */\n\nimport { AdminloginComponent } from './adminlogin/adminlogin.component';\nimport { AdmineditComponent } from './adminedit/adminedit.component';\n/**\n * routing paths for each component.\n */\nconst routes: Routes = [\n  { path: '', component: TipsPageComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'adminlogin', component: AdminloginComponent },\n  { path: 'adminedit', component: AdmineditComponent },\n  { path: 'events', component: EventsComponent },\n  { path: 'questions', component: QuestionsComponent },\n  { path: 'support-groups', component: SupportGroupsComponent },\n  { path: 'notfound', component: NotfoundComponent },\n];\n/**\n * imports and exports of Router\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Event.html":{"url":"interfaces/Event.html","title":"interface - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attendees\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        occurrenceData\n                                \n                                \n                                        organizer\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attendees\n                                    \n                                \n                                \n                                    \n                                        attendees:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occurrenceData\n                                    \n                                \n                                \n                                    \n                                        occurrenceData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizer\n                                    \n                                \n                                \n                                    \n                                        organizer:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import User from '../models/User';\n\nexport default interface Event {\n    id?: number;\n    title:string;  \n    occurrenceData:string;  \n    organizer:User[];  \n    attendees:string;  \n \n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/events.component.ts\n\n\n    \n        Description\n    \n    \n        Event component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                show\n                            \n                            \n                                shownotlogged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                populateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateForm\n                        \n                        \n                    \n                \n            \n            \n                \npopulateForm(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/events.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownotlogged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EventsService } from '../services/events.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\n/**\n * Event component\n */\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor( public eventApi:EventsService,private cookieService: CookieService,private toastr: ToastrService) { }\n  data=this.cookieService.get('username');\n   show: boolean = false;\n   shownotlogged: boolean = false;\n  /**\n * @ignore\n */\n  ngOnInit(): void {\n    this.eventApi.refreshevents();\n    this.show = false;\n    if(this.data != \"\"){\n this.show = true;\n    }\n    else\n    this.show = false;\n\n    this.shownotlogged = true;\n    if(this.data != \"\"){\n this.shownotlogged = false;\n    }\n    else\n    this.shownotlogged = true;\n  }\n\n  populateForm(e: Event) {\n    this.eventApi.formData = Object.assign({}, e);\n  }\n}\n\n    \n\n    \n        \n\n    events\n        TitleDatesOrganizer\n          \n            {{e.title}}\n            {{e.occurrenceData}}  \n            {{e.organizer.username}}\n           \n          \n          \n          \n      \n        \n        \n            Show this only if \"show\" is true\n          \n          \n           Please login to attend an event\n          \n\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    events        TitleDatesOrganizer                      {{e.title}}            {{e.occurrenceData}}              {{e.organizer.username}}                                                                           Show this only if \"show\" is true                               Please login to attend an event              '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/events.service.ts\n        \n\n            \n                Description\n            \n            \n                injectable method that exports event service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formData\n                            \n                            \n                                header\n                            \n                            \n                                list\n                            \n                            \n                                Url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshevents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshevents\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshevents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/events.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Event[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { environment } from 'src/environments/environment';\n/**\n * injectable method that exports event service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  Url: string;\n  header: any;\n  list: Event[];\n  formData:Event;\n/**\n * @ignore\n */\n  constructor(private http: HttpClient,private CookieService: CookieService) { \n  this.Url = environment.ApiBaseUrl;\n  const headerSettings: { [name: string]: string | string[]; } = {};\n  this.header = new HttpHeaders(headerSettings);\n  }\n  refreshevents(){\n    this.http.get(`${this.Url}/api/Gathering`)\n    .toPromise()\n    .then(res => this.list = res as Event[]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * Footer Component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor() { }\n/**\n * @ignore\n */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Helpline : 9876543210\n    C.A.L.M © Copyright 2020. All rights reserved.\n\n  \n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Helpline : 9876543210    C.A.L.M © Copyright 2020. All rights reserved.  '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupsService.html":{"url":"injectables/GroupsService.html","title":"injectable - GroupsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GroupsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/groups.service.ts\n        \n\n            \n                Description\n            \n            \n                injectable method that exports Group services.\n\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/groups.service.ts:8\n                            \n                        \n\n                \n                    \n                            constructor that can contain any given parameter. \n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n/**\n * injectable method that exports Group services.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupsService {\n/**\n * constructor that can contain any given parameter. \n */\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        login component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Public\n                                LoginService\n                            \n                            \n                                user\n                            \n                            \n                                UserForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                Login\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, toastr: ToastrService, LoginService: UserService, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LoginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:98\n                \n            \n\n\n            \n                \n                    used as a method for error handling\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Login\n                        \n                        \n                    \n                \n            \n            \n                \nLogin(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:76\n                \n            \n\n\n            \n                \n                    this is a method that gets users with the use of cookie services\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm(form?: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:60\n                \n            \n\n\n            \n                \n                    user form that declares its properties.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                        exception login error handling\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        exception handling with error validation message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            LoginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, NgForm } from '@angular/forms'; // imports frombuilder, validtors & ngform\nimport User from '../models/User'; // imports user from models.\n/**\n * imports multiple services for user login component.\n */\nimport { ToastrService } from 'ngx-toastr'; // imports toastr\nimport { CookieService } from 'ngx-cookie-service'; // imports cookie services from ngx cookie\nimport { Router } from '@angular/router'; // imports router\nimport { UserService } from '../services/user.service'; // imports user services\nimport { HttpErrorResponse } from '@angular/common/http'; // imports an httperror response.\n\n\n/**\n * login component\n */\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user : User;\n\n/**\n * exception login error handling\n */\n\n  error: string | undefined;\n/**\n * exception handling with error validation message\n */\n  errorMessage:string;\n  UserForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n\n/**\n *\n * @param formBuilder\n */\n  constructor( private formBuilder: FormBuilder, private router: Router,\n    private toastr: ToastrService,public LoginService:UserService,\n    private cookieService: CookieService) { }\n\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.cookieService.deleteAll();\n    this.resetForm();\n  }\n  /**\n   * user form that declares its properties.\n   * @param form\n   */\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.reset();\n    this.LoginService.formData = {\n      id: 0,\n      fName: '',\n      lName: '',\n      username: '',\n      password:'',\n      isAdmin: false\n    }\n  }\n  /**\n   * this is a method that gets users with the use of cookie services\n   * @param f\n   */\n  Login(f: NgForm) {\n    return  this.LoginService.getUsersByName().then(\n         user => {\n           this.toastr.info('Get By Id successfully', 'Get user by id');\n           this.user = user;\n           console.log(user);\n           this.cookieService.set('User',`${this.user.id}`);\n           this.cookieService.set('username',`${this.user.username}`);\n\n       this.router.navigate(['/support-groups']);\n\n\n         },\n         err => {\n          this.handleError(err) \n         }\n       )\n     }\n     /**\n      * used as a method for error handling\n      * @param error\n      */\n     handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n      } else {\n        this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n      }\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n            \n\n\n\n              \n\n\n                username\n\n                \n                  password\n                \n\n\n\n                \n\n                Login\n                \n                      {{errorMessage}} \n\n                \n                \n\n\n\n\n\n\n              \n            \n          \n\n        \n    \n    \n    \n\n    ## this form is an html form for user login view page. \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              username                                  password                                                Login                                      {{errorMessage}}                                                                                             ## this form is an html form for user login view page. '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        navbar component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:23\n                            \n                        \n\n                \n                    \n                        navbar containing cookie service set to be a false value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; //imports component OnInit form\nimport { CookieService } from 'ngx-cookie-service'; // imports cookie service from  ngx\n/**\n * navbar component\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n// a constructor with a cookie service\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n\n\n    /**\n     * navbar containing cookie service set to be a false value.\n     */\n\n    data=this.cookieService.get('username');\n\n    show: boolean = false;\n   ngOnInit(): void {\n    // A conditional statement.\n     this.show = false;\n    if(this.data != \"\"){\n this.show = true;\n    }\n    else\n    this.show = false;\n   }\n\n}\n\n    \n\n    \n        \n    \n\n        &#x1F3E0;Home\n        \n            \n        \n\n    \n    \n        \n            Take the test\n        \n        \n            Events\n        \n        \n            Support-Groups\n        \n     \n        \n            Register\n        \n        \n            Login\n        \n     \n        \n            Logout\n        \n        \n            Admin\n        \n       \n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠Home                                                        Take the test                            Events                            Support-Groups                                 Register                            Login                                 Logout                            Admin               '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notfound.component.ts\n\n\n    \n        Description\n    \n    \n        app-notfound component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n            \n                styleUrls\n                ./notfound.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * app-notfound component\n */\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor() { }\n/**\n * @ignore\n */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Page Not Found\n\n    \n\n    \n                \n                    ./notfound.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page Not Found'\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionsComponent.html":{"url":"components/QuestionsComponent.html","title":"component - QuestionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/questions/questions.component.ts\n\n\n    \n        Description\n    \n    \n        Question component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-questions\n            \n\n            \n                styleUrls\n                ./questions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./questions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Submit\n                        \n                        \n                    \n                \n            \n            \n                \nSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/questions.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * Question component\n */\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\nexport class QuestionsComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor() { }\n/**\n * @ignore\n */\n  ngOnInit(): void {\n  }\n  Submit() {\n/**\n * for loop that gets the user input element by id which outputs a value.\n */\n      document.getElementById('p').innerText= (\"Recommended groups: \")\n    // for loop statement that iterates through questions presented to the client based on choices.\n     for(let i=1; i document.getElementById(`${i}`);\n     if (element.checked) {  // conditional statement\n      document.getElementById('p').innerText += element.value;\n      }\n     }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n        \n    \n         \n         \n            \n        \n      \n        Do you feel anxious on most days, worrying about\n            a lot of different things,\n             for a period of 6 months or more?\n                \n\n             \n                \n        \n      \n        Do you have an intense fear of being criticized\n            or embarrassed/humiliated, even in everyday situations (ie. public  speaking, eating in public,\n             being assertive at work or making small talk)?\n               \n\n            \n                \n        \n     \n        Do you feel fearful about a particular object or\n             situation and may go great lengths to avoid it? This may include having an injection,\n             travelling on a plane, etc?\n               \n\n            \n                \n             \n             \n        Have you experienced a traumatic event (war, assault, accident, disaster, etc) that has resulted  in you exhibiting symptoms that can  include difficulty relaxing, upsetting dreams or flashbacks of the event,  and avoidance of anything related\n             to the event for a period of a month or longer?\n               \n\n            \n                \n             \n              \n        Do you frequently experience shortness of breath, chest pain, dizziness  and excessive perspiration,\n             otherwise known as panic attacks?\n               \n\n            \n                \n             \n             \n        Do you have ongoing unwanted/intrusive thoughts\n             and fears  that you know are silly but try to relieve the anxiety by\n             carrying out certain behaviors or rituals?  For example, fear of germs\n             can lead to constant washing of hands and clothes.\n               \n\n\n        Submit\n\n\n      \n      \n      \n    \n\n\n \n\n\n\n\n    \n\n    \n                \n                    ./questions.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    Do you feel anxious on most days, worrying about            a lot of different things,             for a period of 6 months or more?                                                                   Do you have an intense fear of being criticized            or embarrassed/humiliated, even in everyday situations (ie. public  speaking, eating in public,             being assertive at work or making small talk)?                                                                Do you feel fearful about a particular object or             situation and may go great lengths to avoid it? This may include having an injection,             travelling on a plane, etc?                                                                             Have you experienced a traumatic event (war, assault, accident, disaster, etc) that has resulted  in you exhibiting symptoms that can  include difficulty relaxing, upsetting dreams or flashbacks of the event,  and avoidance of anything related             to the event for a period of a month or longer?                                                                              Do you frequently experience shortness of breath, chest pain, dizziness  and excessive perspiration,             otherwise known as panic attacks?                                                                             Do you have ongoing unwanted/intrusive thoughts             and fears  that you know are silly but try to relieve the anxiety by             carrying out certain behaviors or rituals?  For example, fear of germs             can lead to constant washing of hands and clothes.                       Submit                       '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        register component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreateUserForm\n                            \n                            \n                                error\n                            \n                            \n                                submitted\n                            \n                            \n                                User\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateUser\n                            \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, toastr: ToastrService, router: Router, CookieService: CookieService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:28\n                            \n                        \n\n                \n                    \n                            constructor form with its parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateUser\n                        \n                        \n                    \n                \n            \n            \n                \nCreateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:92\n                \n            \n\n\n            \n                \n                    method that gets users through the use of promises to accept response from api\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:58\n                \n            \n\n\n            \n                \n                    Asserts errorr handling in the register form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:44\n                \n            \n\n\n            \n                \n                    create user form that validates user properties\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:68\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; // import from OnInit component.\nimport User from '../models/User'; // imports from user model\nimport { Router } from '@angular/router'; // imports router\nimport { FormBuilder, Validators } from '@angular/forms'; // imports formbuilder\nimport { UserService } from '../services/user.service'; // imports from user services\nimport { ToastrService } from 'ngx-toastr'; // imports from ngx toastr\nimport { CookieService } from 'ngx-cookie-service'; // imports from ngx cookie service\nimport { HttpErrorResponse } from '@angular/common/http'; // imports Http error response\n\n/**\n * register component\n */\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n/**\n * exports Register component.\n */\nexport class RegisterComponent implements OnInit {\n  User: User[] = [];\n  error: string | undefined; // error handling implementation\n  submitted = false;\n  CreateUserForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n\n  /**\n   * constructor form with its parameters\n   * @param formBuilder\n   * @param toastr\n   * @param router\n   * @param CookieService\n   * @param userApi\n   */\n  constructor(private formBuilder: FormBuilder, private toastr: ToastrService,\n     private router: Router,  private CookieService: CookieService,\n      private userApi:UserService) { }\n/**\n * create user form that validates user properties\n */\n  ngOnInit(): void {\n    this.CookieService.deleteAll();  // cookie service injected.\n    this.CreateUserForm = this.formBuilder.group({\n      fName: ['', Validators.required],\n      lName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n\n  });\n  }\n  /**\n   * Asserts errorr handling in the register form.\n   * @param error\n   */\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n    } else {\n      this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n    }\n  }\n  resetError() {\n    this.error = undefined; //clears error message\n  }\n  get f() { return this.CreateUserForm.controls; }\n\n//  const pass= this.CreateUserForm.get('Password')?.value;\n//  const salt =  bcrypt.genSaltSync(10);\n//  console.log(salt)\n// const  passhash = bcrypt.hashSync(pass, salt);\n\n\n/**\n * method that gets users through the use of promises to accept response from api\n */\n\n  // getUsers() {\n  //   return this.userApi.getUsers()\n  //     .then(\n  //       User => {\n  //         this.User = User; //uses promises to accept the api response\n  //         this.resetError(); //resets error message\n  //       },\n  //       error => {\n  //         this.handleError(error); //handles error\n  //       }\n  //     );\n  // }\n  CreateUser() {\n    this.submitted = true;\n    /**\n     * User form containing property values from API\n     */\n    const newUsers: User = {\n\n\n      fName: this.CreateUserForm.get('fName')?.value, // gets first name for new user.\n      lName: this.CreateUserForm.get('lName')?.value, // gets Last name for new user\n      username: this.CreateUserForm.get('username')?.value, // gets username for new user\n      password: this.CreateUserForm.get('password')?.value,   // gets password for new user\n\n\n\n\n  isAdmin: false\n\n    };\nconsole.log(newUsers)\n\n    this.userApi.CreateUser(newUsers) // creates new user\n      .then(\n        User => {\n          if (this.error) { //conditinal statement that checks for errors in register component.\n\n           this.toastr.error('User Register', 'Error');\n\n\n          } else {\n            this.toastr.info('User Created', 'registered');\n            this.router.navigate(['/login']);\n            this.User.unshift(User); //inserts new element at start of array\n            this.resetError(); //clears error message\n          }\n        },\n        error => this.handleError(error) //handles error message\n      );\n\n\n}\n}\n\n    \n\n    \n        \n\n\n    \n\n                \n\n                    \n\n                        Register\n\n\n                        First Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        Last Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        User Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                         password:\n                            \n                                \n                                    password is required\n                                \n                        \n\n\n                        \n                            Register\n                    \n                    \n                        {{ error }}\n                    \n\n\n        \n    \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Register                        First Name:                                                                                                Name is required                                                                                Last Name:                                                                                                Name is required                                                                                User Name:                                                                                                Name is required                                                                                 password:                                                                                                password is required                                                                                                            Register                                                                {{ error }}                                '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportGroupsComponent.html":{"url":"components/SupportGroupsComponent.html","title":"component - SupportGroupsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SupportGroupsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/support-groups/support-groups.component.ts\n\n\n    \n        Description\n    \n    \n        Support group component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support-groups\n            \n\n            \n                styleUrls\n                ./support-groups.component.css\n            \n\n\n\n            \n                templateUrl\n                ./support-groups.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from '../services/user.service';\n\n/**\n * Support group component\n */\n@Component({\n  selector: 'app-support-groups',\n  templateUrl: './support-groups.component.html',\n  styleUrls: ['./support-groups.component.css']\n})\nexport class SupportGroupsComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor(public LoginService:UserService,\n    private cookieService: CookieService) { }\n   data=this.cookieService.get('username');\n   show: boolean = false;\n\n/**\n * @ignore\n */\n  ngOnInit(): void {\n\n    this.show = false;\n   if(this.data != \"\"){\nthis.show = true;\n   }\n   else\n   this.show = false;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        Show this only if \"show\" is true\n      \n\n\n\n \n\n\n    \n\n    \n                \n                    ./support-groups.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Show this only if \"show\" is true       '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportGroupsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TipsPageComponent.html":{"url":"components/TipsPageComponent.html","title":"component - TipsPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TipsPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tips-page/tips-page.component.ts\n\n\n    \n        Description\n    \n    \n        Tips-page Component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tips-page\n            \n\n            \n                styleUrls\n                ./tips-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tips-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tips-page/tips-page.component.ts:14\n                            \n                        \n\n                \n                    \n                            constructor that contains a cookie service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tips-page/tips-page.component.ts:24\n                \n            \n\n\n            \n                \n                    Method that returns Nothiing.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; // imports component, onInit\n\nimport { CookieService } from 'ngx-cookie-service'; // importing cookie service as ngx\n\n/**\n * Tips-page Component.\n */\n\n@Component({\n  selector: 'app-tips-page',\n  templateUrl: './tips-page.component.html',\n  styleUrls: ['./tips-page.component.css']\n})\nexport class TipsPageComponent implements OnInit {\n\n/**\n * constructor that contains a cookie service\n */\n  constructor( private cookieService: CookieService) { }\n\n/**\n * Method that returns Nothiing.\n */\n  ngOnInit(): void {\n    this.cookieService.deleteAll();\n  }\n\n}\n\n    \n\n    \n        \n\n  C.A.L.M(Center for Anxiety and Lifestyle Mediation)\n  \n  \n    \n      \n        \n            \n            \n              \n              \n              \n              \n              \n            \n        \n            \n            \n        \n              \n                \n                \n                \n                 \n                \n              \n        \n              \n                \n                \n                   \n                \n              \n            \n              \n                \n                \n                    \n                \n              \n              \n                \n                \n                  \n                 \n                \n              \n        \n              \n                \n                \n                   \n                \n              \n            \n          \n          \n            \n        \n            \n            \n              \n              Previous\n            \n            \n              \n              Next\n            \n          \n\n\n      \n      \n    \n  \n  \n\n\n\n    \n\n    \n                \n                    ./tips-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  C.A.L.M(Center for Anxiety and Lifestyle Mediationrevious                                                    Next                                          '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TipsPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/User.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fName\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        isAdmin\n                                \n                                \n                                        lName\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fName\n                                    \n                                \n                                \n                                    \n                                        fName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lName\n                                    \n                                \n                                \n                                    \n                                        lName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface User {\n    id?: number;\n    lName:string;  \n    fName:string;  \n    username:string;  \n    password:string;  \n   isAdmin: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                root injection provided and exported user services\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formData\n                            \n                            \n                                header\n                            \n                            \n                                list\n                            \n                            \n                                Url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateAdmin\n                            \n                            \n                                CreateUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                getUsersByName\n                            \n                            \n                                refreshList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, CookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateAdmin\n                        \n                        \n                    \n                \n            \n            \n                \nCreateAdmin(User: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:51\n                \n            \n\n\n            \n                \n                    admin method creation with its parameters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateUser\n                        \n                        \n                    \n                \n            \n            \n                \nCreateUser(User: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:40\n                \n            \n\n\n            \n                \n                    creats users using the api url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:61\n                \n            \n\n\n            \n                \n                    gets users from using api url.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsersByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsersByName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:68\n                \n            \n\n\n            \n                \n                    this method gets users by their given name respectively.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshList\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:22\n                            \n                        \n\n                \n                    \n                        user form with a private Http client.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders,HttpRequest, } from '@angular/common/http';\nimport User from '../models/User';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n/**\n * root injection provided and exported user services\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  Url: string;\n  header: any;\n  list: User[];\n/**\n * user form with a private Http client.\n */\n  formData:User;\n  constructor(private http: HttpClient,private CookieService: CookieService) {\n\n     // header settings using string.\n\n  // header settings using string.\n\n\n    this.Url = environment.ApiBaseUrl;\n    const headerSettings: { [name: string]: string | string[]; } = {};\n    this.header = new HttpHeaders(headerSettings);\n\n  }\n\n  /**\n * creats users using the api url\n * @param User\n */\n  CreateUser(User: User) {\n    return this.http.post(`${this.Url}/api/Users/`, User)\n    .toPromise();\n  }\n\n\n  /**\n   * admin method creation with its parameters.\n   * @param User\n   */\n\n  CreateAdmin(User: User) {\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.post(`${this.Url}/api/Admin/${username}/${password}`, User)\n    .toPromise();\n  }\n\n  /** gets users from using api url.\n   * @param User\n   */\n  getUsers() {\n    return this.http.get(`${this.Url}/api/Users/`)\n      .toPromise();\n  }\n  /**\n   * this method gets users by their given name respectively.\n   */\n  getUsersByName(){\n    return this.http.get(`${this.Url}/api/Users/`+ this.formData.username +\"/\"+ this.formData.password)\n    .toPromise();\n  }\n\n\n  refreshList(){\n    this.http.get(`${this.Url}/api/Users`)\n    .toPromise()\n    .then(res => this.list = res as User[]);\n  }\n\n  deleteUser(username: string,password: string) {\n    return this.http.delete(`${this.Url}/api/Users/`+ username +\"/\"+ password, { headers: this.header });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserviewComponent.html":{"url":"components/UserviewComponent.html","title":"component - UserviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminedit/userview/userview.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-userview\n            \n\n            \n                styleUrls\n                ./userview.component.css\n            \n\n\n\n            \n                templateUrl\n                ./userview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                populateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userApi: UserService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminedit/userview/userview.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/userview/userview.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/userview/userview.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateForm\n                        \n                        \n                    \n                \n            \n            \n                \npopulateForm(u: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/userview/userview.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/userview/userview.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport User from 'src/app/models/User';\n\n@Component({\n  selector: 'app-userview',\n  templateUrl: './userview.component.html',\n  styleUrls: ['./userview.component.css']\n})\nexport class UserviewComponent implements OnInit {\n\n  constructor( public userApi:UserService, private toastr: ToastrService ) { }\n\n  ngOnInit() {\n    this.userApi.refreshList();\n  }\n\n  populateForm(u: User) {\n    this.userApi.formData = Object.assign({}, u);\n  }\n\n  onDelete(username,password) {\n    if (confirm('Are you sure to delete this record ?')) {\n      this.userApi.deleteUser(username,password)\n        .subscribe(res => {\n  \n          this.userApi.refreshList();\n          this.toastr.warning('Deleted successfully', 'user deleted');\n        },\n          err => {\n     \n            console.log(err);\n          })\n    }\n    }\n\n}\n\n    \n\n    \n        users\n    IDnameisAdmin\n      \n        {{u.id}}\n        {{u.username}}  \n        {{u.isAdmin}}\n       \n        \n          \n        \n      \n      \n  \n    \n    \n\n    \n                \n                    ./userview.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'users    IDnameisAdmin              {{u.id}}        {{u.username}}          {{u.isAdmin}}                                                   '\n    var COMPONENTS = [{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/adminedit/adminedit.component.ts\n            \n            component\n            AdmineditComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/adminedit/userview/userview.component.ts\n            \n            component\n            UserviewComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/adminlogin/adminlogin.component.ts\n            \n            component\n            AdminloginComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/models/Event.ts\n            \n            interface\n            Event\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/User.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/questions/questions.component.ts\n            \n            component\n            QuestionsComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/services/events.service.ts\n            \n            injectable\n            EventsService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/services/groups.service.ts\n            \n            injectable\n            GroupsService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/support-groups/support-groups.component.ts\n            \n            component\n            SupportGroupsComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/tips-page/tips-page.component.ts\n            \n            component\n            TipsPageComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.3\n        \n            @angular/common : ~9.1.3\n        \n            @angular/compiler : ~9.1.3\n        \n            @angular/core : ~9.1.3\n        \n            @angular/forms : ~9.1.3\n        \n            @angular/platform-browser : ~9.1.3\n        \n            @angular/platform-browser-dynamic : ~9.1.3\n        \n            @angular/router : ~9.1.3\n        \n            bcryptjs : ^2.4.3\n        \n            bootstrap : ^4.4.1\n        \n            jquery : ^3.5.0\n        \n            ngx-cookie-service : ^3.0.4\n        \n            ngx-toastr : ^12.0.1\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.5.4\n        \n            toastr : ^2.1.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCalm\nThis project was generated with Angular CLI version 9.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdmineditComponent\n\nAdmineditComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdmineditComponent->AppModule\n\n\n\n\n\nAdminloginComponent\n\nAdminloginComponent\n\nAppModule -->\n\nAdminloginComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nAppModule -->\n\nQuestionsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSupportGroupsComponent\n\nSupportGroupsComponent\n\nAppModule -->\n\nSupportGroupsComponent->AppModule\n\n\n\n\n\nTipsPageComponent\n\nTipsPageComponent\n\nAppModule -->\n\nTipsPageComponent->AppModule\n\n\n\n\n\nUserviewComponent\n\nUserviewComponent\n\nAppModule -->\n\nUserviewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  ApiBaseUrl: 'http://192.168.99.100:8000',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ApiBaseUrl: 'http://calm-api.azurewebsites.net',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
