var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AddgatheringComponent.html",[0,0.143,1,0.422]],["body/components/AddgatheringComponent.html",[0,0.18,1,0.592,2,0.492,3,0.194,4,0.165,5,0.441,6,0.441,7,0.441,8,0.165,9,1.762,10,0.736,11,0.89,12,0.441,13,1.24,14,1.015,15,3.216,16,0.67,17,3.216,18,0.256,19,0.607,20,3.887,21,2.663,22,3.887,23,2.773,24,2.39,25,2.477,26,1.472,27,0.67,28,3.607,29,1.507,30,0.993,31,2.05,32,2.765,33,2.765,34,2.05,35,2.005,36,0.441,37,1.21,38,2.098,39,1.421,40,1.694,41,2.631,42,1.4,43,2.674,44,1.821,45,1.507,46,0.89,47,1.101,48,2.12,49,0.975,50,0.035,51,0.714,52,0.781,53,0.89,54,2.12,55,1.022,56,0.881,57,1.507,58,2.033,59,2.12,60,2.12,61,2.05,62,2.12,63,1.576,64,2.12,65,2.12,66,1.507,67,2.12,68,2.219,69,2.12,70,1.067,71,1.661,72,1.374,73,1.993,74,2.12,75,1.089,76,1.821,77,2.12,78,2.12,79,1.389,80,2.12,81,2.12,82,1.351,83,2.12,84,0.569,85,0.256,86,0.906,87,0.758,88,0.736,89,0.532,90,0.532,91,0.906,92,2.12,93,1.527,94,1.527,95,0.758,96,0.194,97,0.165,98,1.21,99,1.527,100,0.993,101,1.399,102,1.527,103,1.094,104,1.351,105,2.12,106,2.532,107,2.674,108,3.125,109,2.674,110,1.256,111,2.12,112,1.659,113,1.094,114,1.094,115,1.351,116,1.351,117,1.351,118,1.351,119,1.518,120,2.12,121,3.887,122,0.736,123,0.828,124,1.21,125,1.351,126,1.351,127,1.21,128,0.993,129,2.12,130,2.12,131,2.12,132,2.12,133,1.821,134,2.12,135,2.12,136,2.12,137,1.351,138,1.374,139,2.12,140,2.033,141,2.12,142,1.507,143,2.12,144,2.317,145,2.12,146,1.527,147,0.734,148,1.527,149,1.351,150,2.05,151,2.033,152,1.21,153,1.21,154,1.507,155,0.993,156,0.993,157,0.993,158,0.993,159,2.185,160,1.351,161,1.351,162,1.374,163,0.993,164,1.351,165,0.993,166,0.993,167,0.993,168,4.081,169,3.128,170,2.477,171,3.216,172,0.361,173,0.67,174,0.441,175,0.903,176,0.441,177,0.441,178,0.256,179,0.441,180,0.256,181,0.441,182,0.289,183,0.441,184,0.256,185,0.441,186,0.289,187,0.441,188,0.256,189,0.441,190,0.289,191,0.441,192,0.256,193,0.441,194,0.256,195,0.441,196,0.256,197,0.441,198,0.256,199,0.441,200,0.256,201,0.324,202,0.441,203,0.256,204,0.361,205,0.441,206,0.289,207,0.441,208,0.289,209,0.441,210,0.441,211,0.441,212,0.011,213,0.017,214,0.011]],["title/components/AdmineditComponent.html",[0,0.143,178,0.373]],["body/components/AdmineditComponent.html",[0,0.217,1,0.256,2,0.448,3,0.172,4,0.146,5,0.391,6,0.391,7,0.391,8,0.146,10,0.67,11,1.01,12,0.391,13,1.215,14,1.001,16,0.61,18,0.227,19,0.553,21,2.056,23,2.769,24,1.372,25,2.295,26,1.557,27,0.61,29,1.372,30,0.931,31,1.866,32,2.592,33,2.592,34,1.866,35,1.857,36,0.61,37,1.071,38,1.997,39,1.332,40,1.589,41,2.519,42,1.34,45,1.372,46,0.824,47,1.085,49,1.021,50,0.035,51,0.887,52,0.773,53,0.824,55,0.973,56,0.833,57,1.372,58,1.906,61,1.866,63,0.878,66,2.191,68,1.672,70,1.283,71,1.538,72,1.251,73,1.997,75,1.021,76,1.687,79,1.806,82,1.196,84,0.549,85,0.354,86,0.802,87,0.671,88,0.67,89,0.471,90,0.471,91,0.802,95,0.671,96,0.172,97,0.146,98,1.071,99,1.351,100,0.879,101,1.22,103,0.968,104,1.196,110,1.406,112,1.51,113,0.968,114,0.968,115,1.196,116,1.196,117,1.196,118,1.196,119,1.143,122,1.258,123,0.733,124,1.071,125,1.196,126,1.196,127,2.323,128,1.906,133,1.723,137,1.196,138,1.997,140,1.906,142,0.879,144,1.351,146,1.351,147,0.68,148,1.351,149,1.866,150,1.866,151,2.067,152,1.672,153,1.672,154,1.372,155,0.879,156,0.879,157,0.879,158,0.879,159,2.288,160,1.196,161,1.196,162,1.251,163,0.879,164,1.196,165,1.906,166,0.879,167,0.879,169,3.219,172,0.32,173,0.61,174,0.391,175,0.847,176,0.391,177,0.391,178,0.492,179,0.391,180,0.227,181,0.391,182,0.256,183,0.391,184,0.227,185,0.391,186,0.256,187,0.391,188,0.227,189,0.391,190,0.256,191,0.391,192,0.227,193,0.391,194,0.227,195,0.391,196,0.227,197,0.391,198,0.227,199,0.391,200,0.227,201,0.287,202,0.391,203,0.227,204,0.32,205,0.391,206,0.256,207,0.391,208,0.256,209,0.391,210,0.391,211,0.391,212,0.01,213,0.016,214,0.01,215,1.56,216,2.434,217,2.928,218,3.601,219,3.601,220,3.601,221,3.601,222,3.382,223,1.876,224,1.876,225,1.876,226,1.876,227,1.876,228,1.251,229,1.51,230,2.098,231,2.109,232,1.866,233,2.993,234,2.993,235,1.876,236,1.876,237,1.876,238,1.876,239,1.876,240,1.876,241,1.876,242,1.876,243,1.876,244,1.876,245,1.876,246,0.733,247,3.517,248,0.968,249,0.802,250,0.733,251,1.876,252,1.51,253,1.51,254,1.143,255,1.826,256,1.351,257,1.876,258,1.56,259,2.928,260,2.434,261,1.56,262,1.56,263,1.56,264,1.56,265,1.351,266,1.56,267,1.071,268,1.56,269,1.56,270,1.351,271,1.876,272,1.876,273,1.876,274,0.968,275,1.351,276,1.876,277,1.876,278,2.056,279,1.876,280,1.56,281,1.56,282,2.109,283,2.109,284,2.928]],["title/components/AdminloginComponent.html",[0,0.143,180,0.373]],["body/components/AdminloginComponent.html",[0,0.226,1,0.322,2,0.533,3,0.216,4,0.183,5,0.491,6,0.491,7,0.491,8,0.183,10,0.797,11,0.948,12,0.491,13,1.26,14,1.041,16,0.726,18,0.285,19,0.658,23,2.819,26,0.707,27,0.726,29,1.633,30,0.54,35,1.797,36,0.491,37,1.347,38,2.183,39,1.498,40,1.787,41,2.726,42,1.451,46,1.047,47,1.046,49,1.148,50,0.035,51,0.83,52,0.83,53,1.047,55,0.863,56,0.782,57,1.633,58,2.144,63,0.707,70,0.648,71,1.489,72,1.489,73,1.489,75,1.039,76,1.633,79,0.843,84,0.574,85,0.285,86,1.008,87,0.843,88,0.797,89,0.592,90,0.592,91,1.008,95,0.843,96,0.216,97,0.183,98,1.99,100,1.105,101,1.243,110,0.921,119,0.921,122,1.308,123,1.906,133,0.921,140,1.633,142,1.105,147,0.658,151,1.941,154,1.105,155,1.105,156,1.105,157,1.633,158,1.105,159,1.105,162,1.008,163,1.105,165,1.105,166,1.105,167,1.105,172,0.402,173,0.726,174,0.491,175,0.953,176,0.491,177,0.491,178,0.285,179,0.491,180,0.553,181,0.491,182,0.322,183,0.491,184,0.285,185,0.491,186,0.322,187,0.491,188,0.285,189,0.491,190,0.322,191,0.491,192,0.285,193,0.491,194,0.285,195,0.491,196,0.285,197,0.491,198,0.285,199,0.491,200,0.285,201,0.361,202,0.491,203,0.285,204,0.402,205,0.491,206,0.322,207,0.491,208,0.322,209,0.491,210,0.491,211,0.491,212,0.013,213,0.019,214,0.013,228,1.489,247,3.296,248,1.217,249,1.008,250,0.921,252,1.217,253,1.217,254,0.921,255,1.618,267,1.347,274,1.217,285,1.961,286,0.592,287,2.36,288,3.804,289,3.484,290,2.51,291,1.481,292,3.296,293,3.444,294,2.897,295,2.359,296,2.359,297,1.99,298,2.897,299,3.807,300,2.359,301,2.897,302,2.359,303,1.961,304,2.359,305,2.359,306,2.359,307,2.359,308,2.359,309,1.699,310,1.699,311,1.503,312,1.961,313,2.64,314,1.961,315,1.961,316,1.961,317,1.961,318,1.961,319,2.51,320,1.347,321,1.961,322,1.961,323,1.961,324,2.359,325,1.961,326,1.961,327,1.699,328,1.347,329,2.359,330,2.359,331,1.347,332,1.961,333,1.699,334,1.503,335,1.699]],["title/components/AppComponent.html",[0,0.143,182,0.422]],["body/components/AppComponent.html",[0,0.266,1,0.505,2,0.728,3,0.338,4,0.287,5,0.77,6,0.77,7,0.77,8,0.287,12,0.77,13,1.328,14,1.092,16,0.991,18,0.447,19,0.898,26,1.11,47,0.698,50,0.035,51,0.728,52,0.566,70,1.016,75,0.928,84,0.391,85,0.447,96,0.338,97,0.287,106,2.713,147,0.898,172,0.631,173,0.991,174,0.77,175,1.156,176,0.77,177,0.77,178,0.447,179,0.77,180,0.447,181,0.77,182,0.758,183,0.77,184,0.447,185,0.77,186,0.505,187,0.77,188,0.447,189,0.77,190,0.505,191,0.77,192,0.447,193,0.77,194,0.447,195,0.77,196,0.447,197,0.77,198,0.447,199,0.77,200,0.447,201,0.566,202,0.77,203,0.447,204,0.631,205,0.77,206,0.505,207,0.77,208,0.505,209,0.77,210,0.77,211,0.77,212,0.02,213,0.026,214,0.02,286,0.928,336,3.076,337,3.537,338,4.758,339,3.955,340,3.7,341,3.7,342,3.076,343,3.076,344,3.7]],["title/modules/AppModule.html",[345,1.764,346,1.968]],["body/modules/AppModule.html",[0,0.124,1,0.728,2,0.584,3,0.244,4,0.208,8,0.208,14,0.455,39,0.875,42,1.221,44,1.252,46,1.221,50,0.035,84,0.669,85,0.323,87,0.955,88,0.873,89,0.67,90,0.67,91,1.142,95,0.955,96,0.244,97,0.208,123,1.043,172,0.455,178,0.645,180,0.645,182,0.809,184,0.645,186,0.728,188,0.645,190,0.728,192,0.645,194,0.645,196,0.645,198,0.645,200,0.645,201,0.409,203,0.645,204,0.455,206,0.728,208,0.728,212,0.014,213,0.02,214,0.014,246,2.003,249,1.142,297,1.526,345,1.526,346,4.097,347,1.526,348,1.703,349,3.698,350,3.204,351,3.698,352,1.526,353,2.221,354,2.221,355,2.221,356,2.221,357,2.221,358,3.046,359,3.171,360,2.221,361,1.703,362,2.672,363,3.814,364,3.171,365,1.703,366,3.698,367,2.221,368,1.526,369,2.221,370,2.672,371,2.672,372,2.672,373,2.672,374,2.672,375,1.703,376,2.221,377,2.221,378,2.221,379,2.672,380,2.672,381,3.814,382,2.672,383,3.814,384,3.814,385,2.672,386,2.672,387,2.672,388,3.814,389,2.672,390,2.672,391,2.221,392,2.221,393,1.703,394,2.221,395,2.221,396,2.221,397,2.221,398,2.221,399,2.672,400,2.221,401,1.924,402,2.672,403,2.672,404,2.672,405,2.672]],["title/classes/AppPage.html",[97,0.24,406,2.225]],["body/classes/AppPage.html",[3,0.385,4,0.327,8,0.327,18,0.509,27,1.075,47,0.975,50,0.035,55,1.265,84,0.446,96,0.51,97,0.434,110,2.016,147,1.054,212,0.023,213,0.028,214,0.023,228,2.206,229,2.663,246,1.645,286,1.057,337,2.685,342,4.291,365,2.685,406,4.19,407,4.213,408,3.503,409,5.162,410,6.211,411,5.817,412,5.817,413,4.213,414,4.213,415,4.291,416,4.213,417,4.213,418,4.213,419,4.213]],["title/modules/AppRoutingModule.html",[345,1.764,358,1.764]],["body/modules/AppRoutingModule.html",[0,0.293,2,0.525,3,0.314,4,0.266,8,0.266,41,1.769,50,0.035,63,1.028,84,0.654,85,0.414,91,1.465,96,0.314,97,0.266,122,0.785,128,1.607,178,0.547,180,0.547,184,0.547,188,0.547,192,0.547,194,0.547,196,0.547,198,0.547,200,0.547,201,0.693,203,0.547,204,0.584,212,0.018,213,0.024,214,0.018,216,2.85,246,2.378,278,2.585,287,2.335,288,2.85,345,1.958,347,1.958,352,2.585,358,2.585,366,4.214,367,3.764,368,2.894,369,2.85,375,2.185,376,2.85,377,2.85,378,2.85,391,2.85,392,2.85,393,2.185,394,2.85,395,2.85,397,2.85,398,2.85,400,2.85,420,3.429,421,3.429,422,2.85,423,5.069,424,3.429,425,3.764,426,3.764,427,4.528,428,2.85,429,2.185,430,6.089,431,2.47,432,1.958,433,2.47,434,3.429]],["title/components/EventsComponent.html",[0,0.143,184,0.373]],["body/components/EventsComponent.html",[0,0.236,1,0.359,2,0.577,3,0.24,4,0.204,5,0.547,6,0.547,7,0.547,8,0.204,10,0.862,11,1.008,12,0.547,13,1.278,14,1.046,16,0.785,18,0.317,19,0.711,24,1.231,26,1.638,27,0.785,30,0.601,36,0.547,38,1.882,39,1.234,40,1.471,42,1.034,44,1.231,47,1.055,49,0.659,50,0.035,51,0.674,52,0.737,53,0.601,55,0.785,56,0.711,63,1.707,66,2.255,70,1.321,71,1.882,72,1.61,73,1.882,75,1.105,79,1.953,84,0.561,85,0.317,86,1.122,87,0.939,88,0.862,89,0.659,90,0.659,94,1.892,96,0.24,97,0.204,101,1.13,102,1.892,106,2.629,112,1.943,113,1.355,114,1.355,119,1.721,147,0.711,170,2.151,172,0.448,173,0.785,174,0.547,175,1.002,176,0.547,177,0.547,178,0.317,179,0.547,180,0.317,181,0.547,182,0.359,183,0.547,184,0.582,185,0.547,186,0.359,187,0.547,188,0.317,189,0.547,190,0.359,191,0.547,192,0.317,193,0.547,194,0.317,195,0.547,196,0.317,197,0.547,198,0.317,199,0.547,200,0.317,201,0.402,202,0.547,203,0.317,204,0.448,205,0.547,206,0.359,207,0.547,208,0.359,209,0.547,210,0.547,211,0.547,212,0.014,213,0.02,214,0.014,250,1.471,286,0.659,287,1.943,291,0.939,320,1.5,331,1.5,401,1.892,431,3.467,435,2.183,436,3.768,437,3.663,438,3.173,439,3.663,440,4.002,441,3.132,442,2.626,443,3.132,444,2.626,445,1.355,446,2.626,447,2.626,448,2.626,449,2.626,450,2.626,451,2.626,452,2.183,453,1.674,454,1.892,455,2.626,456,2.626,457,3.173,458,2.714,459,3.663,460,2.183,461,3.132,462,1.892,463,1.892,464,4.237,465,2.183,466,1.674,467,2.183,468,4.406,469,1.674,470,3.132,471,4.409,472,3.132,473,3.132,474,3.132,475,3.132,476,3.768,477,3.132,478,3.132,479,3.132]],["title/injectables/EventsService.html",[44,1.447,480,1.764]],["body/injectables/EventsService.html",[3,0.307,4,0.261,8,0.261,18,0.406,19,0.843,24,2.866,27,0.93,28,3.713,42,1.377,44,2.093,47,1.12,49,1.121,50,0.035,51,0.768,52,0.876,53,1.022,55,1.114,56,0.843,63,1.34,75,1.489,84,0.589,85,0.406,88,0.769,89,0.843,90,1.259,94,2.419,95,1.201,96,0.307,97,0.261,100,1.574,106,2.588,110,1.744,128,2.609,138,1.435,212,0.018,213,0.024,214,0.018,228,1.908,250,1.312,254,1.744,255,1.744,286,0.843,297,1.918,337,2.141,352,2.55,445,2.304,466,2.846,480,3.054,481,2.419,482,2.793,483,3.713,484,4.172,485,4.172,486,4.172,487,4.467,488,5.348,489,5.348,490,4.467,491,3.359,492,4.467,493,3.359,494,3.359,495,3.359,496,3.359,497,3.359,498,3.359,499,3.359,500,2.793,501,2.793,502,2.141,503,2.793,504,2.793,505,3.359,506,2.793,507,2.793,508,2.793,509,2.793,510,2.793,511,2.793,512,3.359,513,4.446,514,3.713,515,3.713,516,3.359,517,3.713,518,4.467]],["title/components/FooterComponent.html",[0,0.143,186,0.422]],["body/components/FooterComponent.html",[0,0.262,1,0.48,2,0.704,3,0.321,4,0.273,5,0.731,6,0.731,7,0.731,8,0.273,10,1.053,11,1.174,12,0.731,13,1.322,14,1.082,16,0.958,30,0.804,36,0.731,50,0.035,51,0.704,56,0.663,84,0.372,85,0.424,96,0.321,97,0.273,147,0.869,172,0.599,173,0.958,174,0.731,175,1.133,176,0.731,177,0.731,178,0.424,179,0.731,180,0.424,181,0.731,182,0.48,183,0.731,184,0.424,185,0.731,186,0.743,187,0.731,188,0.424,189,0.731,190,0.48,191,0.731,192,0.424,193,0.731,194,0.424,195,0.731,196,0.424,197,0.731,198,0.424,199,0.731,200,0.424,201,0.538,202,0.731,203,0.424,204,0.599,205,0.731,206,0.48,207,0.731,208,0.48,209,0.731,210,0.731,211,0.731,212,0.019,213,0.025,214,0.019,250,1.796,286,0.881,519,2.92,520,5.443,521,4.6,522,4.6,523,4.6,524,4.6,525,4.6,526,4.6,527,4.6,528,3.824,529,4.6,530,4.6,531,4.6,532,4.6,533,4.6,534,4.6,535,4.6,536,4.6,537,4.6]],["title/interfaces/Gathering.html",[24,1.447,538,1.764]],["body/interfaces/Gathering.html",[3,0.389,4,0.331,8,0.331,18,0.514,19,0.98,24,2.433,50,0.034,52,0.944,53,1.393,66,2.433,70,1.168,75,1.582,84,0.45,96,0.389,106,2.891,107,4.66,108,4.037,109,4.66,122,1.336,133,2.189,212,0.023,213,0.028,214,0.023,454,3.064,538,2.429,539,3.064,540,3.537,541,5.605,542,5.605,543,4.255,544,4.255,545,4.255,546,4.255,547,3.537,548,4.255]],["title/components/LoginComponent.html",[0,0.143,188,0.373]],["body/components/LoginComponent.html",[0,0.228,1,0.292,2,0.495,3,0.195,4,0.166,5,0.445,6,0.445,7,0.445,8,0.166,10,0.741,11,0.894,12,0.445,13,1.241,14,1.016,16,0.674,18,0.258,19,0.822,23,2.809,26,0.641,27,0.674,29,1.516,30,0.489,35,1.669,36,0.674,37,1.22,38,2.185,39,1.532,40,1.525,41,2.717,42,1.404,46,0.997,47,1.018,49,1.093,50,0.035,51,0.754,52,0.806,53,0.997,55,0.813,56,0.737,57,1.516,58,2.041,63,0.641,70,0.587,71,1.382,72,1.382,73,1.382,75,0.98,76,1.516,79,0.764,84,0.557,85,0.258,86,0.913,87,0.764,88,0.894,89,1.174,90,0.536,91,0.913,95,0.764,96,0.195,97,0.166,98,2.812,101,1.306,108,1.539,110,0.834,122,1.347,123,2.106,133,0.834,140,1.516,142,1.001,147,0.611,151,1.83,154,1.001,155,1.001,156,1.001,157,1.516,158,1.001,159,1.001,162,0.913,163,1.001,165,1.516,166,1.001,167,1.001,172,0.364,173,0.907,174,0.445,175,0.907,176,0.445,177,0.445,178,0.258,179,0.445,180,0.258,181,0.445,182,0.292,183,0.445,184,0.258,185,0.445,186,0.292,187,0.445,188,0.526,189,0.445,190,0.292,191,0.445,192,0.258,193,0.445,194,0.258,195,0.445,196,0.258,197,0.445,198,0.258,199,0.445,200,0.258,201,0.327,202,0.445,203,0.258,204,0.364,205,0.445,206,0.292,207,0.445,208,0.292,209,0.445,210,0.445,211,0.445,212,0.011,213,0.017,214,0.011,228,1.861,229,1.669,230,1.669,232,2.062,246,2.057,248,1.102,249,0.913,250,0.834,252,1.102,253,1.102,254,1.525,255,1.525,267,1.22,274,1.102,286,0.536,287,2.955,290,2.331,291,1.157,292,3.137,293,3.247,294,2.69,298,2.69,299,3.794,301,2.69,303,1.776,309,1.539,310,1.539,311,1.362,312,1.776,313,2.776,314,1.776,315,1.776,316,1.776,317,1.776,318,1.776,319,2.331,320,1.22,321,1.776,322,1.776,323,1.776,325,1.776,326,1.776,331,1.22,332,1.776,333,1.539,334,1.362,335,1.539,396,2.69,428,2.69,429,2.062,432,1.22,469,1.362,549,1.776,550,3.236,551,2.137,552,2.137,553,3.236,554,2.137,555,3.371,556,2.137,557,2.137,558,4.356,559,2.137,560,3.236,561,2.137,562,2.137,563,2.137,564,2.137,565,2.137,566,2.137,567,2.137,568,2.137,569,2.137,570,2.137,571,1.776,572,2.137,573,1.776,574,2.137]],["title/components/NavbarComponent.html",[0,0.143,190,0.422]],["body/components/NavbarComponent.html",[0,0.255,1,0.401,2,0.624,3,0.268,4,0.228,5,0.611,6,0.611,7,0.611,8,0.228,10,0.932,11,1.157,12,0.611,13,1.296,14,1.061,16,0.848,18,0.355,19,0.769,26,1.649,27,0.848,30,1.157,36,0.975,42,1.509,47,1.038,49,0.736,50,0.035,51,0.716,52,0.716,53,0.672,55,0.611,56,0.769,66,2.369,70,1.388,79,2.087,84,0.431,85,0.355,88,0.932,89,1.333,90,1.333,96,0.268,97,0.228,101,0.88,119,1.828,123,1.146,124,2.326,147,0.769,170,2.326,172,0.5,173,0.848,174,0.611,175,1.053,176,0.611,177,0.611,178,0.355,179,0.611,180,0.355,181,0.611,182,0.401,183,0.611,184,0.355,185,0.611,186,0.401,187,0.611,188,0.355,189,0.611,190,0.69,191,0.611,192,0.355,193,0.611,194,0.355,195,0.611,196,0.355,197,0.611,198,0.355,199,0.611,200,0.355,201,0.716,202,0.611,203,0.355,204,0.5,205,0.611,206,0.401,207,0.611,208,0.401,209,0.611,210,0.611,211,0.611,212,0.016,213,0.022,214,0.016,246,1.591,247,3.826,278,2.326,286,0.736,287,2.101,327,2.113,328,1.675,343,3.387,431,2.934,432,2.326,433,2.934,438,3.371,445,1.513,453,1.87,457,3.371,458,2.113,575,2.439,576,5.498,577,4.074,578,4.68,579,2.113,580,2.934,581,2.934,582,4.074,583,2.934,584,2.934,585,2.934,586,2.934,587,4.074,588,2.934,589,2.934,590,4.074,591,3.387,592,4.074,593,4.074,594,2.934]],["title/components/NotfoundComponent.html",[0,0.143,192,0.373]],["body/components/NotfoundComponent.html",[0,0.266,1,0.506,2,0.729,3,0.339,4,0.288,5,0.772,6,0.772,7,0.772,8,0.288,10,1.09,11,1.205,12,0.772,13,1.328,14,1.092,16,0.992,30,0.848,36,0.772,50,0.035,51,0.729,56,0.7,84,0.392,85,0.448,96,0.339,97,0.288,147,0.899,172,0.632,173,0.992,174,0.772,175,1.157,176,0.772,177,0.772,178,0.448,179,0.772,180,0.448,181,0.772,182,0.506,183,0.772,184,0.448,185,0.772,186,0.506,187,0.772,188,0.448,189,0.772,190,0.506,191,0.772,192,0.671,193,0.772,194,0.448,195,0.772,196,0.448,197,0.772,198,0.448,199,0.772,200,0.448,201,0.567,202,0.772,203,0.448,204,0.632,205,0.772,206,0.506,207,0.772,208,0.506,209,0.772,210,0.772,211,0.772,212,0.02,213,0.026,214,0.02,250,1.86,286,0.93,425,4.618,429,3.035,595,3.081,596,4.763,597,4.763]],["title/components/ProfileComponent.html",[0,0.143,194,0.373]],["body/components/ProfileComponent.html",[0,0.203,1,0.294,2,0.499,3,0.197,4,0.168,5,0.449,6,0.449,7,0.449,8,0.168,10,0.746,11,0.899,12,0.449,13,1.243,14,1.018,16,0.678,18,0.261,19,0.615,21,2.683,23,2.761,25,2.502,26,1.482,27,0.678,29,1.527,30,1.002,31,2.076,32,2.789,33,2.789,34,2.076,35,2.025,36,0.449,38,2.192,39,1.433,40,1.709,42,1.356,45,2.05,46,1.002,47,1.12,49,0.985,50,0.035,51,0.908,52,0.809,53,0.899,55,1.029,56,0.887,57,1.527,58,2.05,61,2.076,63,0.977,68,1.86,70,1.078,71,1.678,72,1.392,73,2.111,75,1.179,76,1.84,79,1.404,82,1.374,84,0.543,85,0.261,86,0.921,87,0.771,88,0.746,89,0.541,90,0.541,95,0.771,96,0.197,97,0.168,100,1.01,101,0.977,103,1.112,104,1.374,110,1.272,112,1.68,113,1.112,114,1.112,115,1.374,116,1.374,117,1.374,118,1.374,119,0.842,122,1.314,123,0.842,124,1.231,125,1.374,126,1.374,127,1.231,128,1.01,133,1.835,137,1.374,138,0.921,140,2.05,142,1.01,147,0.615,149,1.374,150,2.076,151,2.05,152,1.231,153,1.231,154,1.527,155,1.01,156,1.01,157,1.01,158,1.01,159,1.01,160,1.374,161,1.374,162,1.392,163,1.01,164,1.374,165,1.01,166,1.01,167,1.01,169,3.366,170,1.86,172,0.367,173,0.678,174,0.449,175,0.911,176,0.449,177,0.449,178,0.261,179,0.449,180,0.261,181,0.449,182,0.294,183,0.449,184,0.261,185,0.449,186,0.294,187,0.449,188,0.261,189,0.449,190,0.294,191,0.449,192,0.261,193,0.449,194,0.529,195,0.449,196,0.261,197,0.449,198,0.261,199,0.449,200,0.261,201,0.33,202,0.449,203,0.261,204,0.367,205,0.449,206,0.294,207,0.449,208,0.294,209,0.449,210,0.449,211,0.449,212,0.012,213,0.017,214,0.012,246,0.842,248,1.112,249,0.921,252,1.68,253,1.68,254,1.272,255,1.93,256,1.553,270,1.553,274,1.112,275,1.553,278,1.231,282,2.346,283,2.346,290,2.346,291,1.404,299,1.553,309,1.553,328,1.231,433,2.346,445,1.112,453,1.374,579,1.553,598,1.792,599,3.258,600,3.927,601,3.638,602,3.258,603,2.156,604,2.156,605,2.156,606,2.156,607,2.156,608,2.156,609,2.156,610,2.156,611,2.156,612,2.156,613,2.156,614,2.156,615,2.156,616,2.156,617,2.156,618,1.792,619,2.156,620,2.156,621,2.156,622,2.156,623,2.156,624,2.156,625,2.156,626,1.792,627,1.792,628,1.792,629,1.792,630,3.927,631,1.792,632,3.258]],["title/components/QuestionsComponent.html",[0,0.143,196,0.373]],["body/components/QuestionsComponent.html",[0,0.234,1,0.35,2,0.566,3,0.234,4,0.199,5,0.533,6,0.533,7,0.533,8,0.199,10,0.847,11,0.994,12,0.533,13,1.274,14,1.043,16,0.77,18,0.309,26,0.768,27,0.77,30,0.586,36,0.533,47,0.483,50,0.034,51,0.566,55,0.533,56,0.699,63,1.577,84,0.271,85,0.309,96,0.234,97,0.199,122,0.586,147,0.82,172,0.437,173,0.77,174,0.533,175,0.991,176,0.533,177,0.533,178,0.309,179,0.533,180,0.309,181,0.533,182,0.35,183,0.533,184,0.309,185,0.533,186,0.35,187,0.533,188,0.309,189,0.533,190,0.35,191,0.533,192,0.309,193,0.533,194,0.309,195,0.533,196,0.575,197,0.533,198,0.309,199,0.533,200,0.309,201,0.392,202,0.533,203,0.309,204,0.437,205,0.533,206,0.35,207,0.533,208,0.35,209,0.533,210,0.533,211,0.533,212,0.014,213,0.02,214,0.014,229,1.321,231,1.844,250,1.445,286,0.643,291,1.701,319,1.844,327,1.844,328,2.112,334,2.358,361,2.358,426,3.611,432,1.462,573,2.129,633,2.129,634,3.7,635,3.7,636,5.259,637,2.561,638,3.7,639,2.561,640,3.7,641,2.561,642,2.561,643,2.561,644,2.129,645,2.561,646,2.561,647,2.561,648,2.561,649,2.561,650,2.561,651,2.561,652,4.758,653,3.7,654,3.7,655,3.7,656,3.7,657,3.7,658,3.7,659,4.758,660,3.076,661,3.7,662,3.076,663,3.7,664,4.758,665,4.758,666,3.7,667,3.7,668,3.7,669,3.7,670,3.7,671,3.7,672,3.7,673,3.7,674,3.7,675,3.7,676,3.7,677,3.7,678,3.7,679,3.7,680,3.7,681,3.076,682,3.7,683,3.076,684,3.7,685,3.7,686,3.7,687,4.758,688,3.7,689,3.076,690,3.7,691,3.7,692,4.758,693,3.7,694,3.7,695,3.7,696,3.7,697,3.7,698,3.7,699,3.7,700,3.7,701,3.7,702,3.7,703,3.7,704,3.7,705,3.7,706,3.7,707,3.7,708,3.7,709,3.7,710,3.7,711,3.7,712,3.7,713,3.7,714,3.7,715,3.7,716,3.7,717,3.7,718,3.7,719,3.7,720,3.7,721,3.7,722,3.7,723,3.7,724,3.7,725,3.7,726,3.7,727,3.7,728,3.7,729,3.7,730,3.7,731,3.7,732,3.076,733,3.7,734,3.7,735,3.7,736,3.7,737,3.7,738,3.7,739,3.7,740,3.7,741,3.7,742,3.7,743,3.7]],["title/components/RegisterComponent.html",[0,0.143,198,0.373]],["body/components/RegisterComponent.html",[0,0.231,1,0.247,2,0.435,3,0.165,4,0.14,5,0.376,6,0.376,7,0.376,8,0.14,10,0.65,11,0.912,12,0.376,13,1.207,14,0.988,16,0.592,18,0.218,19,0.752,21,2.473,23,2.795,25,2.238,26,1.38,27,0.592,29,1.331,30,0.912,31,1.811,32,2.539,33,2.539,34,1.811,35,1.812,36,0.731,37,1.031,38,2.13,39,1.506,40,1.556,41,2.646,42,1.369,45,2.03,46,0.912,47,1.067,49,1.087,50,0.035,51,0.881,52,0.737,53,0.804,55,0.958,56,0.818,57,1.331,58,1.867,61,1.811,63,0.852,68,2.006,70,0.964,71,1.501,72,1.214,73,1.965,75,0.999,76,1.646,79,1.256,82,1.151,84,0.543,85,0.218,86,0.771,87,0.645,88,0.912,89,0.881,90,0.881,91,0.771,95,0.645,96,0.165,97,0.14,98,2.006,99,1.3,100,0.846,101,1.053,103,0.931,104,1.151,110,1.372,112,1.466,113,0.931,114,0.931,115,1.151,116,1.151,117,1.151,118,1.151,119,0.705,122,1.344,123,1.88,124,1.031,125,1.151,126,1.151,127,2.275,128,1.867,133,1.692,137,1.151,138,1.214,140,1.867,142,0.846,144,1.3,146,1.3,147,0.663,148,1.3,149,1.811,150,1.811,151,2.03,152,1.622,153,1.622,154,0.846,155,0.846,156,0.846,157,1.331,158,0.846,159,0.846,162,0.771,163,0.846,165,2.03,166,0.846,167,0.846,169,3.177,172,0.308,173,0.592,174,0.376,175,0.83,176,0.376,177,0.376,178,0.218,179,0.376,180,0.218,181,0.376,182,0.247,183,0.376,184,0.218,185,0.376,186,0.247,187,0.376,188,0.218,189,0.376,190,0.247,191,0.376,192,0.218,193,0.376,194,0.218,195,0.376,196,0.218,197,0.376,198,0.481,199,0.376,200,0.218,201,0.276,202,0.376,203,0.218,204,0.308,205,0.376,206,0.247,207,0.376,208,0.247,209,0.376,210,0.376,211,0.376,212,0.01,213,0.015,214,0.01,228,1.214,229,1.466,230,1.466,231,2.046,232,1.811,233,2.92,234,2.92,246,1.88,248,0.931,249,0.771,252,1.466,253,1.466,254,1.11,255,1.796,256,1.3,258,1.501,260,2.362,261,1.501,262,1.501,263,1.501,264,1.501,265,1.3,266,1.501,267,1.031,268,1.501,269,1.501,270,1.3,274,0.931,275,1.3,278,3.152,280,1.501,281,1.501,282,2.046,283,2.046,286,0.453,291,1.256,297,1.031,311,1.151,313,2.931,328,1.031,333,1.3,334,1.151,335,1.3,352,1.031,555,1.3,618,1.501,626,1.501,627,1.501,628,1.501,629,1.501,631,1.501,744,1.501,745,2.841,746,3.513,747,3.312,748,1.806,749,1.806,750,1.806,751,2.841,752,2.841,753,1.806,754,2.841,755,2.841,756,1.806,757,1.806,758,1.806,759,1.806,760,1.806,761,1.806,762,1.806,763,1.806,764,1.806,765,1.806,766,1.806,767,1.806,768,1.806,769,1.806,770,2.841,771,1.806,772,1.806,773,1.806,774,1.806,775,1.806]],["title/components/SupportGroupsComponent.html",[0,0.143,200,0.373]],["body/components/SupportGroupsComponent.html",[0,0.228,1,0.329,2,0.541,3,0.22,4,0.187,5,0.501,6,0.501,7,0.501,8,0.187,10,0.809,11,0.959,12,0.501,13,1.263,14,1.034,16,0.736,18,0.291,19,0.668,26,1.595,27,0.736,30,0.551,36,0.501,38,2.272,39,1.513,40,1.804,42,1.412,43,3.841,44,2.165,46,1.057,47,1.084,49,0.887,50,0.035,51,0.707,52,0.814,53,0.809,55,0.736,56,0.791,63,0.722,66,2.165,70,1.268,71,1.511,72,1.511,73,1.511,75,1.052,79,1.901,84,0.545,85,0.291,86,1.028,87,0.86,88,0.809,89,0.604,90,0.604,96,0.22,97,0.187,101,1.06,102,1.733,106,2.383,112,1.824,113,1.241,114,1.241,119,1.637,147,0.668,168,4.536,170,2.019,172,0.41,173,0.736,174,0.501,175,0.962,176,0.501,177,0.501,178,0.291,179,0.501,180,0.291,181,0.501,182,0.329,183,0.501,184,0.291,185,0.501,186,0.329,187,0.501,188,0.291,189,0.501,190,0.329,191,0.501,192,0.291,193,0.501,194,0.291,195,0.501,196,0.291,197,0.501,198,0.291,199,0.501,200,0.558,201,0.852,202,0.501,203,0.291,204,0.41,205,0.501,206,0.329,207,0.501,208,0.329,209,0.501,210,0.501,211,0.501,212,0.013,213,0.019,214,0.013,249,1.028,250,1.381,286,0.604,287,1.824,291,1.759,292,3.019,310,1.733,320,1.374,331,1.374,393,3.7,401,1.733,432,2.638,437,3.485,438,3.019,439,3.485,440,3.841,441,2.939,443,2.939,445,1.241,452,2.001,453,1.533,454,1.733,457,3.019,458,2.547,459,3.485,460,2.001,461,2.939,462,1.733,463,1.733,464,2.939,465,2.001,466,1.533,467,2.001,469,1.533,470,2.939,471,4.278,472,2.939,473,2.939,474,2.939,475,2.939,477,2.939,478,2.939,479,2.939,776,4.827,777,2.001,778,3.536,779,2.406,780,2.406,781,2.406,782,2.406,783,2.406,784,2.406,785,2.406,786,2.406,787,2.406,788,2.406,789,2.406,790,2.406,791,2.001,792,2.406,793,4.192,794,2.406,795,3.536,796,3.536]],["title/components/TipsPageComponent.html",[0,0.143,203,0.373]],["body/components/TipsPageComponent.html",[0,0.259,1,0.424,2,0.649,3,0.284,4,0.241,5,0.647,6,0.647,7,0.647,8,0.241,10,0.97,11,1.186,12,0.647,13,1.304,14,1.068,16,0.883,18,0.375,19,0.8,27,0.883,30,1.186,36,1.079,42,1.536,45,2.541,46,1.241,47,0.911,49,0.78,50,0.035,51,0.738,52,0.649,53,0.711,55,1.004,56,0.8,84,0.51,85,0.375,88,0.711,89,1.21,90,1.21,96,0.284,97,0.241,101,0.932,147,0.8,172,0.53,173,0.883,174,0.647,175,1.079,176,0.647,177,0.647,178,0.375,179,0.647,180,0.375,181,0.647,182,0.424,183,0.647,184,0.375,185,0.647,186,0.424,187,0.647,188,0.375,189,0.647,190,0.424,191,0.647,192,0.375,193,0.647,194,0.375,195,0.647,196,0.375,197,0.647,198,0.375,199,0.647,200,0.375,201,0.476,202,0.647,203,0.626,204,0.976,205,0.647,206,0.424,207,0.647,208,0.424,209,0.647,210,0.647,211,0.647,212,0.017,213,0.023,214,0.017,228,1.811,230,2.186,246,1.214,249,1.328,286,0.78,291,1.724,311,1.98,375,3.301,429,3.301,579,2.238,732,3.523,797,4.307,798,2.583,799,4.238,800,3.107,801,4.238,802,3.107,803,4.238,804,3.107,805,2.583,806,4.238,807,4.238,808,4.238,809,4.238,810,4.238,811,4.238,812,5.181,813,4.238]],["title/interfaces/User.html",[122,0.707,538,1.764]],["body/interfaces/User.html",[3,0.402,4,0.341,8,0.341,18,0.531,19,1,50,0.034,52,0.939,66,2.663,70,1.206,75,1.59,96,0.402,122,1.212,133,2.22,212,0.024,213,0.028,214,0.024,252,2.932,253,2.932,254,2.22,255,2.22,274,3.044,538,2.509,539,3.164,547,3.653,814,3.653,815,4.394,816,4.394,817,4.394,818,4.394]],["title/injectables/UserService.html",[46,0.707,480,1.764]],["body/injectables/UserService.html",[3,0.241,4,0.204,8,0.204,18,0.318,19,0.712,21,2.517,27,0.785,36,0.548,42,1.5,46,0.863,47,1.141,49,1.279,50,0.035,51,0.856,52,0.884,53,1.167,55,1.185,56,0.496,68,2.153,75,1.449,84,0.54,85,0.318,88,0.602,89,0.66,90,0.66,95,0.94,96,0.241,97,0.204,100,1.232,101,1.131,110,2.183,122,1.437,123,1.473,127,2.75,128,2.561,138,1.123,212,0.014,213,0.02,214,0.014,222,3.135,228,1.611,229,2.484,230,2.737,248,1.356,254,1.991,255,2.072,265,3.469,286,0.66,297,2.75,313,2.403,337,2.809,445,2.274,466,1.676,480,2.153,481,1.894,483,3.135,484,3.665,485,3.665,486,4.543,500,3.665,501,2.186,502,1.676,503,2.186,504,2.186,506,2.186,507,2.186,508,2.186,509,2.186,510,3.135,511,2.186,513,4.543,514,2.186,515,2.186,517,3.665,555,2.716,601,3.135,644,3.135,689,3.135,747,3.135,819,2.186,820,3.771,821,3.771,822,3.771,823,4.816,824,4.816,825,4.816,826,4.816,827,2.63,828,3.771,829,3.771,830,2.63,831,3.771,832,2.63,833,3.771,834,4.816,835,3.771,836,2.63,837,2.63,838,2.63,839,2.63,840,3.771,841,3.771,842,2.63,843,2.63,844,3.771,845,2.63,846,2.63,847,2.63,848,2.63,849,2.63,850,2.63,851,2.63,852,2.63,853,4.409,854,2.63,855,2.63,856,2.63,857,2.63,858,2.63,859,2.63,860,2.63,861,2.63,862,2.63]],["title/components/UserviewComponent.html",[0,0.143,206,0.422]],["body/components/UserviewComponent.html",[0,0.228,1,0.442,2,0.667,3,0.296,4,0.252,5,0.674,6,0.674,7,0.674,8,0.252,10,0.997,11,1.127,12,0.674,13,1.31,14,1.073,16,0.908,18,0.391,19,0.823,27,0.908,30,1.206,36,0.908,39,1.725,40,2.058,45,2.308,46,1.206,47,0.93,49,0.812,50,0.035,51,0.754,52,0.667,53,0.741,55,0.674,56,0.611,84,0.558,85,0.391,88,0.741,93,2.332,96,0.296,97,0.252,101,0.971,103,1.67,122,0.997,147,0.823,172,0.552,173,0.908,174,0.674,175,1.097,176,0.674,177,0.674,178,0.391,179,0.674,180,0.391,181,0.674,182,0.442,183,0.674,184,0.391,185,0.674,186,0.442,187,0.674,188,0.391,189,0.674,190,0.442,191,0.674,192,0.391,193,0.674,194,0.391,195,0.674,196,0.391,197,0.674,198,0.391,199,0.674,200,0.391,201,0.496,202,0.674,203,0.391,204,0.552,205,0.674,206,0.72,207,0.674,208,0.442,209,0.674,210,0.674,211,0.674,212,0.017,213,0.023,214,0.017,230,2.248,291,1.761,320,1.849,331,1.849,462,2.332,463,2.332,469,2.064,805,3.623,863,2.692,864,4.358,865,4.358,866,2.692,867,3.238,868,3.238,869,3.238,870,2.692,871,3.238,872,3.238,873,3.238,874,3.238,875,3.238,876,3.238,877,3.238,878,4.358,879,4.358,880,4.358,881,4.358]],["title/components/ViewmyselfComponent.html",[0,0.143,208,0.422]],["body/components/ViewmyselfComponent.html",[0,0.219,1,0.41,2,0.633,3,0.274,4,0.233,5,0.625,6,0.625,7,0.625,8,0.233,10,0.947,11,1.084,12,0.625,13,1.299,14,1.064,16,0.861,18,0.362,19,0.781,23,2.81,27,0.861,29,1.938,30,1.168,36,0.625,45,2.219,46,1.168,47,1.045,49,1.038,50,0.035,51,0.781,52,0.82,53,0.947,55,0.861,56,0.894,57,1.938,58,2.392,63,0.899,75,1.038,76,1.938,84,0.54,85,0.362,93,2.16,95,1.072,96,0.274,97,0.233,103,1.547,122,1.323,133,1.615,140,1.938,142,1.405,147,0.781,151,1.405,152,1.713,153,1.713,154,1.938,155,1.405,156,1.405,157,1.405,158,1.405,159,1.405,160,1.911,161,1.911,162,1.767,163,1.405,164,1.911,165,1.405,166,1.405,167,1.405,172,0.511,173,0.861,174,0.625,175,1.063,176,0.625,177,0.625,178,0.362,179,0.625,180,0.362,181,0.625,182,0.41,183,0.625,184,0.362,185,0.625,186,0.41,187,0.625,188,0.362,189,0.625,190,0.41,191,0.625,192,0.362,193,0.625,194,0.362,195,0.625,196,0.362,197,0.625,198,0.362,199,0.625,200,0.362,201,0.459,202,0.625,203,0.362,204,0.511,205,0.625,206,0.41,207,0.625,208,0.697,209,0.986,210,0.625,211,0.625,212,0.016,213,0.022,214,0.016,254,1.615,255,1.615,267,1.713,291,1.479,571,3.439,791,2.493,866,2.493,870,2.493,882,2.493,883,4.137,884,4.137,885,2.999,886,2.999,887,2.999,888,2.999,889,2.999,890,4.137,891,4.137,892,4.137,893,4.137,894,4.137,895,4.137]],["title/coverage.html",[896,3.509]],["body/coverage.html",[0,0.294,1,0.499,8,0.284,9,3.039,24,1.713,44,1.713,46,0.837,50,0.035,52,0.56,97,0.284,122,0.837,138,1.562,178,0.442,180,0.442,182,0.499,184,0.442,186,0.499,188,0.442,190,0.499,192,0.442,194,0.442,196,0.442,198,0.442,200,0.442,203,0.442,206,0.499,208,0.499,212,0.02,213,0.025,214,0.02,215,3.039,285,3.039,336,3.039,375,2.33,393,2.33,406,2.633,408,3.039,435,3.039,480,2.696,482,3.039,502,3.008,519,3.039,538,2.696,540,3.039,549,3.039,575,3.039,595,3.039,598,3.039,633,3.039,660,3.039,744,3.039,776,3.039,777,3.039,797,3.039,798,3.039,814,3.039,819,3.039,863,3.039,882,3.039,896,3.039,897,3.656,898,3.656,899,3.656,900,3.656,901,3.656,902,6.156,903,3.656,904,3.656,905,3.656,906,3.656,907,3.656,908,4.721,909,4.721,910,4.721,911,4.721,912,4.721,913,4.721,914,3.656,915,3.656,916,3.656,917,4.721,918,3.656,919,3.656,920,3.656,921,3.656,922,3.656,923,3.656,924,3.656,925,3.656,926,3.656,927,3.656,928,3.656,929,3.039,930,5.526,931,5.526,932,3.039,933,3.925,934,3.039,935,3.039,936,3.656,937,3.656]],["title/dependencies.html",[348,2.368,938,2.577]],["body/dependencies.html",[39,1.74,50,0.035,85,0.534,87,1.58,88,1.216,89,1.109,90,1.109,91,1.889,212,0.024,213,0.029,214,0.024,348,2.817,350,3.184,364,4.418,365,3.387,939,4.421,940,5.209,941,4.421,942,4.421,943,4.421,944,4.421,945,4.421,946,4.421,947,4.421,948,4.421,949,4.421,950,4.421,951,4.421,952,4.421,953,4.421,954,4.421,955,4.421,956,4.421,957,4.421,958,4.421,959,4.421]],["title/index.html",[18,0.311,960,2.577,961,2.577]],["body/index.html",[0,0.257,4,0.323,14,0.708,50,0.027,51,0.636,138,1.776,162,1.776,212,0.022,213,0.027,214,0.022,232,3.535,339,3.455,361,2.649,415,3.455,422,4.612,528,4.612,591,3.455,662,3.455,683,3.455,940,3.455,962,5.119,963,4.156,964,5.548,965,4.156,966,4.156,967,5.119,968,5.946,969,6.134,970,4.156,971,4.156,972,4.156,973,4.156,974,4.156,975,4.156,976,4.156,977,4.156,978,4.156,979,5.548,980,4.156,981,5.946,982,4.156,983,4.156,984,4.156,985,4.156,986,4.156,987,4.156,988,3.455,989,5.119,990,5.119,991,5.79,992,5.119,993,5.119,994,4.156,995,5.79,996,4.156,997,4.156,998,4.156,999,4.156]],["title/modules.html",[347,2.41]],["body/modules.html",[50,0.03,201,0.756,212,0.027,213,0.03,214,0.027,346,3.146,347,2.819,358,2.819,365,3.146,1000,4.937,1001,5.672,1002,4.937,1003,4.937]],["title/overview.html",[1004,3.509]],["body/overview.html",[1,0.725,2,0.577,46,1.214,50,0.035,97,0.293,172,0.643,178,0.641,180,0.641,182,0.82,184,0.641,186,0.725,188,0.641,190,0.725,192,0.641,194,0.641,196,0.641,198,0.641,200,0.641,203,0.641,206,0.725,208,0.725,212,0.02,213,0.026,214,0.02,345,2.153,346,4.164,347,2.153,348,2.403,349,3.135,350,2.716,351,3.135,352,2.153,353,3.135,354,3.135,355,3.135,356,3.135,357,3.135,358,3.03,359,4.004,360,3.135,361,2.403,368,2.153,481,2.716,539,2.716,1004,3.135,1005,5.306,1006,3.771,1007,3.771,1008,3.771]],["title/routes.html",[368,2.41]],["body/routes.html",[50,0.031,212,0.027,213,0.031,214,0.027,368,2.878]],["title/miscellaneous/variables.html",[1009,2.142,1010,3.089]],["body/miscellaneous/variables.html",[18,0.537,26,1.714,50,0.034,52,0.907,70,1.569,79,1.59,119,2.083,212,0.024,213,0.029,214,0.024,502,3.776,681,4.435,929,3.698,932,3.698,933,3.698,934,4.435,935,4.435,988,4.435,1009,3.698,1010,3.698,1011,5.335,1012,4.448,1013,4.448,1014,4.448,1015,4.448,1016,4.448,1017,5.335,1018,5.335,1019,5.335,1020,5.335,1021,5.335]]],"invertedIndex":[["",{"_index":50,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["0.10.2",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1007,"title":{},"body":{"overview.html":{}}}],["1.10.0",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1008,"title":{},"body":{"overview.html":{}}}],["100",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["12.0.1",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["1232551203.us",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1006,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1005,"title":{},"body":{"overview.html":{}}}],["2.1.4",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["2.elb.amazonaws.com",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2/3",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":535,"title":{},"body":{"components/FooterComponent.html":{}}}],["28",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["3.0.4",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["4.4.1",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["5/15",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":660,"title":{},"body":{"components/QuestionsComponent.html":{},"coverage.html":{}}}],["6.5.4",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["9.1.3",{"_index":940,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9876543210",{"_index":523,"title":{},"body":{"components/FooterComponent.html":{}}}],["accept",{"_index":234,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":34,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["accident",{"_index":697,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["actual_component",{"_index":211,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["add",{"_index":159,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["addgathering",{"_index":15,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["addgathering'},{'name",{"_index":177,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["addgathering.component.html",{"_index":17,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["addgatheringcomponent",{"_index":1,"title":{"components/AddgatheringComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adduser",{"_index":440,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["admin",{"_index":247,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/NavbarComponent.html":{}}}],["adminedit",{"_index":216,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppRoutingModule.html":{}}}],["adminedit'},{'name",{"_index":179,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["adminedit.component.html",{"_index":217,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["adminedit/addgathering/addgathering.component",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["adminedit/adminedit.component",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["adminedit/userview/userview.component",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["admineditcomponent",{"_index":178,"title":{"components/AdmineditComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminlogin",{"_index":288,"title":{},"body":{"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{}}}],["adminlogin'},{'name",{"_index":181,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["adminlogin.component.html",{"_index":289,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["adminlogin/adminlogin.component",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["adminlogincomponent",{"_index":180,"title":{"components/AdminloginComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminpage",{"_index":593,"title":{},"body":{"components/NavbarComponent.html":{}}}],["again",{"_index":335,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["angular",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["angular/animations",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":95,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/ViewmyselfComponent.html":{}}}],["angular/compiler",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":85,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"dependencies.html":{}}}],["angular/core/testing/testing",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":87,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":91,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["anxiety",{"_index":732,"title":{},"body":{"components/QuestionsComponent.html":{},"components/TipsPageComponent.html":{}}}],["anxious",{"_index":653,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["anything",{"_index":708,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["api",{"_index":127,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["apibaseurl",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"index.html":{}}}],["app.component",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":182,"title":{"components/AppComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":346,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":406,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":358,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":68,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["artifacts",{"_index":982,"title":{},"body":{"index.html":{}}}],["assault",{"_index":696,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["assertive",{"_index":674,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["asserts",{"_index":751,"title":{},"body":{"components/RegisterComponent.html":{}}}],["attacks",{"_index":724,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["attend",{"_index":464,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["attendees",{"_index":541,"title":{},"body":{"interfaces/Gathering.html":{}}}],["attendees?:string",{"_index":545,"title":{},"body":{"interfaces/Gathering.html":{}}}],["attending",{"_index":468,"title":{},"body":{"components/EventsComponent.html":{}}}],["automatically",{"_index":974,"title":{},"body":{"index.html":{}}}],["available",{"_index":1003,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":686,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["avoidance",{"_index":707,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["backend",{"_index":160,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["based",{"_index":645,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["baseurl",{"_index":409,"title":{},"body":{"classes/AppPage.html":{}}}],["bcrypt.gensaltsync(10",{"_index":261,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["bcrypt.hashsync(pass",{"_index":264,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["bcryptjs",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["behaviors",{"_index":735,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["being",{"_index":665,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["body",{"_index":164,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"interfaces/Gathering.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{},"interfaces/User.html":{}}}],["boolval",{"_index":20,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["bootstrap",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["breath",{"_index":715,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["browse",{"_index":1001,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":416,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":981,"title":{},"body":{"index.html":{}}}],["c.a.l.m",{"_index":533,"title":{},"body":{"components/FooterComponent.html":{}}}],["c.a.l.m(center",{"_index":806,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["calm",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["carrying",{"_index":733,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["certain",{"_index":734,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["certified",{"_index":529,"title":{},"body":{"components/FooterComponent.html":{}}}],["change",{"_index":976,"title":{},"body":{"index.html":{}}}],["check",{"_index":998,"title":{},"body":{"index.html":{}}}],["checks",{"_index":627,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["chest",{"_index":716,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["choices",{"_index":646,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["cities",{"_index":21,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["city",{"_index":133,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/ViewmyselfComponent.html":{}}}],["city:string",{"_index":547,"title":{},"body":{"interfaces/Gathering.html":{},"interfaces/User.html":{}}}],["citynameadmin",{"_index":878,"title":{},"body":{"components/UserviewComponent.html":{}}}],["class",{"_index":97,"title":{"classes/AppPage.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":407,"title":{},"body":{"classes/AppPage.html":{}}}],["clears",{"_index":150,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["cli",{"_index":964,"title":{},"body":{"index.html":{}}}],["client",{"_index":644,"title":{},"body":{"components/QuestionsComponent.html":{},"injectables/UserService.html":{}}}],["clientmodule",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["clothes",{"_index":743,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["cluster_appmodule",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":162,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":176,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"overview.html":{}}}],["conditinal",{"_index":626,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["conditional",{"_index":327,"title":{},"body":{"components/AdminloginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{}}}],["confirm('are",{"_index":462,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["console.log(`${this.user.password",{"_index":325,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["console.log(`${this.user.username",{"_index":326,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["console.log(err",{"_index":469,"title":{},"body":{"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["console.log(newe",{"_index":135,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["console.log(newusers",{"_index":275,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(salt",{"_index":262,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(this.cities",{"_index":117,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(this.creategatheringform.get('isevent')?.value",{"_index":134,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["console.log(this.title",{"_index":461,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["console.log(this.value",{"_index":114,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["console.log(user",{"_index":321,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["const",{"_index":128,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/EventsService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["constant",{"_index":740,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["constructor(cookieservice",{"_index":579,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/TipsPageComponent.html":{}}}],["constructor(formbuilder",{"_index":37,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":827,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(loginservice",{"_index":779,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["constructor(private",{"_index":100,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"injectables/EventsService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":791,"title":{},"body":{"components/SupportGroupsComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["constructor(userapi",{"_index":866,"title":{},"body":{"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["containing",{"_index":124,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["contains",{"_index":801,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["content",{"_index":418,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cookie",{"_index":89,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":42,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{}}}],["cookieservice,private",{"_index":452,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["copyright",{"_index":534,"title":{},"body":{"components/FooterComponent.html":{}}}],["coverage",{"_index":896,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":754,"title":{},"body":{"components/RegisterComponent.html":{}}}],["createadmin",{"_index":222,"title":{},"body":{"components/AdmineditComponent.html":{},"injectables/UserService.html":{}}}],["createadmin(user",{"_index":829,"title":{},"body":{"injectables/UserService.html":{}}}],["createadminform",{"_index":218,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["created",{"_index":144,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["creategathering",{"_index":28,"title":{},"body":{"components/AddgatheringComponent.html":{},"injectables/EventsService.html":{}}}],["creategathering(gathering",{"_index":490,"title":{},"body":{"injectables/EventsService.html":{}}}],["creategatheringform",{"_index":22,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["creates",{"_index":137,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["createuser",{"_index":747,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["createuser(user",{"_index":831,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserform",{"_index":746,"title":{},"body":{"components/RegisterComponent.html":{}}}],["creats",{"_index":833,"title":{},"body":{"injectables/UserService.html":{}}}],["criticized",{"_index":666,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["data",{"_index":170,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["data=this.cookieservice.get('username",{"_index":453,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["days",{"_index":654,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["declarations",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declares",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["default",{"_index":70,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":47,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["delete",{"_index":872,"title":{},"body":{"components/UserviewComponent.html":{}}}],["deleted",{"_index":877,"title":{},"body":{"components/UserviewComponent.html":{}}}],["deleteuser",{"_index":822,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(username",{"_index":835,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":348,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":286,"title":{},"body":{"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{}}}],["detail",{"_index":171,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["details",{"_index":108,"title":{},"body":{"components/AddgatheringComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{}}}],["details?:string",{"_index":546,"title":{},"body":{"interfaces/Gathering.html":{}}}],["dev",{"_index":971,"title":{},"body":{"index.html":{}}}],["development",{"_index":966,"title":{},"body":{"index.html":{}}}],["different",{"_index":657,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["difficulty",{"_index":702,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["directive",{"_index":174,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["directives",{"_index":210,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":980,"title":{},"body":{"index.html":{}}}],["directory",{"_index":985,"title":{},"body":{"index.html":{}}}],["disaster",{"_index":698,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["display",{"_index":167,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["dist",{"_index":984,"title":{},"body":{"index.html":{}}}],["dizziness",{"_index":718,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["document.getelementbyid('p').innertext",{"_index":640,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["document.getelementbyid(`${i",{"_index":649,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["documentation",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["dreams",{"_index":705,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["dynamic",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["dynamictestmodule",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["e.city",{"_index":473,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e.details",{"_index":474,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e.occurrencedata",{"_index":472,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e.organizer.username",{"_index":475,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e.title",{"_index":471,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["e2e",{"_index":996,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":408,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":413,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:6",{"_index":414,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["east",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eating",{"_index":673,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["ei.city",{"_index":478,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["ei.username",{"_index":477,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["element",{"_index":147,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["element(by.css('app",{"_index":417,"title":{},"body":{"classes/AppPage.html":{}}}],["element.checked",{"_index":650,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["element.value",{"_index":651,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["embarrassed/humiliated",{"_index":667,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["end",{"_index":995,"title":{},"body":{"index.html":{}}}],["environment",{"_index":502,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apibaseurl",{"_index":508,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":331,"title":{},"body":{"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["error",{"_index":23,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["error.error",{"_index":154,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["error.error.message",{"_index":157,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["error.status",{"_index":163,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["errorevent",{"_index":156,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["errormessage",{"_index":290,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["errormessage:string",{"_index":309,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["errorr",{"_index":752,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors",{"_index":628,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["etc",{"_index":692,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["even",{"_index":668,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["event.target.value",{"_index":113,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["eventapi",{"_index":43,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["eventapi:eventsservice",{"_index":102,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["events",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{}}}],["events'},{'name",{"_index":185,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["events.component.html",{"_index":436,"title":{},"body":{"components/EventsComponent.html":{}}}],["events/events.component",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["eventscomponent",{"_index":184,"title":{"components/EventsComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsservice",{"_index":44,"title":{"injectables/EventsService.html":{}},"body":{"components/AddgatheringComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["eventtitle",{"_index":487,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventtitle(title",{"_index":492,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventtitleform",{"_index":437,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["everyday",{"_index":669,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["example",{"_index":737,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["exception",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{}}}],["excessive",{"_index":719,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["execute",{"_index":992,"title":{},"body":{"index.html":{}}}],["exhibiting",{"_index":700,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["experience",{"_index":713,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["experienced",{"_index":693,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["export",{"_index":96,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["exported",{"_index":821,"title":{},"body":{"injectables/UserService.html":{}}}],["exports",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/EventsService.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["f",{"_index":35,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["false",{"_index":79,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"miscellaneous/variables.html":{}}}],["fear",{"_index":664,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fearful",{"_index":679,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fears",{"_index":728,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["feel",{"_index":652,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{}}}],["files",{"_index":977,"title":{},"body":{"index.html":{}}}],["first",{"_index":282,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["flag",{"_index":987,"title":{},"body":{"index.html":{}}}],["flashbacks",{"_index":706,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fname",{"_index":252,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["fname:string",{"_index":816,"title":{},"body":{"interfaces/User.html":{}}}],["footer",{"_index":520,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":187,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["footer.component.html",{"_index":521,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":186,"title":{"components/FooterComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":647,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["form",{"_index":123,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["form.reset",{"_index":315,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["formbuilder",{"_index":38,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["formdata",{"_index":483,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["formdata:gathering",{"_index":505,"title":{},"body":{"injectables/EventsService.html":{}}}],["formdata:user",{"_index":850,"title":{},"body":{"injectables/UserService.html":{}}}],["formsmodule",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":597,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["frequently",{"_index":712,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["fristname",{"_index":890,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["frombuilder",{"_index":564,"title":{},"body":{"components/LoginComponent.html":{}}}],["further",{"_index":997,"title":{},"body":{"index.html":{}}}],["gathering",{"_index":24,"title":{"interfaces/Gathering.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"coverage.html":{}}}],["generate",{"_index":979,"title":{},"body":{"index.html":{}}}],["generated",{"_index":963,"title":{},"body":{"index.html":{}}}],["germs",{"_index":738,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["getf",{"_index":82,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["gethering",{"_index":139,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["gets",{"_index":229,"title":{},"body":{"components/AdmineditComponent.html":{},"classes/AppPage.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":960,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":411,"title":{},"body":{"classes/AppPage.html":{}}}],["getusers",{"_index":265,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["getusersbycookie",{"_index":823,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersbyname",{"_index":824,"title":{},"body":{"injectables/UserService.html":{}}}],["given",{"_index":840,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":683,"title":{},"body":{"components/QuestionsComponent.html":{},"index.html":{}}}],["graph",{"_index":1002,"title":{},"body":{"modules.html":{}}}],["great",{"_index":684,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["group",{"_index":168,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["groups",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/QuestionsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["groups'},{'name",{"_index":202,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["groups.component",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["groups.component.html",{"_index":778,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts",{"_index":777,"title":{},"body":{"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["groups.component.ts:16",{"_index":780,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:20",{"_index":786,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:21",{"_index":784,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:24",{"_index":783,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:25",{"_index":787,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:26",{"_index":790,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:27",{"_index":789,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:28",{"_index":788,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:29",{"_index":785,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:53",{"_index":782,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups.component.ts:59",{"_index":781,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["groups/support",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["handleerror",{"_index":29,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["handleerror(error",{"_index":57,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["handles",{"_index":153,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["handling",{"_index":98,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["hands",{"_index":742,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["having",{"_index":688,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["header",{"_index":484,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["headers",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["headersettings",{"_index":509,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["help",{"_index":528,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["helpline",{"_index":522,"title":{},"body":{"components/FooterComponent.html":{}}}],["here",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":594,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":173,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["http",{"_index":297,"title":{},"body":{"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"injectables/EventsService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["http://a9f0bbf7745324be4ade24e93f11495a",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":973,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":500,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httpclient,private",{"_index":506,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["httperror",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{}}}],["httperrorresponse",{"_index":58,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["httpheaders",{"_index":501,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httpheaders(headersettings",{"_index":511,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["httprequest",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["i=1",{"_index":648,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["id",{"_index":319,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{}}}],["identifier",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":671,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["if(this.admin",{"_index":588,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.creategatheringform.get('isevent')?.value",{"_index":120,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["if(this.data",{"_index":458,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["if(user.username",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["ignore",{"_index":250,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/QuestionsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["implementation",{"_index":99,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["import",{"_index":84,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["imports",{"_index":246,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{}}}],["include",{"_index":687,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["injectable",{"_index":480,"title":{"injectables/EventsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":481,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":767,"title":{},"body":{"components/RegisterComponent.html":{}}}],["injection",{"_index":689,"title":{},"body":{"components/QuestionsComponent.html":{},"injectables/UserService.html":{}}}],["input",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{},"components/QuestionsComponent.html":{}}}],["inserts",{"_index":146,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["instanceof",{"_index":155,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["intended",{"_index":526,"title":{},"body":{"components/FooterComponent.html":{}}}],["intense",{"_index":663,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["interface",{"_index":538,"title":{"interfaces/Gathering.html":{},"interfaces/User.html":{}},"body":{"interfaces/Gathering.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":539,"title":{},"body":{"interfaces/Gathering.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isadmin",{"_index":274,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["isevent",{"_index":109,"title":{},"body":{"components/AddgatheringComponent.html":{},"interfaces/Gathering.html":{}}}],["isevent:boolean",{"_index":548,"title":{},"body":{"interfaces/Gathering.html":{}}}],["iterates",{"_index":642,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["join",{"_index":793,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["joined",{"_index":794,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["jquery",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":994,"title":{},"body":{"index.html":{}}}],["know",{"_index":729,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["known",{"_index":722,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["last",{"_index":283,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["lastname",{"_index":892,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["lead",{"_index":739,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["legend",{"_index":172,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"overview.html":{}}}],["lengths",{"_index":685,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["lifestyle",{"_index":807,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["list",{"_index":485,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["literal",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lname",{"_index":253,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["lname:string",{"_index":815,"title":{},"body":{"interfaces/User.html":{}}}],["login",{"_index":287,"title":{},"body":{"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["login'},{'name",{"_index":189,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["login(f",{"_index":298,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.html",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":188,"title":{"components/LoginComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice",{"_index":292,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["loginservice:userservice",{"_index":310,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["logout",{"_index":592,"title":{},"body":{"components/NavbarComponent.html":{}}}],["longer",{"_index":711,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["loop",{"_index":638,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["lot",{"_index":656,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["making",{"_index":676,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["matching",{"_index":213,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mediation",{"_index":808,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["member",{"_index":796,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["members",{"_index":795,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["message",{"_index":151,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["method",{"_index":228,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["miscellaneous",{"_index":1009,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":618,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["models",{"_index":566,"title":{},"body":{"components/LoginComponent.html":{}}}],["models/gathering",{"_index":94,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{}}}],["models/user",{"_index":248,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":345,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":347,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":710,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["months",{"_index":661,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["more",{"_index":662,"title":{},"body":{"components/QuestionsComponent.html":{},"index.html":{}}}],["multiple",{"_index":567,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":51,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"index.html":{}}}],["navbar",{"_index":576,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":191,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["navbar.component.html",{"_index":577,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":190,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":972,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":412,"title":{},"body":{"classes/AppPage.html":{}}}],["network",{"_index":158,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["new",{"_index":138,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"injectables/EventsService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newe",{"_index":129,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["newusers",{"_index":270,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["next",{"_index":810,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["ng",{"_index":969,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":299,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["ngmodule",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["ngx",{"_index":88,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"dependencies.html":{}}}],["notfound",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":193,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["notfound.component",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notfound.component.html",{"_index":596,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfoundcomponent",{"_index":192,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nothiing",{"_index":803,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["null",{"_index":314,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["number",{"_index":812,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["object",{"_index":681,"title":{},"body":{"components/QuestionsComponent.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":142,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["occurrencedata",{"_index":107,"title":{},"body":{"components/AddgatheringComponent.html":{},"interfaces/Gathering.html":{}}}],["occurrencedata:string",{"_index":543,"title":{},"body":{"interfaces/Gathering.html":{}}}],["oncityselect",{"_index":31,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["oncityselect(event",{"_index":61,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["ondelete(username,password",{"_index":871,"title":{},"body":{"components/UserviewComponent.html":{}}}],["ongoing",{"_index":725,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["ontitleselect",{"_index":441,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["ontitleselect(event",{"_index":443,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["optional",{"_index":53,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["organizer",{"_index":542,"title":{},"body":{"interfaces/Gathering.html":{}}}],["organizer?:user",{"_index":544,"title":{},"body":{"interfaces/Gathering.html":{}}}],["otherwise",{"_index":721,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["out",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionsComponent.html":{},"index.html":{},"overview.html":{}}}],["outputs",{"_index":639,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["overview",{"_index":1004,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":938,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/TipsPageComponent.html":{}}}],["page'},{'name",{"_index":205,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["page.component",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":799,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page.component.ts",{"_index":798,"title":{},"body":{"components/TipsPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:14",{"_index":800,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page.component.ts:19",{"_index":804,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page.component.ts:24",{"_index":802,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["page/tips",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TipsPageComponent.html":{},"coverage.html":{}}}],["pain",{"_index":717,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["panic",{"_index":723,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["param",{"_index":313,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["particular",{"_index":680,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["pass",{"_index":258,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["passhash",{"_index":263,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["password",{"_index":255,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/ViewmyselfComponent.html":{}}}],["password:string",{"_index":818,"title":{},"body":{"interfaces/User.html":{}}}],["path",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paths",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["period",{"_index":659,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["perspiration",{"_index":720,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["plane",{"_index":691,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["please",{"_index":479,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["popper.js",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["presentational",{"_index":531,"title":{},"body":{"components/FooterComponent.html":{}}}],["presented",{"_index":643,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["previous",{"_index":809,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["private",{"_index":101,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["prod",{"_index":986,"title":{},"body":{"index.html":{}}}],["production",{"_index":988,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["professionals",{"_index":530,"title":{},"body":{"components/FooterComponent.html":{}}}],["profile",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":195,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["profile.component.html",{"_index":599,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile/viewmyself/viewmyself.component",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecomponent",{"_index":194,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":962,"title":{},"body":{"index.html":{}}}],["promise",{"_index":410,"title":{},"body":{"classes/AppPage.html":{}}}],["promises",{"_index":233,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["properties",{"_index":19,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["property",{"_index":125,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["prototype",{"_index":525,"title":{},"body":{"components/FooterComponent.html":{}}}],["protractor",{"_index":415,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provided",{"_index":820,"title":{},"body":{"injectables/UserService.html":{}}}],["providedin",{"_index":504,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":291,"title":{},"body":{"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["purpose",{"_index":532,"title":{},"body":{"components/FooterComponent.html":{}}}],["question",{"_index":634,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["questions",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/QuestionsComponent.html":{}}}],["questions'},{'name",{"_index":197,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["questions.component.html",{"_index":635,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["questions/questions.component",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["questionscomponent",{"_index":196,"title":{"components/QuestionsComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactive",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["reactiveformsmodule",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":999,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":641,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["record",{"_index":873,"title":{},"body":{"components/UserviewComponent.html":{}}}],["refresh",{"_index":32,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["refreshevents",{"_index":488,"title":{},"body":{"injectables/EventsService.html":{}}}],["refreshgroups",{"_index":489,"title":{},"body":{"injectables/EventsService.html":{}}}],["refreshlist",{"_index":825,"title":{},"body":{"injectables/UserService.html":{}}}],["refreshmap",{"_index":826,"title":{},"body":{"injectables/UserService.html":{}}}],["register",{"_index":278,"title":{},"body":{"components/AdmineditComponent.html":{},"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":199,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["register.component.html",{"_index":745,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":198,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":280,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["related",{"_index":709,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["relaxing",{"_index":703,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["relieve",{"_index":731,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["reload",{"_index":975,"title":{},"body":{"index.html":{}}}],["replace",{"_index":527,"title":{},"body":{"components/FooterComponent.html":{}}}],["require",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":169,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":515,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["reserved",{"_index":537,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["reseterror",{"_index":33,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["resetform",{"_index":294,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["resetform(form",{"_index":301,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["resets",{"_index":269,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["respectively",{"_index":841,"title":{},"body":{"injectables/UserService.html":{}}}],["response",{"_index":165,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["result",{"_index":212,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":699,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["results",{"_index":214,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":110,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":161,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["returns",{"_index":55,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"classes/AppPage.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["rights",{"_index":536,"title":{},"body":{"components/FooterComponent.html":{}}}],["rituals",{"_index":736,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["root",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":183,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["router",{"_index":41,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":368,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":968,"title":{},"body":{"index.html":{}}}],["running",{"_index":989,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":260,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":978,"title":{},"body":{"index.html":{}}}],["see",{"_index":284,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["serve",{"_index":970,"title":{},"body":{"index.html":{}}}],["server",{"_index":967,"title":{},"body":{"index.html":{}}}],["service",{"_index":90,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["services",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["services/events.service",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["services/user.service",{"_index":249,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{}}}],["set",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["shortness",{"_index":714,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["show",{"_index":438,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["showa",{"_index":578,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showmyc",{"_index":219,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["showmycontainer",{"_index":220,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["showmygathering",{"_index":221,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["shownotlogged",{"_index":439,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["silly",{"_index":730,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["site",{"_index":524,"title":{},"body":{"components/FooterComponent.html":{}}}],["situation",{"_index":682,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["situations",{"_index":670,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["small",{"_index":677,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["sorry",{"_index":333,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"index.html":{}}}],["span')).gettext",{"_index":419,"title":{},"body":{"classes/AppPage.html":{}}}],["speaking",{"_index":672,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["spec\\.ts",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts",{"_index":9,"title":{},"body":{"components/AddgatheringComponent.html":{},"coverage.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:105",{"_index":65,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:15",{"_index":69,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:16",{"_index":81,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:17",{"_index":78,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:18",{"_index":77,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:19",{"_index":80,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:20",{"_index":67,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:21",{"_index":74,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:23",{"_index":48,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:29",{"_index":60,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:39",{"_index":83,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:41",{"_index":62,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:46",{"_index":64,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:56",{"_index":54,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/addgathering/addgathering.component.ts:98",{"_index":59,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts",{"_index":215,"title":{},"body":{"components/AdmineditComponent.html":{},"coverage.html":{}}}],["src/app/adminedit/adminedit.component.ts:101",{"_index":235,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:111",{"_index":224,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:33",{"_index":244,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:34",{"_index":243,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:35",{"_index":238,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:36",{"_index":242,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:37",{"_index":237,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:39",{"_index":223,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:43",{"_index":239,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:44",{"_index":240,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:45",{"_index":241,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:49",{"_index":226,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:61",{"_index":225,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:68",{"_index":236,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:71",{"_index":245,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/adminedit.component.ts:95",{"_index":227,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts",{"_index":863,"title":{},"body":{"components/UserviewComponent.html":{},"coverage.html":{}}}],["src/app/adminedit/userview/userview.component.ts:11",{"_index":867,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts:13",{"_index":869,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminedit/userview/userview.component.ts:15",{"_index":868,"title":{},"body":{"components/UserviewComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts",{"_index":285,"title":{},"body":{"components/AdminloginComponent.html":{},"coverage.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:18",{"_index":307,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:19",{"_index":304,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:24",{"_index":305,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:25",{"_index":308,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:27",{"_index":295,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:31",{"_index":306,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:44",{"_index":302,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:61",{"_index":300,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/adminlogin/adminlogin.component.ts:91",{"_index":296,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["src/app/app",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/events/events.component.ts",{"_index":435,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/events/events.component.ts:22",{"_index":446,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:23",{"_index":448,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:24",{"_index":451,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:25",{"_index":450,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:26",{"_index":449,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:27",{"_index":447,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:55",{"_index":444,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:61",{"_index":442,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/footer/footer.component.ts",{"_index":519,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:103",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:24",{"_index":562,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":559,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":563,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":561,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:75",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/gathering.ts",{"_index":540,"title":{},"body":{"interfaces/Gathering.html":{},"coverage.html":{}}}],["src/app/models/user",{"_index":870,"title":{},"body":{"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["src/app/models/user.ts",{"_index":814,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":575,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:10",{"_index":580,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:22",{"_index":584,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:23",{"_index":583,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:24",{"_index":585,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":586,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:26",{"_index":581,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/notfound.component.ts",{"_index":595,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":598,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:14",{"_index":602,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:17",{"_index":615,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:19",{"_index":611,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:20",{"_index":612,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:21",{"_index":609,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:22",{"_index":616,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:23",{"_index":613,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:24",{"_index":614,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:27",{"_index":610,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:28",{"_index":604,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:41",{"_index":603,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:49",{"_index":606,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:58",{"_index":607,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:61",{"_index":617,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:63",{"_index":605,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:67",{"_index":608,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts",{"_index":882,"title":{},"body":{"components/ViewmyselfComponent.html":{},"coverage.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:11",{"_index":887,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:12",{"_index":884,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:13",{"_index":888,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:15",{"_index":886,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/profile/viewmyself/viewmyself.component.ts:26",{"_index":885,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["src/app/questions/questions.component.ts",{"_index":633,"title":{},"body":{"components/QuestionsComponent.html":{},"coverage.html":{}}}],["src/app/questions/questions.component.ts:19",{"_index":637,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":744,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:108",{"_index":756,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:112",{"_index":749,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":763,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":765,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":761,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":762,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":759,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":760,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:29",{"_index":748,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:41",{"_index":764,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:45",{"_index":753,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:63",{"_index":750,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:71",{"_index":757,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:80",{"_index":758,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:83",{"_index":766,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/services/events.service",{"_index":92,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["src/app/services/events.service.ts",{"_index":482,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/app/services/events.service.ts:13",{"_index":499,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:14",{"_index":497,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:15",{"_index":498,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:16",{"_index":496,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:25",{"_index":494,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:31",{"_index":495,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:37",{"_index":493,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/events.service.ts:44",{"_index":491,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/app/services/user.service",{"_index":93,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":819,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:13",{"_index":849,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:14",{"_index":847,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:15",{"_index":848,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:16",{"_index":846,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:20",{"_index":828,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:34",{"_index":832,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:40",{"_index":830,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:50",{"_index":837,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:57",{"_index":839,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:62",{"_index":838,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:68",{"_index":842,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:74",{"_index":843,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:79",{"_index":836,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:83",{"_index":845,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/support",{"_index":776,"title":{},"body":{"components/SupportGroupsComponent.html":{},"coverage.html":{}}}],["src/app/tips",{"_index":797,"title":{},"body":{"components/TipsPageComponent.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":503,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":148,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["started",{"_index":961,"title":{"index.html":{}},"body":{}}],["statement",{"_index":328,"title":{},"body":{"components/AdminloginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{}}}],["statements",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":166,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["stored",{"_index":983,"title":{},"body":{"index.html":{}}}],["string",{"_index":75,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/ViewmyselfComponent.html":{}}}],["string,password",{"_index":858,"title":{},"body":{"injectables/UserService.html":{}}}],["submit",{"_index":636,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["submitted",{"_index":25,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(res",{"_index":875,"title":{},"body":{"components/UserviewComponent.html":{}}}],["successfully",{"_index":320,"title":{},"body":{"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["support",{"_index":201,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"modules.html":{}}}],["supportgroupscomponent",{"_index":200,"title":{"components/SupportGroupsComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sure",{"_index":463,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["svg",{"_index":1000,"title":{},"body":{"modules.html":{}}}],["symptoms",{"_index":701,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["table",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":590,"title":{},"body":{"components/NavbarComponent.html":{}}}],["talk",{"_index":678,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["test",{"_index":591,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tests",{"_index":991,"title":{},"body":{"index.html":{}}}],["text",{"_index":72,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["then(res",{"_index":466,"title":{},"body":{"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/SupportGroupsComponent.html":{},"injectables/UserService.html":{}}}],["things",{"_index":658,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["this.boolval",{"_index":121,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.cities",{"_index":116,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.cookieservice.deleteall",{"_index":311,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{}}}],["this.cookieservice.get('isadmin",{"_index":582,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.cookieservice.get('password",{"_index":517,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.cookieservice.get('username",{"_index":445,"title":{},"body":{"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/SupportGroupsComponent.html":{},"injectables/UserService.html":{}}}],["this.cookieservice.set('isadmin",{"_index":324,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.cookieservice.set('password',`${this.user.password",{"_index":323,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.cookieservice.set('username',`${this.user.username",{"_index":322,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.createadminform",{"_index":251,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.controls",{"_index":257,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('fname')?.value",{"_index":271,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('lname')?.value",{"_index":272,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('password')?.value",{"_index":259,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.createadminform.get('username')?.value",{"_index":273,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.creategatheringform",{"_index":105,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.creategatheringform.controls",{"_index":111,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.creategatheringform.get('details')?.value",{"_index":132,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.creategatheringform.get('occurrencedata')?.value",{"_index":131,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.creategatheringform.get('title').value",{"_index":130,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.createuserform",{"_index":768,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.controls",{"_index":769,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('fname')?.value",{"_index":771,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('lname')?.value",{"_index":772,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('password')?.value",{"_index":770,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.createuserform.get('username')?.value",{"_index":773,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.error",{"_index":140,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["this.eventapi.creategathering(newe",{"_index":136,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.eventapi.eventtitle(this.title",{"_index":465,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.eventapi.refreshevents",{"_index":456,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.eventapi.refreshgroups",{"_index":792,"title":{},"body":{"components/SupportGroupsComponent.html":{}}}],["this.eventtitleform",{"_index":455,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.formbuilder.group",{"_index":71,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.formdata.password",{"_index":855,"title":{},"body":{"injectables/UserService.html":{}}}],["this.formdata.username",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["this.gathering.unshift(gethering",{"_index":145,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.handleerror(err",{"_index":332,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.handleerror(error",{"_index":152,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["this.header",{"_index":510,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.http.delete(`${this.url}/api/users",{"_index":859,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.url}/api/gathering/events",{"_index":512,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.get(`${this.url}/api/gathering/groups",{"_index":516,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.get(`${this.url}/api/users",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.url}/api/users/${username}/${password",{"_index":856,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get>(`${this.url}/api/map",{"_index":857,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.url}/api/admin/${username}/${password",{"_index":852,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.url}/api/gathering/${username}/${password",{"_index":518,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.post(`${this.url}/api/users",{"_index":851,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${this.url}/api/users/${username}/${password",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["this.list",{"_index":514,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.loginservice.formdata",{"_index":316,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.loginservice.getusersbyname().then",{"_index":317,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.refresh",{"_index":104,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.reseterror",{"_index":149,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.resetform",{"_index":312,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/adminedit",{"_index":330,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":775,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/support",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.show",{"_index":457,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.showa",{"_index":587,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.shownotlogged",{"_index":459,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.submitted",{"_index":118,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.title",{"_index":460,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.toastr.error('admin",{"_index":277,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.toastr.error('error",{"_index":141,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.toastr.error('user",{"_index":629,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastr.info('admin",{"_index":279,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.toastr.info('gathering",{"_index":143,"title":{},"body":{"components/AddgatheringComponent.html":{}}}],["this.toastr.info('get",{"_index":318,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["this.toastr.info('user",{"_index":631,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastr.warning('add",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastr.warning('added",{"_index":467,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["this.toastr.warning('deleted",{"_index":876,"title":{},"body":{"components/UserviewComponent.html":{}}}],["this.updateuserform",{"_index":619,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.controls",{"_index":620,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.get('fname').value",{"_index":621,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.get('lname').value",{"_index":622,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.get('password').value",{"_index":624,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserform.get('username').value",{"_index":623,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.url",{"_index":507,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["this.user",{"_index":267,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["this.user.unshift(user",{"_index":281,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userapi.createadmin(newusers",{"_index":276,"title":{},"body":{"components/AdmineditComponent.html":{}}}],["this.userapi.createuser(newusers",{"_index":774,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userapi.deleteuser(username,password",{"_index":874,"title":{},"body":{"components/UserviewComponent.html":{}}}],["this.userapi.getusers",{"_index":266,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userapi.getusersbycookie",{"_index":889,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["this.userapi.refreshlist",{"_index":805,"title":{},"body":{"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{}}}],["this.userapi.refreshmap",{"_index":115,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userapi.updateuser(newusers",{"_index":625,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.value",{"_index":112,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/EventsComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["thoughts",{"_index":727,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["through",{"_index":231,"title":{},"body":{"components/AdmineditComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{}}}],["tips",{"_index":204,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["tipspage",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tipspagecomponent",{"_index":203,"title":{"components/TipsPageComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["title",{"_index":106,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/SupportGroupsComponent.html":{}}}],["title:string",{"_index":454,"title":{},"body":{"components/EventsComponent.html":{},"interfaces/Gathering.html":{},"components/SupportGroupsComponent.html":{}}}],["titledateslocationdetailsorganizer",{"_index":470,"title":{},"body":{"components/EventsComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["tittle",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["toastr",{"_index":39,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":40,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/UserviewComponent.html":{}}}],["toastrservice,public",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["topromise",{"_index":513,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["tostrmodule",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["total",{"_index":811,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["traumatic",{"_index":694,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["travelling",{"_index":690,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["true",{"_index":119,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":334,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{}}}],["tslib",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":52,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u.city",{"_index":879,"title":{},"body":{"components/UserviewComponent.html":{}}}],["u.isadmin",{"_index":881,"title":{},"body":{"components/UserviewComponent.html":{}}}],["u.username",{"_index":880,"title":{},"body":{"components/UserviewComponent.html":{}}}],["undefined",{"_index":76,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["unit",{"_index":990,"title":{},"body":{"index.html":{}}}],["unwanted/intrusive",{"_index":726,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["update",{"_index":630,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updated",{"_index":632,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updates",{"_index":476,"title":{},"body":{"components/EventsComponent.html":{}}}],["updateuser",{"_index":601,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["updateuser(user",{"_index":844,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserform",{"_index":600,"title":{},"body":{"components/ProfileComponent.html":{}}}],["upsetting",{"_index":704,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["url",{"_index":486,"title":{},"body":{"injectables/EventsService.html":{},"injectables/UserService.html":{}}}],["use",{"_index":232,"title":{},"body":{"components/AdmineditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["used",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{}}}],["user",{"_index":122,"title":{"interfaces/User.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Gathering.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{}}}],["user).topromise",{"_index":862,"title":{},"body":{"injectables/UserService.html":{}}}],["user.city",{"_index":894,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["user.fname",{"_index":891,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["user.lname",{"_index":893,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["user.password",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["user.username",{"_index":895,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["userapi",{"_index":45,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["userapi:userservice",{"_index":103,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["userapi?.list?.length",{"_index":813,"title":{},"body":{"components/TipsPageComponent.html":{}}}],["userform",{"_index":293,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["username",{"_index":254,"title":{},"body":{"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"injectables/EventsService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/ViewmyselfComponent.html":{}}}],["username:string",{"_index":817,"title":{},"body":{"interfaces/User.html":{}}}],["users",{"_index":230,"title":{},"body":{"components/AdmineditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{}}}],["userservice",{"_index":46,"title":{"injectables/UserService.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userview",{"_index":864,"title":{},"body":{"components/UserviewComponent.html":{}}}],["userview'},{'name",{"_index":207,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["userview.component.html",{"_index":865,"title":{},"body":{"components/UserviewComponent.html":{}}}],["userviewcomponent",{"_index":206,"title":{"components/UserviewComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":268,"title":{},"body":{"components/AdmineditComponent.html":{},"components/RegisterComponent.html":{}}}],["using",{"_index":834,"title":{},"body":{"injectables/UserService.html":{}}}],["utilized",{"_index":329,"title":{},"body":{"components/AdminloginComponent.html":{}}}],["validates",{"_index":755,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validation",{"_index":560,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators",{"_index":86,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["validators.minlength(6",{"_index":256,"title":{},"body":{"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":73,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{}}}],["validtors",{"_index":565,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":126,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":175,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["variable",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1010,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":965,"title":{},"body":{"index.html":{}}}],["via",{"_index":993,"title":{},"body":{"index.html":{}}}],["view",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["viewmyself",{"_index":209,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["viewmyself.component.html",{"_index":883,"title":{},"body":{"components/ViewmyselfComponent.html":{}}}],["viewmyselfcomponent",{"_index":208,"title":{"components/ViewmyselfComponent.html":{}},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{},"coverage.html":{},"overview.html":{}}}],["void",{"_index":56,"title":{},"body":{"components/AddgatheringComponent.html":{},"components/AdmineditComponent.html":{},"components/AdminloginComponent.html":{},"components/EventsComponent.html":{},"injectables/EventsService.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProfileComponent.html":{},"components/QuestionsComponent.html":{},"components/RegisterComponent.html":{},"components/SupportGroupsComponent.html":{},"components/TipsPageComponent.html":{},"injectables/UserService.html":{},"components/UserviewComponent.html":{},"components/ViewmyselfComponent.html":{}}}],["war",{"_index":695,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["washing",{"_index":741,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["work",{"_index":675,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["worrying",{"_index":655,"title":{},"body":{"components/QuestionsComponent.html":{}}}],["x1f3e0;home",{"_index":589,"title":{},"body":{"components/NavbarComponent.html":{}}}],["yes",{"_index":303,"title":{},"body":{"components/AdminloginComponent.html":{},"components/LoginComponent.html":{}}}],["zone.js",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddgatheringComponent.html":{"url":"components/AddgatheringComponent.html","title":"component - AddgatheringComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddgatheringComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminedit/addgathering/addgathering.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addgathering\n            \n\n\n\n\n            \n                templateUrl\n                ./addgathering.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boolval\n                            \n                            \n                                cities\n                            \n                            \n                                CreateGatheringForm\n                            \n                            \n                                error\n                            \n                            \n                                Gathering\n                            \n                            \n                                submitted\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateGathering\n                            \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCitySelect\n                            \n                            \n                                refresh\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, toastr: ToastrService, router: Router, CookieService: CookieService, eventApi: EventsService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminedit/addgathering/addgathering.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventApi\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateGathering\n                        \n                        \n                    \n                \n            \n            \n                \nCreateGathering()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCitySelect\n                        \n                        \n                    \n                \n            \n            \n                \nonCitySelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boolval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateGatheringForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Gathering\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gathering[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/adminedit/addgathering/addgathering.component.ts:39\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { EventsService } from 'src/app/services/events.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Gathering from '../../models/Gathering';\nimport { HttpErrorResponse } from '@angular/common/http';\n@Component({\n  selector: 'app-addgathering',\n  templateUrl: './addgathering.component.html'\n})\nexport class AddgatheringComponent implements OnInit {\n  cities: Array;\nvalue: string;\nGathering: Gathering[] = [];\nerror: string | undefined; // error handling implementation\nsubmitted = false;\nboolval: boolean;\n  CreateGatheringForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n  constructor(private formBuilder: FormBuilder, private toastr: ToastrService,\n    private router: Router,  private CookieService: CookieService,\n     private eventApi:EventsService,\n     private userApi:UserService) { }\n\n  ngOnInit(){\n    this.refresh()\n    \n    this.CreateGatheringForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      occurrenceData: ['', Validators.required],\n      details: ['', Validators.required],\n   isEvent:['']\n  });\n  }\n  get f() { return this.CreateGatheringForm.controls; }\n\n  onCitySelect(event) {\n    this.value= event.target.value;\n    console.log(this.value)\n}\n\nrefresh(){\n  return this.userApi.refreshMap()\n  .then(\n    cities => {\n      this.cities= cities;\n      console.log(this.cities)\n    })\n\n}\n\nCreateGathering() {\n  this.submitted = true;\n  if(this.CreateGatheringForm.get('isEvent')?.value == \"true\"){\n   this.boolval = true\n  }\n  else{\n    this.boolval = false\n  }\n  /**\n   * User form containing property values from API\n   */\n  const newE: Gathering = {\n    title: this.CreateGatheringForm.get('title').value,\n    occurrenceData: this.CreateGatheringForm.get('occurrenceData')?.value,\n    details: this.CreateGatheringForm.get('details')?.value,  \n    city:  this.value,\n    isEvent: this.boolval,\n  \n  };\n  console.log(this.CreateGatheringForm.get('isEvent')?.value)\nconsole.log(newE)\n\n  this.eventApi.CreateGathering(newE) // creates new user\n    .then(\n      Gethering => {\n        if (this.error) {\n\n         this.toastr.error('Error occurred', 'Error');\n\n\n        } else {\n          this.toastr.info('Gathering Created', 'Created');\n\n          this.Gathering.unshift(Gethering); //inserts new element at start of array\n          this.resetError(); //clears error message\n        }\n      },\n      error => this.handleError(error) //handles error message\n    );\n\n\n}\nhandleError(error: HttpErrorResponse) {\n  if (error.error instanceof ErrorEvent) {\n    this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n  } else {\n    this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n  }\n}\nresetError() {\n  this.error = undefined; //clears error message\n}\n\n}\n\n    \n\n    \n        \n   \n\n        \n\n\n            Add an event or Group\n\n\n         Title:\n             \n                 \n                     Title is required\n                 \n         \n         Data:\n             \n                 \n                     Data is required\n                 \n         \n         Details:\n             \n                 \n                     Detail required\n                 \n         \n         City:\n             \n             \n           {{city}}\n             \n         \n          \n         Event or Group:\n             Event\n                 Group\n         \n\n\n         \n             Add\n     \n     \n         {{ error }}\n     \n\n\n\n\n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                       Add an event or Group         Title:                                                   Title is required                                   Data:                                                   Data is required                                   Details:                                                   Detail required                                   City:                                     {{city}}                                         Event or Group:             Event                 Group                               Add                   {{ error }}         '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddgatheringComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdmineditComponent.html":{"url":"components/AdmineditComponent.html","title":"component - AdmineditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdmineditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminedit/adminedit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adminedit\n            \n\n\n\n\n            \n                templateUrl\n                ./adminedit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreateAdminForm\n                            \n                            \n                                error\n                            \n                            \n                                showMyC\n                            \n                            \n                                showMyContainer\n                            \n                            \n                                showMyGathering\n                            \n                            \n                                submitted\n                            \n                            \n                                User\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateAdmin\n                            \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCitySelect\n                            \n                            \n                                refresh\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, toastr: ToastrService, router: Router, CookieService: CookieService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminedit/adminedit.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateAdmin\n                        \n                        \n                    \n                \n            \n            \n                \nCreateAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCitySelect\n                        \n                        \n                    \n                \n            \n            \n                \nonCitySelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:95\n                \n            \n\n\n            \n                \n                    method that gets users through the use of promises to accept response from api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/adminedit.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateAdminForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showMyC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showMyContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showMyGathering\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/adminedit.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/adminedit/adminedit.component.ts:71\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; // imports component OnInit\n\n/**\n * app admin component.\n */\n\n//import { Component, OnInit } from '@angular/core';\nimport User from '../models/User';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'app-adminedit',\n  templateUrl: './adminedit.component.html'\n})\nexport class AdmineditComponent implements OnInit {\n\n// constructor with no parameters\n\n/**\n * @ignore\n */\ncities: Array;\nvalue: string;\n  User: User[] = [];\n  error: string | undefined; // error handling implementation\n  submitted = false;\n  CreateAdminForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n  constructor(private formBuilder: FormBuilder, private toastr: ToastrService,\n    private router: Router,  private CookieService: CookieService,\n     private userApi:UserService) { }\n     showMyC: boolean = false;\n     showMyContainer: boolean = false;\n     showMyGathering: boolean = false;\n\n\n\n  ngOnInit() {\n    this.refresh()\n    \n    this.CreateAdminForm = this.formBuilder.group({\n      fName: ['', Validators.required],\n      lName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n\n  });\n  }\n\n    handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n      } else {\n        this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n      }\n    }\n    resetError() {\n      this.error = undefined; //clears error message\n    }\n    get f() { return this.CreateAdminForm.controls; }\n\n  //  const pass= this.CreateAdminForm.get('password')?.value;\n  //  const salt =  bcrypt.genSaltSync(10);\n  //  console.log(salt)\n  // const  passhash = bcrypt.hashSync(pass, salt);\n\n\n  /**\n   * method that gets users through the use of promises to accept response from api\n   */\n\n    // getUsers() {\n    //   return this.userApi.getUsers()\n    //     .then(\n    //       User => {\n    //         this.User = User; //uses promises to accept the api response\n    //         this.resetError(); //resets error message\n    //       },\n    //       error => {\n    //         this.handleError(error); //handles error\n    //       }\n    //     );\n    // }\n    onCitySelect(event) {\n      this.value= event.target.value;\n      console.log(this.value)\n  }\n\n  \n  refresh(){\n    return this.userApi.refreshMap()\n    .then(\n      cities => {\n        this.cities= cities;\n        console.log(this.cities)\n      })\n \n  }\n\n    CreateAdmin() {\n      this.submitted = true;\n      /**\n       * User form containing property values from API\n       */\n      const newUsers: User = {\n        fName: this.CreateAdminForm.get('fName')?.value,\n        lName: this.CreateAdminForm.get('lName')?.value,\n        username: this.CreateAdminForm.get('username')?.value,\n        password: this.CreateAdminForm.get('password')?.value,\n        city:  this.value,\n        isAdmin: true,\n\n      };\n  console.log(newUsers)\n\n      this.userApi.CreateAdmin(newUsers) // creates new user\n        .then(\n          User => {\n            if (this.error) {\n\n             this.toastr.error('Admin Register', 'Error');\n\n\n            } else {\n              this.toastr.info('Admin Created', 'registered');\n\n              this.User.unshift(User); //inserts new element at start of array\n              this.resetError(); //clears error message\n            }\n          },\n          error => this.handleError(error) //handles error message\n        );\n\n\n  }\n\n  }\n\n    \n\n    \n        \n\n\n\n    \n\n                \n                    Add new Admin\n        \n                    \n\n                    \n\n\n                           Add an admin\n\n\n                        First Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        Last Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        Admin Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        City:\n                            \n                            \n                          {{city}}\n                            \n                        \n                         \n                         password:\n                            \n                                \n                                    password is required\n                                \n                        \n\n\n                        \n                            Register\n                    \n                    \n                        {{ error }}\n                    \n                \n                See all users\n              \n                \n              \n                    \n                \n\n                Add a new Gathering\n              \n                \n              \n                    \n                \n\n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Add new Admin                                                                           Add an admin                        First Name:                                                                                                Name is required                                                                                Last Name:                                                                                                Name is required                                                                                Admin Name:                                                                                                Name is required                                                                                City:                                                                                  {{city}}                                                                                                      password:                                                                                                password is required                                                                                                            Register                                                                {{ error }}                                                    See all users                                                                                                Add a new Gathering                                                                                            '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdmineditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminloginComponent.html":{"url":"components/AdminloginComponent.html","title":"component - AdminloginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminloginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminlogin/adminlogin.component.ts\n\n\n    \n        Description\n    \n    \n        app admin login component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adminlogin\n            \n\n\n\n\n            \n                templateUrl\n                ./adminlogin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Public\n                                LoginService\n                            \n                            \n                                user\n                            \n                            \n                                UserForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                Login\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, toastr: ToastrService, LoginService: UserService, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminlogin/adminlogin.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LoginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminlogin/adminlogin.component.ts:91\n                \n            \n\n\n            \n                \n                    this is an HTTP error handling method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Login\n                        \n                        \n                    \n                \n            \n            \n                \nLogin(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminlogin/adminlogin.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm(form?: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminlogin/adminlogin.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:24\n                            \n                        \n\n                \n                    \n                        error message form for user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            LoginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminlogin/adminlogin.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, NgForm } from '@angular/forms';\nimport User from '../models/User';\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n/**\n * app admin login component.\n */\n@Component({\n  selector: 'app-adminlogin',\n  templateUrl: './adminlogin.component.html'\n})\nexport class AdminloginComponent implements OnInit {\n  user : User;\n  error: string | undefined;\n\n  /**\n   * error message form for user.\n   */\n  errorMessage:string;\n  UserForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService,\n    public LoginService:UserService,\n    private cookieService: CookieService,) { }\n    /**\n     * @ignore\n     */\n  ngOnInit(): void {\n    this.cookieService.deleteAll();\n    this.resetForm();\n  }\n  /**\n   *\n   * @param form \n   */\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.reset();\n    this.LoginService.formData = {\n  \n      fName: '',\n      lName: '',\n      username: '',\n      password:'',\n      city:'',\n      isAdmin: false,\n    }\n  }\n  /**\n   *\n   * @param f\n   */\n  Login(f: NgForm) {\n    return  this.LoginService.getUsersByName().then(\n         user => {\n           this.toastr.info('Get By id successfully', 'Get user by id');\n           this.user = user;\n           console.log(user);\n           this.cookieService.set('username',`${this.user.username}`);\n           this.cookieService.set('password',`${this.user.password}`);\n           this.cookieService.set('isAdmin', 'true')\n           console.log(`${this.user.password}`)\n        \n           console.log(`${this.user.username}`)\n\n          /**\n           * Conditional statement utilized.\n           */\n   \n       this.router.navigate(['/adminedit']);\n           \n\n         },\n         err => {\n          this.handleError(err) \n         }\n       )\n     }\n     /**\n      * this is an HTTP error handling method.\n      * @param error\n      */\n     handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n      } else {\n        this.error = `Sorry try again, error ${error.status}, ${error.error.message}`; //If the response status code was an error then display said error\n        }\n    }\n\n}\n\n    \n\n    \n        \n\n    \n     \n            \n  \n\n  \n              \n                \n                 \n                Admin name\n  \n                \n                  password\n                \n  \n  \n                \n  \n                AdminLogin\n                \n                      {{error}}  \n                  \n                \n                \n\n  \n  \n              \n            \n          \n        \n        \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Admin name                                    password                                                      AdminLogin                                      {{error}}                                                                                                                          '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminloginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        app-root component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Calm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * app-root component\n */\n @Component({\n   selector: 'app-root',\n   templateUrl: './app.component.html'\n })\n /**\n  * Application tittle set here\n  */\n export class AppComponent {\n   title = 'Calm';\n }\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddgatheringComponent\n\nAddgatheringComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddgatheringComponent->AppModule\n\n\n\n\n\nAdmineditComponent\n\nAdmineditComponent\n\nAppModule -->\n\nAdmineditComponent->AppModule\n\n\n\n\n\nAdminloginComponent\n\nAdminloginComponent\n\nAppModule -->\n\nAdminloginComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nAppModule -->\n\nQuestionsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSupportGroupsComponent\n\nSupportGroupsComponent\n\nAppModule -->\n\nSupportGroupsComponent->AppModule\n\n\n\n\n\nTipsPageComponent\n\nTipsPageComponent\n\nAppModule -->\n\nTipsPageComponent->AppModule\n\n\n\n\n\nUserviewComponent\n\nUserviewComponent\n\nAppModule -->\n\nUserviewComponent->AppModule\n\n\n\n\n\nViewmyselfComponent\n\nViewmyselfComponent\n\nAppModule -->\n\nViewmyselfComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddgatheringComponent\n                        \n                        \n                            AdmineditComponent\n                        \n                        \n                            AdminloginComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            EventsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotfoundComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            QuestionsComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            SupportGroupsComponent\n                        \n                        \n                            TipsPageComponent\n                        \n                        \n                            UserviewComponent\n                        \n                        \n                            ViewmyselfComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\n/**\n * imports of all components from each individual component\n */\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TipsPageComponent } from './tips-page/tips-page.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n/**\n * imports HTTP clientmodule and reactive form.\n */\nimport { HttpClientModule, HttpRequest } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n//import { DynamicTestModule} from '@angular/core/testing/testing'\n\n/**\n * imports a cookieservice and a tostrmodule.\n */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {ToastrModule} from 'ngx-toastr';\nimport {CookieService} from 'ngx-cookie-service';\nimport { NotfoundComponent } from './notfound.component';\nimport { EventsComponent } from './events/events.component';\nimport { SupportGroupsComponent } from './support-groups/support-groups.component';\nimport { QuestionsComponent } from './questions/questions.component';\n\n\n\n/**\n * ngModule that declares all components\n */\n\nimport { AdminloginComponent } from './adminlogin/adminlogin.component';\nimport { AdmineditComponent } from './adminedit/adminedit.component';\nimport { UserService } from './services/user.service';\nimport { UserviewComponent } from './adminedit/userview/userview.component';\n\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { EventsService } from './services/events.service';\nimport { AddgatheringComponent } from './adminedit/addgathering/addgathering.component';\nimport { ViewmyselfComponent } from './profile/viewmyself/viewmyself.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    TipsPageComponent,\n    LoginComponent,\n    RegisterComponent,\n    NotfoundComponent,\n    EventsComponent,\n    SupportGroupsComponent,\n    QuestionsComponent,\n    AdminloginComponent,\n    AdmineditComponent,\n    UserviewComponent,\n    ProfileComponent,\n    AddgatheringComponent,\n    ViewmyselfComponent\n  ],\n  imports: [\n\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forRoot([])\n  ],\n  providers: [CookieService, UserService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n            \n                Description\n            \n            \n                export class Apppage that returns the baseUrl as Promise\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n                    gets tittle method that returns an element.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor'; // imports from a protractor\n/**\n * export class Apppage that returns the baseUrl as Promise\n */\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n  /**\n   *  gets tittle method that returns an element.\n   */\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'; //imports from ngmodule\nimport { Routes, RouterModule} from '@angular/router'; // imports angular routing module\nimport { TipsPageComponent } from './tips-page/tips-page.component'; // imports from tipspage component\nimport { LoginComponent } from './login/login.component'; // imports from login component\nimport { RegisterComponent } from './register/register.component'; // imports from register component\nimport { NotfoundComponent } from './notfound.component'; // imports from the Notfound component.\nimport { EventsComponent } from './events/events.component'; // imports event component\nimport { SupportGroupsComponent } from './support-groups/support-groups.component';\nimport { QuestionsComponent } from './questions/questions.component'; // imports questions component\n\n\n/**\n * Routing paths for all components on the user view page.\n */\n\nimport { AdminloginComponent } from './adminlogin/adminlogin.component';\nimport { AdmineditComponent } from './adminedit/adminedit.component';\nimport { ProfileComponent } from './profile/profile.component';\n/**\n * routing paths for each component.\n */\nconst routes: Routes = [\n  { path: '', component: TipsPageComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'adminlogin', component: AdminloginComponent },\n  { path: 'adminedit', component: AdmineditComponent },\n  { path: 'events', component: EventsComponent },\n  { path: 'questions', component: QuestionsComponent },\n  { path: 'support-groups', component: SupportGroupsComponent },\n  { path: 'notfound', component: NotfoundComponent },\n  { path: 'profile', component: ProfileComponent }\n]\n/**\n * imports and exports of Router\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/events.component.ts\n\n\n    \n        Description\n    \n    \n        Event component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                EventTitleForm\n                            \n                            \n                                show\n                            \n                            \n                                shownotlogged\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddUser\n                            \n                            \n                                onTitleSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddUser\n                        \n                        \n                    \n                \n            \n            \n                \nAddUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/events.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTitleSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonTitleSelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/events.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventTitleForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownotlogged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events/events.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { EventsService } from '../services/events.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport Gathering from '../models/Gathering';\n/**\n * Event component\n */\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html'\n})\nexport class EventsComponent implements OnInit {\n \n/**\n * @ignore\n */\n  constructor( public eventApi:EventsService,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,private toastr: ToastrService) { }\n  data=this.cookieService.get('username');\n   show: boolean = false;\n   value: string;\n   title:string;\n   shownotlogged: boolean = false;\n   EventTitleForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n  /**\n * @ignore\n */\n  ngOnInit() {\n\n    this.EventTitleForm = this.formBuilder.group({\n    title: ['', Validators.required],\n  });\n    \n    this.eventApi.refreshevents();\n    this.show = false;\n    if(this.data != \"\"){\n this.show = true;\n    }\n    else\n    this.show = false;\n\n    this.shownotlogged = true;\n    if(this.data != \"\"){\n this.shownotlogged = false;\n    }\n    else\n    this.shownotlogged = true;\n  }\n\n  onTitleSelect(event) {\n    this.value= event.target.value;\n    console.log(this.value)\n}\n\n\nAddUser(){\n   this.title= this.value;\n   console.log(this.title)\n  if (confirm('Are you sure to attend this event ?')) {\n    this.eventApi.EventTitle(this.title)\n      .then(res => {\n       \n      console.log(this.title)\n        this.toastr.warning('added successfully', 'Attending event');\n      },\n        err => {\n         \n          console.log(err);\n        })\n  }}\n \n}\n\n    \n\n    \n        \n  \n    \n    events\n        TitleDatesLocationDetailsOrganizer\n          \n            \n            {{e.title}}\n            {{e.occurrenceData}} \n            {{e.city}} \n            {{e.details}}\n            {{e.organizer.username}}\n\n          \n\n        \n    \n       Event updates: \n            \n            \n              \n                {{ei.username}} from, {{ei.city}} is attending {{e.title}} \n                 \n              \n           \n            \n  \n          \n  \n\n      \n        \n          \n            Title:\n              \n              \n            {{e.title}}\n              \n          \n           \n          \n          \n           Attend\n         \n\n\n        \n          \n           Please login to attend an event\n          \n        \n     \n    \n    \n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          events        TitleDatesLocationDetailsOrganizer                                  {{e.title}}            {{e.occurrenceData}}             {{e.city}}             {{e.details}}            {{e.organizer.username}}                             Event updates:                                                       {{ei.username}} from, {{ei.city}} is attending {{e.title}}                                                                                                         Title:                                        {{e.title}}                                                                  Attend                                      Please login to attend an event                               '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/events.service.ts\n        \n\n            \n                Description\n            \n            \n                injectable method that exports event service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formData\n                            \n                            \n                                header\n                            \n                            \n                                list\n                            \n                            \n                                Url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateGathering\n                            \n                            \n                                EventTitle\n                            \n                            \n                                refreshevents\n                            \n                            \n                                refreshgroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateGathering\n                        \n                        \n                    \n                \n            \n            \n                \nCreateGathering(Gathering: Gathering)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/events.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Gathering\n                                    \n                                                Gathering\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            EventTitle\n                        \n                        \n                    \n                \n            \n            \n                \nEventTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/events.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshevents\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshevents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/events.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshgroups\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshgroups()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/events.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gathering\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gathering[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/events.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { environment } from 'src/environments/environment';\nimport Gathering from '../models/Gathering';\n/**\n * injectable method that exports event service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  Url: string;\n  header: any;\n  list: Gathering[];\n  formData:Gathering;\n/**\n * @ignore\n */\n  constructor(private http: HttpClient,private CookieService: CookieService) { \n  this.Url = environment.ApiBaseUrl;\n  const headerSettings: { [name: string]: string | string[]; } = {};\n  this.header = new HttpHeaders(headerSettings);\n  }\n  refreshevents(){\n    this.http.get(`${this.Url}/api/Gathering/events`)\n    .toPromise()\n    .then(res => this.list = res as Gathering[]);\n  }\n\n  refreshgroups(){\n    this.http.get(`${this.Url}/api/Gathering/groups`)\n    .toPromise()\n    .then(res => this.list = res as Gathering[]);\n  }\n\n  EventTitle(title: string){\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.post(`${this.Url}/api/Gathering/${username}/${password}/`+ title, title)\n    .toPromise();\n  }\n\n  CreateGathering(Gathering: Gathering){\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.post(`${this.Url}/api/Gathering/${username}/${password}`, Gathering)\n    .toPromise();\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Footer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * Footer Component\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor() { }\n/**\n * @ignore\n */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Helpline : 9876543210\n    This site is a prototype. Not intended to replace the help of certified professionals.\n    For presentational purpose only.\n    C.A.L.M © Copyright 2020. All rights reserved.\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Helpline : 9876543210    This site is a prototype. Not intended to replace the help of certified professionals.    For presentational purpose only.    C.A.L.M © Copyright 2020. All rights reserved.  '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Gathering.html":{"url":"interfaces/Gathering.html","title":"interface - Gathering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Gathering\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Gathering.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attendees\n                                \n                                \n                                        city\n                                \n                                \n                                            Optional\n                                        details\n                                \n                                \n                                        isEvent\n                                \n                                \n                                        occurrenceData\n                                \n                                \n                                            Optional\n                                        organizer\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attendees\n                                    \n                                \n                                \n                                    \n                                        attendees:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEvent\n                                    \n                                \n                                \n                                    \n                                        isEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occurrenceData\n                                    \n                                \n                                \n                                    \n                                        occurrenceData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizer\n                                    \n                                \n                                \n                                    \n                                        organizer:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import User from './User';\n\nexport default interface Gathering {\n    title:string;  \n    occurrenceData:string;  \n    organizer?:User[];  \n    attendees?:string;\n    details?:string;\n    city:string;  \n    isEvent:boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        login component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Public\n                                LoginService\n                            \n                            \n                                user\n                            \n                            \n                                UserForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                Login\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, toastr: ToastrService, LoginService: UserService, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LoginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:103\n                \n            \n\n\n            \n                \n                    used as a method for error handling\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Login\n                        \n                        \n                    \n                \n            \n            \n                \nLogin(f: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:75\n                \n            \n\n\n            \n                \n                    this is a method that gets users with the use of cookie services\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm(form?: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:59\n                \n            \n\n\n            \n                \n                    user form that declares its properties.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        exception login error handling\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:34\n                            \n                        \n\n                \n                    \n                        exception handling with error validation message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            LoginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, NgForm } from '@angular/forms'; // imports frombuilder, validtors & ngform\nimport User from '../models/User'; // imports user from models.\n/**\n * imports multiple services for user login component.\n */\nimport { ToastrService } from 'ngx-toastr'; // imports toastr\nimport { CookieService } from 'ngx-cookie-service'; // imports cookie services from ngx cookie\nimport { Router } from '@angular/router'; // imports router\nimport { UserService } from '../services/user.service'; // imports user services\nimport { HttpErrorResponse } from '@angular/common/http'; // imports an httperror response.\n\n\n/**\n * login component\n */\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  user : User;\n\n/**\n * exception login error handling\n */\n\n  error: string | undefined;\n/**\n * exception handling with error validation message\n */\n  errorMessage:string;\n  UserForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n\n/**\n *\n * @param formBuilder\n */\n  constructor( private formBuilder: FormBuilder, private router: Router,\n    private toastr: ToastrService,public LoginService:UserService,\n    private cookieService: CookieService) { }\n\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.cookieService.deleteAll();\n    this.resetForm();\n  }\n  /**\n   * user form that declares its properties.\n   * @param form\n   */\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.reset();\n    this.LoginService.formData = {\n      fName: '',\n      lName: '',\n      username: '',\n      password:'',\n      city:'',\n      isAdmin: false\n    }\n  }\n  /**\n   * this is a method that gets users with the use of cookie services\n   * @param f\n   */\n  Login(f: NgForm) {\n   \n    return  this.LoginService.getUsersByName().then(\n         user => {\n           if(user.username == ' ' || user.password == ' '){\n            this.toastr.warning('Add details', 'No input');\n           }\n           this.toastr.info('Get By Id successfully', 'Get user by id');\n           this.user = user;\n           console.log(user);\n           this.cookieService.set('username',`${this.user.username}`);\n           this.cookieService.set('password',`${this.user.password}`);\n           console.log(`${this.user.username}`);\n           console.log(`${this.user.password}`);\n           this.router.navigate(['/support-groups']);\n\n\n         },\n         err => {\n          this.handleError(err) \n          console.log(err)\n         }\n       )\n     }\n     /**\n      * used as a method for error handling\n      * @param error\n      */\n     handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n      } else {\n        this.error = `Sorry try again, error ${error.status}, ${error.error.message}`; //If the response status code was an error then display said error\n      }\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n            \n\n\n\n              \n\n\n                username\n\n                \n                  password\n                \n\n\n\n                \n\n                Login\n                \n                      {{error}} \n\n                \n                \n\n\n\n\n\n\n              \n            \n          \n\n        \n    \n    \n    \n\n    ## this form is an html form for user login view page. \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              username                                  password                                                Login                                      {{error}}                                                                                             ## this form is an html form for user login view page. '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        navbar component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admin\n                            \n                            \n                                data\n                            \n                            \n                                show\n                            \n                            \n                                showA\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('isAdmin')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                        navbar containing cookie service set to be a false value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; //imports component OnInit form\nimport { CookieService } from 'ngx-cookie-service'; // imports cookie service from  ngx\n/**\n * navbar component\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html'\n})\nexport class NavbarComponent implements OnInit {\n// a constructor with a cookie service\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n\n\n    /**\n     * navbar containing cookie service set to be a false value.\n     */\n\n    data=this.cookieService.get('username');\n    admin= this.cookieService.get('isAdmin')\n    show: boolean = false;\n    showA: boolean = false;\n   ngOnInit(): void {\n    // A conditional statement.\n     this.show = false;\n    if(this.data != \"\"){\n this.show = true;\n    }\n    else\n    this.show = false;\n   \n\n   this.showA = false;\n   if(this.admin == \"true\"){\n    this.showA = true;\n       }\n}\n}\n    \n\n    \n        \n    \n\n        &#x1F3E0;Home\n        \n            \n        \n\n    \n    \n        \n            Take the test\n        \n        \n            Events\n        \n        \n            Support-Groups\n        \n     \n        \n            Profile\n        \n      \n        \n            Register\n        \n        \n            Login\n        \n     \n        \n            Logout\n        \n        \n            AdminPage\n        \n        \n            Admin\n        \n       \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠Home                                                        Take the test                            Events                            Support-Groups                                 Profile                                  Register                            Login                                 Logout                            AdminPage                            Admin               '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notfound.component.ts\n\n\n    \n        Description\n    \n    \n        app-notfound component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * app-notfound component\n */\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html'\n})\nexport class NotfoundComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor() { }\n/**\n * @ignore\n */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Page Not Found\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page Not Found'\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                submitted\n                            \n                            \n                                updateUserForm\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userApi\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCitySelect\n                            \n                            \n                                refresh\n                            \n                            \n                                resetError\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, formBuilder: FormBuilder, userApi: UserService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCitySelect\n                        \n                        \n                    \n                \n            \n            \n                \nonCitySelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n      text: ['', Validators.required]\n    })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/profile/profile.component.ts:61\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from '../services/user.service';\nimport User from '../models/User'; // imports from user model\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgForm, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent implements OnInit {\n  user: User;\n  constructor(private cookieService: CookieService,\n    private formBuilder: FormBuilder,\n    public userApi:UserService,\n    private toastr: ToastrService) { }\n    error: string | undefined;\n    errorMessage:string;\n    cities: Array;\n    value: string;\n    submitted = false;\n    updateUserForm = this.formBuilder.group({\n      text: ['', Validators.required]\n    });\n  data=this.cookieService.get('username');\n  ngOnInit() {\n\n    this.refresh();\n   \n    this.updateUserForm = this.formBuilder.group({\n      fName: ['', Validators.required],\n      lName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n\n  });\n    \n  }\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n    } else {\n      this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n    }\n  }\n\n  refresh(){\n    return this.userApi.refreshMap()\n    .then(\n      cities => {\n        this.cities= cities;\n        console.log(this.cities)\n      })\n \n  }\n  resetError() {\n    this.error = undefined; //clears error message\n  }\n  get f() { return this.updateUserForm.controls; }\n\n  onCitySelect(event) {\n    this.value= event.target.value;\n    console.log(this.value)\n}\n  updateUser() {\n    this.submitted = true;\n    /**\n     * User form containing property values from API\n     */\n    const newUsers: User = {\n\n      fName: this.updateUserForm.get('fName').value,\n      lName: this.updateUserForm.get('lName').value,\n      username: this.updateUserForm.get('username').value,\n      city: this.value,\n      password: this.updateUserForm.get('password').value,\n      isAdmin: false\n\n    };\nconsole.log(newUsers)\n\n    this.userApi.updateUser(newUsers) // creates new user\n      .then(\n        User => {\n          if (this.error) { //conditinal statement that checks for errors in register component.\n\n           this.toastr.error('User update', 'Error');\n\n\n          } else {\n            this.toastr.info('User updated', 'Updated');\n           \n            this.resetError(); //clears error message\n          }\n        },\n        error => this.handleError(error) //handles error message\n      );\n\n\n}\n}\n\n    \n\n    \n        \n\n  \n    \n        \n          \n            \n          First Name:\n            \n                \n                    Name is required\n                \n        \n        Last Name:\n            \n                \n                    Name is required\n                \n        \n        City :\n            \n            \n          {{city}}\n            \n        \n         \n        User Name:\n            \n                \n                    Name is required\n                \n        \n         password:\n            \n                \n                    password is required\n                \n        \n\n\n        \n            Update\n    \n    \n        {{ error }}\n    \n\n  \n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              First Name:                                                Name is required                                Last Name:                                                Name is required                                City :                                  {{city}}                                     User Name:                                                Name is required                                 password:                                                password is required                                            Update                {{ error }}          '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionsComponent.html":{"url":"components/QuestionsComponent.html","title":"component - QuestionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/questions/questions.component.ts\n\n\n    \n        Description\n    \n    \n        Question component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-questions\n            \n\n\n\n\n            \n                templateUrl\n                ./questions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Submit\n                        \n                        \n                    \n                \n            \n            \n                \nSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/questions.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * Question component\n */\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html'\n})\nexport class QuestionsComponent implements OnInit {\n/**\n * @ignore\n */\n  constructor() { }\n/**\n * @ignore\n */\n  ngOnInit(): void {\n  }\n  Submit() {\n/**\n * for loop that gets the user input element by id which outputs a value.\n */\n      document.getElementById('p').innerText= (\"Recommended groups: \")\n    // for loop statement that iterates through questions presented to the client based on choices.\n     for(let i=1; i document.getElementById(`${i}`);\n     if (element.checked) {  // conditional statement\n      document.getElementById('p').innerText += element.value;\n      }\n     }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n        \n    \n      \n         \n            \n        \n      \n        Do you feel anxious on most days, worrying about\n            a lot of different things,\n             for a period of 6 months or more?\n                \n\n             \n                \n        \n      \n        Do you have an intense fear of being criticized\n            or embarrassed/humiliated, even in everyday situations (ie. public  speaking, eating in public,\n             being assertive at work or making small talk)?\n               \n\n            \n                \n        \n     \n        Do you feel fearful about a particular object or\n             situation and may go great lengths to avoid it? This may include having an injection,\n             travelling on a plane, etc?\n               \n\n            \n                \n             \n             \n        Have you experienced a traumatic event (war, assault, accident, disaster, etc) that has resulted  in you exhibiting symptoms that can  include difficulty relaxing, upsetting dreams or flashbacks of the event,  and avoidance of anything related\n             to the event for a period of a month or longer?\n               \n\n            \n                \n             \n              \n        Do you frequently experience shortness of breath, chest pain, dizziness  and excessive perspiration,\n             otherwise known as panic attacks?\n               \n\n            \n                \n             \n             \n        Do you have ongoing unwanted/intrusive thoughts\n             and fears  that you know are silly but try to relieve the anxiety by\n             carrying out certain behaviors or rituals?  For example, fear of germs\n             can lead to constant washing of hands and clothes.\n               \n\n\n        Submit\n\n\n      \n      \n      \n    \n\n\n \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                 Do you feel anxious on most days, worrying about            a lot of different things,             for a period of 6 months or more?                                                                   Do you have an intense fear of being criticized            or embarrassed/humiliated, even in everyday situations (ie. public  speaking, eating in public,             being assertive at work or making small talk)?                                                                Do you feel fearful about a particular object or             situation and may go great lengths to avoid it? This may include having an injection,             travelling on a plane, etc?                                                                             Have you experienced a traumatic event (war, assault, accident, disaster, etc) that has resulted  in you exhibiting symptoms that can  include difficulty relaxing, upsetting dreams or flashbacks of the event,  and avoidance of anything related             to the event for a period of a month or longer?                                                                              Do you frequently experience shortness of breath, chest pain, dizziness  and excessive perspiration,             otherwise known as panic attacks?                                                                             Do you have ongoing unwanted/intrusive thoughts             and fears  that you know are silly but try to relieve the anxiety by             carrying out certain behaviors or rituals?  For example, fear of germs             can lead to constant washing of hands and clothes.                       Submit                       '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        register component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                CreateUserForm\n                            \n                            \n                                error\n                            \n                            \n                                submitted\n                            \n                            \n                                User\n                            \n                            \n                                    Public\n                                userApi\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateUser\n                            \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCitySelect\n                            \n                            \n                                refresh\n                            \n                            \n                                resetError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, toastr: ToastrService, router: Router, CookieService: CookieService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:29\n                            \n                        \n\n                \n                    \n                            constructor form with its parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateUser\n                        \n                        \n                    \n                \n            \n            \n                \nCreateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:63\n                \n            \n\n\n            \n                \n                    Asserts errorr handling in the register form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:45\n                \n            \n\n\n            \n                \n                    create user form that validates user properties\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCitySelect\n                        \n                        \n                    \n                \n            \n            \n                \nonCitySelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:108\n                \n            \n\n\n            \n                \n                    method that gets users through the use of promises to accept response from api\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetError\n                        \n                        \n                    \n                \n            \n            \n                \nresetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:83\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; // import from OnInit component.\nimport User from '../models/User'; // imports from user model\nimport { Router } from '@angular/router'; // imports router\nimport { FormBuilder, Validators } from '@angular/forms'; // imports formbuilder\nimport { UserService } from '../services/user.service'; // imports from user services\nimport { ToastrService } from 'ngx-toastr'; // imports from ngx toastr\nimport { CookieService } from 'ngx-cookie-service'; // imports from ngx cookie service\nimport { HttpErrorResponse } from '@angular/common/http'; // imports Http error response\n\n/**\n * register component\n */\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\n/**\n * exports Register component.\n */\nexport class RegisterComponent implements OnInit {\n  User: User[] = [];\n  value: string;\n  error: string | undefined; // error handling implementation\n  submitted = false;\n  cities: Array;\n  CreateUserForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n\n  /**\n   * constructor form with its parameters\n   * @param formBuilder\n   * @param toastr\n   * @param router\n   * @param CookieService\n   * @param userApi\n   */\n  constructor(private formBuilder: FormBuilder, private toastr: ToastrService,\n     private router: Router,  private CookieService: CookieService,\n      public userApi:UserService) { }\n/**\n * create user form that validates user properties\n */\n  ngOnInit() {\n    this.refresh()\n   \n \n    this.CookieService.deleteAll();  // cookie service injected.\n    this.CreateUserForm = this.formBuilder.group({\n      fName: ['', Validators.required],\n      lName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n\n  });\n  \n  }\n  /**\n   * Asserts errorr handling in the register form.\n   * @param error\n   */\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n    } else {\n      this.error = `Sorry try again, error ${error.status}, ${error.error.message}`;  //If the response status code was an error then display said error\n    }\n  }\n\n  refresh(){\n    return this.userApi.refreshMap()\n    .then(\n      cities => {\n        this.cities= cities;\n        console.log(this.cities)\n      })\n \n  }\n  resetError() {\n    this.error = undefined; //clears error message\n  }\n  get f() { return this.CreateUserForm.controls; }\n\n//  const pass= this.CreateUserForm.get('Password')?.value;\n//  const salt =  bcrypt.genSaltSync(10);\n//  console.log(salt)\n// const  passhash = bcrypt.hashSync(pass, salt);\n\n\n/**\n * method that gets users through the use of promises to accept response from api\n */\n\n  // getUsers() {\n  //   return this.userApi.getUsers()\n  //     .then(\n  //       User => {\n  //         this.User = User; //uses promises to accept the api response\n  //         this.resetError(); //resets error message\n  //       },\n  //       error => {\n  //         this.handleError(error); //handles error\n  //       }\n  //     );\n  // }\n\n  onCitySelect(event) {\n    this.value= event.target.value;\n    console.log(this.value)\n}\n  CreateUser() {\n    this.submitted = true;\n    /**\n     * User form containing property values from API\n     */\n    const newUsers: User = {\n\n      fName: this.CreateUserForm.get('fName')?.value,\n      lName: this.CreateUserForm.get('lName')?.value,\n      username: this.CreateUserForm.get('username')?.value,\n      city: this.value,\n      password: this.CreateUserForm.get('password')?.value,\n      isAdmin: false\n\n    };\nconsole.log(newUsers)\n\n    this.userApi.CreateUser(newUsers) // creates new user\n      .then(\n        User => {\n          if (this.error) { //conditinal statement that checks for errors in register component.\n\n           this.toastr.error('User Register', 'Error');\n\n\n          } else {\n            this.toastr.info('User Created', 'registered');\n            this.router.navigate(['/login']);\n            this.User.unshift(User); //inserts new element at start of array\n            this.resetError(); //clears error message\n          }\n        },\n        error => this.handleError(error) //handles error message\n      );\n\n\n}\n}\n\n    \n\n    \n        \n\n\n    \n\n                \n\n                    \n\n                        Register\n\n\n                        First Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        Last Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                        City :\n                            \n                            \n                          {{city}}\n                            \n                        \n                         \n                        User Name:\n                            \n                                \n                                    Name is required\n                                \n                        \n                         password:\n                            \n                                \n                                    password is required\n                                \n                        \n\n\n                        \n                            Register\n\n                            \n                                {{ error }}\n                            \n        \n                    \n                   \n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Register                        First Name:                                                                                                Name is required                                                                                Last Name:                                                                                                Name is required                                                                                City :                                                                                  {{city}}                                                                                                     User Name:                                                                                                Name is required                                                                                 password:                                                                                                password is required                                                                                                            Register                                                            {{ error }}                                                                                       '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportGroupsComponent.html":{"url":"components/SupportGroupsComponent.html","title":"component - SupportGroupsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SupportGroupsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/support-groups/support-groups.component.ts\n\n\n    \n        Description\n    \n    \n        Support group component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support-groups\n            \n\n\n\n\n            \n                templateUrl\n                ./support-groups.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Public\n                                eventApi\n                            \n                            \n                                EventTitleForm\n                            \n                            \n                                    Public\n                                LoginService\n                            \n                            \n                                show\n                            \n                            \n                                shownotlogged\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddUser\n                            \n                            \n                                onTitleSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(LoginService: UserService, eventApi: EventsService, formBuilder: FormBuilder, cookieService: CookieService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/support-groups/support-groups.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        LoginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventApi\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddUser\n                        \n                        \n                    \n                \n            \n            \n                \nAddUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/support-groups/support-groups.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTitleSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonTitleSelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/support-groups/support-groups.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.cookieService.get('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventTitleForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    text: ['', Validators.required]\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            LoginService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shownotlogged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/support-groups/support-groups.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from '../services/user.service';\nimport { EventsService } from '../services/events.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n/**\n * Support group component\n */\n@Component({\n  selector: 'app-support-groups',\n  templateUrl: './support-groups.component.html'\n})\nexport class SupportGroupsComponent implements OnInit {\n/*\n * @ignore\n */\n  constructor(public LoginService:UserService,\n    public eventApi:EventsService,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,private toastr: ToastrService) { }\n   data=this.cookieService.get('username');\n   show: boolean = false;\n   value: string;\n   title:string;\n   shownotlogged: boolean = false;\n   EventTitleForm = this.formBuilder.group({\n    text: ['', Validators.required]\n  });\n\n/**\n * @ignore\n */\n  ngOnInit(): void {\n    this.eventApi.refreshgroups();\n    this.show = false;\n    if(this.data != \"\"){\n this.show = true;\n    }\n    else\n    this.show = false;\n\n    this.shownotlogged = true;\n    if(this.data != \"\"){\n this.shownotlogged = false;\n    }\n    else\n    this.shownotlogged = true;\n  }\n\n  onTitleSelect(event) {\n    this.value= event.target.value;\n    console.log(this.value)\n}\n\n\nAddUser(){\n   this.title= this.value;\n   console.log(this.title)\n  if (confirm('Are you sure to join this group ?')) {\n    this.eventApi.EventTitle(this.title)\n      .then(res => {\n       \n      console.log(this.title)\n        this.toastr.warning('added successfully', 'Joined Group');\n      },\n        err => {\n         \n          console.log(err);\n        })\n  }}\n \n}\n\n\n    \n\n    \n        \n\n  \n    \n  Support groups\n      TitleDatesLocationDetailsOrganizer\n        \n          \n          {{e.title}}\n          {{e.occurrenceData}} \n          {{e.city}} \n          {{e.details}} \n          {{e.organizer.username}}\n        \n      \n\n      Group members: \n      \n      \n        \n          {{ei.username}} from, {{ei.city}} is a member of {{e.title}} \n           \n        \n     \n      \n\n    \n      \n        Title:\n          \n          \n        {{e.title}}\n          \n      \n       \n      \n      \n       Attend\n     \n\n\n    \n      \n       Please login to Join a group\n      \n    \n\n  \n\n\n \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Support groups      TitleDatesLocationDetailsOrganizer                            {{e.title}}          {{e.occurrenceData}}           {{e.city}}           {{e.details}}           {{e.organizer.username}}                    Group members:                               {{ei.username}} from, {{ei.city}} is a member of {{e.title}}                                                 Title:                            {{e.title}}                                          Attend                      Please login to Join a group             '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportGroupsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TipsPageComponent.html":{"url":"components/TipsPageComponent.html","title":"component - TipsPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TipsPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tips-page/tips-page.component.ts\n\n\n    \n        Description\n    \n    \n        Tips-page Component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tips-page\n            \n\n\n\n\n            \n                templateUrl\n                ./tips-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tips-page/tips-page.component.ts:14\n                            \n                        \n\n                \n                    \n                            constructor that contains a cookie service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tips-page/tips-page.component.ts:24\n                \n            \n\n\n            \n                \n                    Method that returns Nothiing.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tips-page/tips-page.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'; // imports component, onInit\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from '../services/user.service';\n\n/**\n * Tips-page Component.\n */\n\n@Component({\n  selector: 'app-tips-page',\n  templateUrl: './tips-page.component.html'\n})\nexport class TipsPageComponent implements OnInit {\n\n/**\n * constructor that contains a cookie service\n */\n  constructor( private cookieService: CookieService, public userApi: UserService) { }\n\n/**\n * Method that returns Nothiing.\n */\n  ngOnInit(): void {\n    this.cookieService.deleteAll();\n    this.userApi.refreshList();\n   \n  }\n\n}\n\n    \n\n    \n        \n\n  C.A.L.M(Center for Anxiety and Lifestyle Mediation)\n  \n  \n    \n      \n        \n        \n        \n            \n            \n              \n              \n              \n              \n              \n            \n        \n            \n            \n        \n              \n                \n                \n                \n                 \n                \n              \n        \n              \n                \n                \n                   \n                \n              \n            \n              \n                \n                \n                    \n                \n              \n              \n                \n                \n                  \n                 \n                \n              \n        \n              \n                \n                \n                   \n                \n              \n            \n          \n          \n            \n        \n            \n            \n              \n              Previous\n            \n            \n              \n              Next\n            \n       \n          \n\n\n      \n      \n    \n  \n\n\n  Total number of users: {{ userApi?.list?.length | number }}\n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  C.A.L.M(Center for Anxiety and Lifestyle Mediationrevious                                                    Next                                                 Total number of users: {{ userApi?.list?.length | number }}  '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TipsPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/User.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        fName\n                                \n                                \n                                        isAdmin\n                                \n                                \n                                        lName\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fName\n                                    \n                                \n                                \n                                    \n                                        fName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lName\n                                    \n                                \n                                \n                                    \n                                        lName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface User {\n    lName:string;  \n    fName:string;  \n    username:string;  \n    password:string;  \n   isAdmin: boolean;\n   city:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n            \n                Description\n            \n            \n                root injection provided and exported user services\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                formData\n                            \n                            \n                                header\n                            \n                            \n                                list\n                            \n                            \n                                Url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateAdmin\n                            \n                            \n                                CreateUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                getUsersBycookie\n                            \n                            \n                                getUsersByName\n                            \n                            \n                                refreshList\n                            \n                            \n                                refreshMap\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, CookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateAdmin\n                        \n                        \n                    \n                \n            \n            \n                \nCreateAdmin(User: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CreateUser\n                        \n                        \n                    \n                \n            \n            \n                \nCreateUser(User: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:34\n                \n            \n\n\n            \n                \n                    creats users using the api url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:50\n                \n            \n\n\n            \n                \n                    gets users from using api url.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsersBycookie\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsersBycookie()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsersByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsersByName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:57\n                \n            \n\n\n            \n                \n                    this method gets users by their given name respectively.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshList\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshMap\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(User: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                        user form with a private Http client.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport User from '../models/User';\nimport { CookieService } from 'ngx-cookie-service';\n/**\n * root injection provided and exported user services\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  Url: string;\n  header: any;\n  list: User[];\n  cities: Array;\n/**\n * user form with a private Http client.\n */\n  formData:User;\n  constructor(private http: HttpClient,private CookieService: CookieService) {\n\n    this.Url = environment.ApiBaseUrl;\n    const headerSettings: { [name: string]: string | string[]; } = {};\n    this.header = new HttpHeaders(headerSettings);\n\n  }\n\n\n  /**\n * creats users using the api url\n * @param User\n */\n  CreateUser(User: User) {\n    return this.http.post(`${this.Url}/api/Users/`, User)\n    .toPromise();\n  }\n\n\n  CreateAdmin(User: User) {\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.post(`${this.Url}/api/Admin/${username}/${password}`, User)\n    .toPromise();\n  }\n  \n  /** gets users from using api url.\n   * @param User\n   */\n  getUsers() {\n    return this.http.get(`${this.Url}/api/Users/`)\n      .toPromise();\n  }\n  /**\n   * this method gets users by their given name respectively.\n   */\n  getUsersByName(){\n    return this.http.get(`${this.Url}/api/Users/`+ this.formData.username +\"/\"+ this.formData.password)\n    .toPromise();\n  }\n\n  getUsersBycookie(){\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.get(`${this.Url}/api/Users/${username}/${password}`)\n    .toPromise();\n  }\n  refreshList(){\n    this.http.get(`${this.Url}/api/Users`)\n    .toPromise()\n    .then(res => this.list = res as User[]);\n  }\n\n  refreshMap(){\n return   this.http.get>(`${this.Url}/api/Map`)\n    .toPromise()\n  }\n  \n  deleteUser(username: string,password: string) {\n    return this.http.delete(`${this.Url}/api/Users/`+ username +\"/\"+ password, { headers: this.header });\n  }\n\n  updateUser(User: User) {\n    const username =this.CookieService.get('username');\n    const password =this.CookieService.get('password');\n    return this.http.put(`${this.Url}/api/Users/${username}/${password}`, User).toPromise()\n  }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserviewComponent.html":{"url":"components/UserviewComponent.html","title":"component - UserviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/adminedit/userview/userview.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-userview\n            \n\n\n\n\n            \n                templateUrl\n                ./userview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userApi: UserService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/adminedit/userview/userview.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/adminedit/userview/userview.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/adminedit/userview/userview.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport User from 'src/app/models/User';\n\n@Component({\n  selector: 'app-userview',\n  templateUrl: './userview.component.html'\n\n})\nexport class UserviewComponent implements OnInit {\n\n  constructor( public userApi:UserService, private toastr: ToastrService ) { }\n\n  ngOnInit() {\n    this.userApi.refreshList();\n  }\n\n \n\n  // onDelete(username,password) {\n  //   if (confirm('Are you sure to delete this record ?')) {\n  //     this.userApi.deleteUser(username,password)\n  //       .subscribe(res => {\n  \n  //         this.userApi.refreshList();\n  //         this.toastr.warning('Deleted successfully', 'user deleted');\n  //       },\n  //         err => {\n     \n  //           console.log(err);\n  //         })\n  //   }\n  //   }\n\n}\n\n    \n\n    \n        users\n    CitynameAdmin\n      \n        {{u.city}}  \n        {{u.username}}  \n        {{u.isAdmin}}\n       \n       \n      \n      \n  \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'users    CitynameAdmin              {{u.city}}          {{u.username}}          {{u.isAdmin}}                                '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewmyselfComponent.html":{"url":"components/ViewmyselfComponent.html","title":"component - ViewmyselfComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewmyselfComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/viewmyself/viewmyself.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-viewmyself\n            \n\n\n\n\n            \n                templateUrl\n                ./viewmyself.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userApi: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/viewmyself/viewmyself.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userApi\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/viewmyself/viewmyself.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport User from 'src/app/models/User';\n\n@Component({\n  selector: 'app-viewmyself',\n  templateUrl: './viewmyself.component.html'\n})\nexport class ViewmyselfComponent implements OnInit {\n  user: User;\n  error: string | undefined;\n  constructor(public userApi:UserService,) { }\n\n  ngOnInit(): void {\n    this.userApi.getUsersBycookie()\n    .then(\n      user => {\n        this.user =user;\n  },\n        error => {\n          this.handleError(error); //handles error\n        }\n      );\n  }\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.error = `An error occurred: ${error.error.message}`; //in the event of a network error. Add error message.\n    } else {\n      this.error = `Backend returned code ${error.status}, body was: ${error.error}`; //If the response status code was an error then display said error\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n   FristName: {{user.fName}} LastName: {{user.lName}} City: {{user.city}}\n    \n    Username: {{user.username}} Password: {{user.password}}\n \n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       FristName: {{user.fName}} LastName: {{user.lName}} City: {{user.city}}        Username: {{user.username}} Password: {{user.password}}     '\n    var COMPONENTS = [{'name': 'AddgatheringComponent', 'selector': 'app-addgathering'},{'name': 'AdmineditComponent', 'selector': 'app-adminedit'},{'name': 'AdminloginComponent', 'selector': 'app-adminlogin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SupportGroupsComponent', 'selector': 'app-support-groups'},{'name': 'TipsPageComponent', 'selector': 'app-tips-page'},{'name': 'UserviewComponent', 'selector': 'app-userview'},{'name': 'ViewmyselfComponent', 'selector': 'app-viewmyself'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewmyselfComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/adminedit/addgathering/addgathering.component.ts\n            \n            component\n            AddgatheringComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/adminedit/adminedit.component.ts\n            \n            component\n            AdmineditComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/adminedit/userview/userview.component.ts\n            \n            component\n            UserviewComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/adminlogin/adminlogin.component.ts\n            \n            component\n            AdminloginComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/models/Gathering.ts\n            \n            interface\n            Gathering\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/User.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/profile/viewmyself/viewmyself.component.ts\n            \n            component\n            ViewmyselfComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/questions/questions.component.ts\n            \n            component\n            QuestionsComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/services/events.service.ts\n            \n            injectable\n            EventsService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                src/app/support-groups/support-groups.component.ts\n            \n            component\n            SupportGroupsComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/tips-page/tips-page.component.ts\n            \n            component\n            TipsPageComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.3\n        \n            @angular/common : ~9.1.3\n        \n            @angular/compiler : ~9.1.3\n        \n            @angular/core : ~9.1.3\n        \n            @angular/forms : ~9.1.3\n        \n            @angular/platform-browser : ~9.1.3\n        \n            @angular/platform-browser-dynamic : ~9.1.3\n        \n            @angular/router : ~9.1.3\n        \n            bcryptjs : ^2.4.3\n        \n            bootstrap : ^4.4.1\n        \n            jquery : ^3.5.0\n        \n            ngx-cookie-service : ^3.0.4\n        \n            ngx-toastr : ^12.0.1\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.5.4\n        \n            toastr : ^2.1.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCalm\nThis project was generated with Angular CLI version 9.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddgatheringComponent\n\nAddgatheringComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddgatheringComponent->AppModule\n\n\n\n\n\nAdmineditComponent\n\nAdmineditComponent\n\nAppModule -->\n\nAdmineditComponent->AppModule\n\n\n\n\n\nAdminloginComponent\n\nAdminloginComponent\n\nAppModule -->\n\nAdminloginComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nAppModule -->\n\nQuestionsComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nSupportGroupsComponent\n\nSupportGroupsComponent\n\nAppModule -->\n\nSupportGroupsComponent->AppModule\n\n\n\n\n\nTipsPageComponent\n\nTipsPageComponent\n\nAppModule -->\n\nTipsPageComponent->AppModule\n\n\n\n\n\nUserviewComponent\n\nUserviewComponent\n\nAppModule -->\n\nUserviewComponent->AppModule\n\n\n\n\n\nViewmyselfComponent\n\nViewmyselfComponent\n\nAppModule -->\n\nViewmyselfComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  ApiBaseUrl: 'http://a9f0bbf7745324be4ade24e93f11495a-1232551203.us-east-2.elb.amazonaws.com',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ApiBaseUrl: 'http://a9f0bbf7745324be4ade24e93f11495a-1232551203.us-east-2.elb.amazonaws.com',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
